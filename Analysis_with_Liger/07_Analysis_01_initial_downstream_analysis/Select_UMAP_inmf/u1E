Attaching SeuratObject
Loading required package: ggraph
Loading required package: ggplot2
Loading required package: cowplot
Loading required package: Matrix
Loading required package: patchwork

Attaching package: ‘patchwork’

The following object is masked from ‘package:cowplot’:

    align_plots


Attaching package: ‘ggpubr’

The following object is masked from ‘package:cowplot’:

    get_legend


Attaching package: ‘ggthemes’

The following object is masked from ‘package:cowplot’:

    theme_map


Attaching package: ‘tidyr’

The following objects are masked from ‘package:Matrix’:

    expand, pack, unpack


Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union


Attaching package: ‘readr’

The following object is masked from ‘package:scales’:

    col_factor


clusterProfiler v3.18.1  For help: https://guangchuangyu.github.io/software/clusterProfiler

If you use clusterProfiler in published research, please cite:
Guangchuang Yu, Li-Gen Wang, Yanyan Han, Qing-Yu He. clusterProfiler: an R package for comparing biological themes among gene clusters. OMICS: A Journal of Integrative Biology. 2012, 16(5):284-287.

Attaching package: ‘clusterProfiler’

The following object is masked from ‘package:stats’:

    filter

Loading required package: princurve
Loading required package: viridisLite

Attaching package: ‘viridis’

The following object is masked from ‘package:scales’:

    viridis_pal

Loading required package: SummarizedExperiment
Loading required package: MatrixGenerics
Loading required package: matrixStats

Attaching package: ‘matrixStats’

The following object is masked from ‘package:dplyr’:

    count


Attaching package: ‘MatrixGenerics’

The following objects are masked from ‘package:matrixStats’:

    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,
    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,
    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,
    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,
    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,
    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,
    colWeightedMeans, colWeightedMedians, colWeightedSds,
    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,
    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,
    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,
    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,
    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,
    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,
    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,
    rowWeightedSds, rowWeightedVars

Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:dplyr’:

    combine, intersect, setdiff, union

The following object is masked from ‘package:rliger’:

    normalize

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames,
    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,
    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,
    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,
    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,
    union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following object is masked from ‘package:clusterProfiler’:

    rename

The following objects are masked from ‘package:dplyr’:

    first, rename

The following object is masked from ‘package:tidyr’:

    expand

The following object is masked from ‘package:Matrix’:

    expand

The following object is masked from ‘package:base’:

    expand.grid

Loading required package: IRanges

Attaching package: ‘IRanges’

The following object is masked from ‘package:clusterProfiler’:

    slice

The following objects are masked from ‘package:dplyr’:

    collapse, desc, slice

Loading required package: GenomeInfoDb
Loading required package: Biobase
Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.


Attaching package: ‘Biobase’

The following object is masked from ‘package:MatrixGenerics’:

    rowMedians

The following objects are masked from ‘package:matrixStats’:

    anyMissing, rowMedians


Attaching package: ‘SummarizedExperiment’

The following object is masked from ‘package:SeuratObject’:

    Assays

The following object is masked from ‘package:Seurat’:

    Assays


Attaching package: ‘enrichplot’

The following object is masked from ‘package:ggpubr’:

    color_palette

Loading required package: AnnotationDbi

Attaching package: ‘AnnotationDbi’

The following object is masked from ‘package:clusterProfiler’:

    select

The following object is masked from ‘package:dplyr’:

    select


Loading required package: registry
Loading required package: rngtools
Loading required package: cluster
NMF - BioConductor layer [OK] | Shared memory capabilities [OK] | Cores 2/2

Attaching package: ‘NMF’

The following object is masked from ‘package:S4Vectors’:

    nrun


Attaching package: ‘reshape2’

The following object is masked from ‘package:tidyr’:

    smiths

Warning message:
package ‘ggbeeswarm’ was built under R version 4.2.0 
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
22:48:11 UMAP embedding parameters a = 0.9922 b = 1.112
22:48:11 Read 49148 rows and found 50 numeric columns
22:48:11 Using Annoy for neighbor search, n_neighbors = 20
22:48:11 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
22:48:20 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec856ff2b778
22:48:20 Searching Annoy index using 1 thread, search_k = 2000
22:48:36 Annoy recall = 100%
22:48:37 Commencing smooth kNN distance calibration using 1 thread
22:48:39 Initializing from normalized Laplacian + noise
22:48:41 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
22:49:32 Optimization finished
22:49:35 UMAP embedding parameters a = 0.9922 b = 1.112
22:49:35 Read 49148 rows and found 50 numeric columns
22:49:35 Using Annoy for neighbor search, n_neighbors = 20
22:49:35 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
22:49:44 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec854cf1a792
22:49:45 Searching Annoy index using 1 thread, search_k = 2000
22:50:00 Annoy recall = 100%
22:50:01 Commencing smooth kNN distance calibration using 1 thread
22:50:03 Initializing from normalized Laplacian + noise
22:50:05 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
22:50:55 Optimization finished
22:50:57 UMAP embedding parameters a = 0.9922 b = 1.112
22:50:57 Read 49148 rows and found 50 numeric columns
22:50:57 Using Annoy for neighbor search, n_neighbors = 20
22:50:57 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
22:51:07 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8516aece3d
22:51:07 Searching Annoy index using 1 thread, search_k = 2000
22:51:22 Annoy recall = 100%
22:51:23 Commencing smooth kNN distance calibration using 1 thread
22:51:25 Initializing from normalized Laplacian + noise
22:51:27 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
22:52:16 Optimization finished
22:52:18 UMAP embedding parameters a = 0.9922 b = 1.112
22:52:19 Read 49148 rows and found 50 numeric columns
22:52:19 Using Annoy for neighbor search, n_neighbors = 20
22:52:19 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
22:52:28 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec857a542df0
22:52:28 Searching Annoy index using 1 thread, search_k = 2000
22:52:43 Annoy recall = 100%
22:52:44 Commencing smooth kNN distance calibration using 1 thread
22:52:47 Initializing from normalized Laplacian + noise
22:52:48 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
22:53:38 Optimization finished
22:53:40 UMAP embedding parameters a = 0.9922 b = 1.112
22:53:40 Read 49148 rows and found 50 numeric columns
22:53:40 Using Annoy for neighbor search, n_neighbors = 20
22:53:40 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
22:53:50 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85e596e5c
22:53:50 Searching Annoy index using 1 thread, search_k = 2000
22:54:05 Annoy recall = 100%
22:54:06 Commencing smooth kNN distance calibration using 1 thread
22:54:08 Initializing from normalized Laplacian + noise
22:54:10 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
22:54:59 Optimization finished
22:55:01 UMAP embedding parameters a = 0.9922 b = 1.112
22:55:01 Read 49148 rows and found 50 numeric columns
22:55:01 Using Annoy for neighbor search, n_neighbors = 20
22:55:01 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
22:55:11 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec856d9a47bd
22:55:11 Searching Annoy index using 1 thread, search_k = 2000
22:55:26 Annoy recall = 100%
22:55:26 Commencing smooth kNN distance calibration using 1 thread
22:55:29 Initializing from normalized Laplacian + noise
22:55:30 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
22:56:21 Optimization finished
22:56:23 UMAP embedding parameters a = 0.9922 b = 1.112
22:56:23 Read 49148 rows and found 50 numeric columns
22:56:23 Using Annoy for neighbor search, n_neighbors = 20
22:56:23 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
22:56:33 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec854d7e592b
22:56:33 Searching Annoy index using 1 thread, search_k = 2000
22:56:48 Annoy recall = 100%
22:56:49 Commencing smooth kNN distance calibration using 1 thread
22:56:52 Initializing from normalized Laplacian + noise
22:56:53 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
22:57:43 Optimization finished
22:57:45 UMAP embedding parameters a = 0.9922 b = 1.112
22:57:45 Read 49148 rows and found 50 numeric columns
22:57:45 Using Annoy for neighbor search, n_neighbors = 20
22:57:45 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
22:57:55 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85172e1376
22:57:55 Searching Annoy index using 1 thread, search_k = 2000
22:58:10 Annoy recall = 100%
22:58:10 Commencing smooth kNN distance calibration using 1 thread
22:58:13 Initializing from normalized Laplacian + noise
22:58:15 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
22:59:04 Optimization finished
22:59:07 UMAP embedding parameters a = 0.9922 b = 1.112
22:59:07 Read 49148 rows and found 50 numeric columns
22:59:07 Using Annoy for neighbor search, n_neighbors = 20
22:59:07 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
22:59:16 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec856c656894
22:59:16 Searching Annoy index using 1 thread, search_k = 2000
22:59:32 Annoy recall = 100%
22:59:32 Commencing smooth kNN distance calibration using 1 thread
22:59:35 Initializing from normalized Laplacian + noise
22:59:37 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:00:26 Optimization finished
23:00:29 UMAP embedding parameters a = 0.9922 b = 1.112
23:00:29 Read 49148 rows and found 50 numeric columns
23:00:29 Using Annoy for neighbor search, n_neighbors = 20
23:00:29 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:00:38 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec857566e871
23:00:38 Searching Annoy index using 1 thread, search_k = 2000
23:00:54 Annoy recall = 100%
23:00:54 Commencing smooth kNN distance calibration using 1 thread
23:00:57 Initializing from normalized Laplacian + noise
23:00:59 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:01:48 Optimization finished
23:01:50 UMAP embedding parameters a = 0.9922 b = 1.112
23:01:50 Read 49148 rows and found 50 numeric columns
23:01:50 Using Annoy for neighbor search, n_neighbors = 20
23:01:50 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:02:00 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8535438b6b
23:02:00 Searching Annoy index using 1 thread, search_k = 2000
23:02:15 Annoy recall = 100%
23:02:16 Commencing smooth kNN distance calibration using 1 thread
23:02:18 Initializing from normalized Laplacian + noise
23:02:20 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:03:10 Optimization finished
23:03:12 UMAP embedding parameters a = 0.9922 b = 1.112
23:03:12 Read 49148 rows and found 50 numeric columns
23:03:12 Using Annoy for neighbor search, n_neighbors = 20
23:03:12 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:03:21 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85334f9ad7
23:03:21 Searching Annoy index using 1 thread, search_k = 2000
23:03:37 Annoy recall = 100%
23:03:38 Commencing smooth kNN distance calibration using 1 thread
23:03:40 Initializing from normalized Laplacian + noise
23:03:42 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:04:31 Optimization finished
23:04:33 UMAP embedding parameters a = 0.9922 b = 1.112
23:04:34 Read 49148 rows and found 50 numeric columns
23:04:34 Using Annoy for neighbor search, n_neighbors = 20
23:04:34 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:04:43 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85163ce50f
23:04:43 Searching Annoy index using 1 thread, search_k = 2000
23:04:58 Annoy recall = 100%
23:04:59 Commencing smooth kNN distance calibration using 1 thread
23:05:01 Initializing from normalized Laplacian + noise
23:05:03 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:05:53 Optimization finished
23:05:55 UMAP embedding parameters a = 0.9922 b = 1.112
23:05:55 Read 49148 rows and found 50 numeric columns
23:05:55 Using Annoy for neighbor search, n_neighbors = 20
23:05:55 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:06:05 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec851afd1d9d
23:06:05 Searching Annoy index using 1 thread, search_k = 2000
23:06:20 Annoy recall = 100%
23:06:21 Commencing smooth kNN distance calibration using 1 thread
23:06:23 Initializing from normalized Laplacian + noise
23:06:25 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:07:15 Optimization finished
23:07:18 UMAP embedding parameters a = 0.9922 b = 1.112
23:07:18 Read 49148 rows and found 50 numeric columns
23:07:18 Using Annoy for neighbor search, n_neighbors = 20
23:07:18 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:07:27 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec853e6769aa
23:07:27 Searching Annoy index using 1 thread, search_k = 2000
23:07:42 Annoy recall = 100%
23:07:43 Commencing smooth kNN distance calibration using 1 thread
23:07:46 Initializing from normalized Laplacian + noise
23:07:47 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:08:37 Optimization finished
23:08:40 UMAP embedding parameters a = 0.9922 b = 1.112
23:08:40 Read 49148 rows and found 50 numeric columns
23:08:40 Using Annoy for neighbor search, n_neighbors = 20
23:08:40 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:08:49 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8541296366
23:08:49 Searching Annoy index using 1 thread, search_k = 2000
23:09:04 Annoy recall = 100%
23:09:05 Commencing smooth kNN distance calibration using 1 thread
23:09:08 Initializing from normalized Laplacian + noise
23:09:09 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:09:59 Optimization finished
23:10:02 UMAP embedding parameters a = 0.9922 b = 1.112
23:10:02 Read 49148 rows and found 50 numeric columns
23:10:02 Using Annoy for neighbor search, n_neighbors = 20
23:10:02 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:10:11 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8515b85384
23:10:11 Searching Annoy index using 1 thread, search_k = 2000
23:10:27 Annoy recall = 100%
23:10:28 Commencing smooth kNN distance calibration using 1 thread
23:10:30 Initializing from normalized Laplacian + noise
23:10:32 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:11:22 Optimization finished
23:11:24 UMAP embedding parameters a = 0.9922 b = 1.112
23:11:24 Read 49148 rows and found 50 numeric columns
23:11:24 Using Annoy for neighbor search, n_neighbors = 20
23:11:24 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:11:34 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8526cc7163
23:11:34 Searching Annoy index using 1 thread, search_k = 2000
23:11:49 Annoy recall = 100%
23:11:50 Commencing smooth kNN distance calibration using 1 thread
23:11:52 Initializing from normalized Laplacian + noise
23:11:54 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:12:43 Optimization finished
23:12:46 UMAP embedding parameters a = 0.9922 b = 1.112
23:12:46 Read 49148 rows and found 50 numeric columns
23:12:46 Using Annoy for neighbor search, n_neighbors = 20
23:12:46 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:12:55 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8560189e13
23:12:55 Searching Annoy index using 1 thread, search_k = 2000
23:13:11 Annoy recall = 100%
23:13:12 Commencing smooth kNN distance calibration using 1 thread
23:13:14 Initializing from normalized Laplacian + noise
23:13:16 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:14:06 Optimization finished
23:14:08 UMAP embedding parameters a = 0.9922 b = 1.112
23:14:08 Read 49148 rows and found 50 numeric columns
23:14:08 Using Annoy for neighbor search, n_neighbors = 20
23:14:08 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:14:17 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec854dfd33d9
23:14:17 Searching Annoy index using 1 thread, search_k = 2000
23:14:32 Annoy recall = 100%
23:14:33 Commencing smooth kNN distance calibration using 1 thread
23:14:36 Initializing from normalized Laplacian + noise
23:14:37 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:15:27 Optimization finished
23:15:29 UMAP embedding parameters a = 0.9922 b = 1.112
23:15:29 Read 49148 rows and found 50 numeric columns
23:15:29 Using Annoy for neighbor search, n_neighbors = 20
23:15:29 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:15:38 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8545f44a4c
23:15:38 Searching Annoy index using 1 thread, search_k = 2000
23:15:53 Annoy recall = 100%
23:15:54 Commencing smooth kNN distance calibration using 1 thread
23:15:57 Initializing from normalized Laplacian + noise
23:15:58 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:16:48 Optimization finished
23:16:50 UMAP embedding parameters a = 0.9922 b = 1.112
23:16:50 Read 49148 rows and found 50 numeric columns
23:16:50 Using Annoy for neighbor search, n_neighbors = 20
23:16:50 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:17:00 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85140da580
23:17:00 Searching Annoy index using 1 thread, search_k = 2000
23:17:15 Annoy recall = 100%
23:17:16 Commencing smooth kNN distance calibration using 1 thread
23:17:18 Initializing from normalized Laplacian + noise
23:17:20 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:18:09 Optimization finished
23:18:11 UMAP embedding parameters a = 0.9922 b = 1.112
23:18:12 Read 49148 rows and found 50 numeric columns
23:18:12 Using Annoy for neighbor search, n_neighbors = 20
23:18:12 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:18:21 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85337e1a65
23:18:21 Searching Annoy index using 1 thread, search_k = 2000
23:18:36 Annoy recall = 100%
23:18:37 Commencing smooth kNN distance calibration using 1 thread
23:18:39 Initializing from normalized Laplacian + noise
23:18:41 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:19:31 Optimization finished
23:19:34 UMAP embedding parameters a = 0.9922 b = 1.112
23:19:34 Read 49148 rows and found 50 numeric columns
23:19:34 Using Annoy for neighbor search, n_neighbors = 20
23:19:34 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:19:43 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85386e7a7f
23:19:44 Searching Annoy index using 1 thread, search_k = 2000
23:19:59 Annoy recall = 100%
23:20:00 Commencing smooth kNN distance calibration using 1 thread
23:20:03 Initializing from normalized Laplacian + noise
23:20:04 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:20:55 Optimization finished
23:20:58 UMAP embedding parameters a = 0.9922 b = 1.112
23:20:58 Read 49148 rows and found 50 numeric columns
23:20:58 Using Annoy for neighbor search, n_neighbors = 20
23:20:58 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:21:07 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85a050ea
23:21:07 Searching Annoy index using 1 thread, search_k = 2000
23:21:22 Annoy recall = 100%
23:21:23 Commencing smooth kNN distance calibration using 1 thread
23:21:26 Initializing from normalized Laplacian + noise
23:21:27 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:22:17 Optimization finished
23:22:19 UMAP embedding parameters a = 0.9922 b = 1.112
23:22:19 Read 49148 rows and found 50 numeric columns
23:22:19 Using Annoy for neighbor search, n_neighbors = 20
23:22:19 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:22:28 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec855ba16006
23:22:28 Searching Annoy index using 1 thread, search_k = 2000
23:22:44 Annoy recall = 100%
23:22:45 Commencing smooth kNN distance calibration using 1 thread
23:22:47 Initializing from normalized Laplacian + noise
23:22:49 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:23:39 Optimization finished
23:23:41 UMAP embedding parameters a = 0.9922 b = 1.112
23:23:41 Read 49148 rows and found 50 numeric columns
23:23:41 Using Annoy for neighbor search, n_neighbors = 20
23:23:41 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:23:51 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec852316a9a0
23:23:51 Searching Annoy index using 1 thread, search_k = 2000
23:24:06 Annoy recall = 100%
23:24:07 Commencing smooth kNN distance calibration using 1 thread
23:24:09 Initializing from normalized Laplacian + noise
23:24:11 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:25:01 Optimization finished
23:25:03 UMAP embedding parameters a = 0.9922 b = 1.112
23:25:04 Read 49148 rows and found 50 numeric columns
23:25:04 Using Annoy for neighbor search, n_neighbors = 20
23:25:04 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:25:13 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8556a39603
23:25:13 Searching Annoy index using 1 thread, search_k = 2000
23:25:28 Annoy recall = 100%
23:25:29 Commencing smooth kNN distance calibration using 1 thread
23:25:32 Initializing from normalized Laplacian + noise
23:25:33 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:26:23 Optimization finished
23:26:26 UMAP embedding parameters a = 0.9922 b = 1.112
23:26:26 Read 49148 rows and found 50 numeric columns
23:26:26 Using Annoy for neighbor search, n_neighbors = 20
23:26:26 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:26:35 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec858b8bf17
23:26:35 Searching Annoy index using 1 thread, search_k = 2000
23:26:50 Annoy recall = 100%
23:26:51 Commencing smooth kNN distance calibration using 1 thread
23:26:54 Initializing from normalized Laplacian + noise
23:26:55 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:27:45 Optimization finished
23:27:47 UMAP embedding parameters a = 0.9922 b = 1.112
23:27:47 Read 49148 rows and found 50 numeric columns
23:27:47 Using Annoy for neighbor search, n_neighbors = 20
23:27:47 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:27:57 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8520dcc8b4
23:27:57 Searching Annoy index using 1 thread, search_k = 2000
23:28:12 Annoy recall = 100%
23:28:13 Commencing smooth kNN distance calibration using 1 thread
23:28:15 Initializing from normalized Laplacian + noise
23:28:17 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:29:07 Optimization finished
23:29:10 UMAP embedding parameters a = 0.9922 b = 1.112
23:29:10 Read 49148 rows and found 50 numeric columns
23:29:10 Using Annoy for neighbor search, n_neighbors = 20
23:29:10 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:29:19 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85453168ad
23:29:19 Searching Annoy index using 1 thread, search_k = 2000
23:29:35 Annoy recall = 100%
23:29:36 Commencing smooth kNN distance calibration using 1 thread
23:29:39 Initializing from normalized Laplacian + noise
23:29:40 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:30:31 Optimization finished
23:30:34 UMAP embedding parameters a = 0.9922 b = 1.112
23:30:34 Read 49148 rows and found 50 numeric columns
23:30:34 Using Annoy for neighbor search, n_neighbors = 20
23:30:34 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:30:43 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8578ab768f
23:30:43 Searching Annoy index using 1 thread, search_k = 2000
23:31:00 Annoy recall = 100%
23:31:00 Commencing smooth kNN distance calibration using 1 thread
23:31:03 Initializing from normalized Laplacian + noise
23:31:05 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:31:56 Optimization finished
23:31:58 UMAP embedding parameters a = 0.9922 b = 1.112
23:31:58 Read 49148 rows and found 50 numeric columns
23:31:58 Using Annoy for neighbor search, n_neighbors = 20
23:31:58 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:32:08 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec856dce7047
23:32:08 Searching Annoy index using 1 thread, search_k = 2000
23:32:25 Annoy recall = 100%
23:32:25 Commencing smooth kNN distance calibration using 1 thread
23:32:28 Initializing from normalized Laplacian + noise
23:32:30 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:33:21 Optimization finished
23:33:23 UMAP embedding parameters a = 0.9922 b = 1.112
23:33:23 Read 49148 rows and found 50 numeric columns
23:33:23 Using Annoy for neighbor search, n_neighbors = 20
23:33:23 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:33:33 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec855be036ea
23:33:33 Searching Annoy index using 1 thread, search_k = 2000
23:33:49 Annoy recall = 100%
23:33:50 Commencing smooth kNN distance calibration using 1 thread
23:33:53 Initializing from normalized Laplacian + noise
23:33:54 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:34:45 Optimization finished
23:34:47 UMAP embedding parameters a = 0.9922 b = 1.112
23:34:47 Read 49148 rows and found 50 numeric columns
23:34:47 Using Annoy for neighbor search, n_neighbors = 20
23:34:47 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:34:56 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8572ffa47f
23:34:56 Searching Annoy index using 1 thread, search_k = 2000
23:35:12 Annoy recall = 100%
23:35:13 Commencing smooth kNN distance calibration using 1 thread
23:35:16 Initializing from normalized Laplacian + noise
23:35:18 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:36:08 Optimization finished
23:36:10 UMAP embedding parameters a = 0.9922 b = 1.112
23:36:10 Read 49148 rows and found 50 numeric columns
23:36:10 Using Annoy for neighbor search, n_neighbors = 20
23:36:10 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:36:20 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec857c27dea3
23:36:20 Searching Annoy index using 1 thread, search_k = 2000
23:36:36 Annoy recall = 100%
23:36:37 Commencing smooth kNN distance calibration using 1 thread
23:36:40 Initializing from normalized Laplacian + noise
23:36:41 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:37:32 Optimization finished
23:37:35 UMAP embedding parameters a = 0.9922 b = 1.112
23:37:35 Read 49148 rows and found 50 numeric columns
23:37:35 Using Annoy for neighbor search, n_neighbors = 20
23:37:35 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:37:44 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85497a7ea8
23:37:44 Searching Annoy index using 1 thread, search_k = 2000
23:38:01 Annoy recall = 100%
23:38:02 Commencing smooth kNN distance calibration using 1 thread
23:38:05 Initializing from normalized Laplacian + noise
23:38:07 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:38:58 Optimization finished
23:39:00 UMAP embedding parameters a = 0.9922 b = 1.112
23:39:00 Read 49148 rows and found 50 numeric columns
23:39:00 Using Annoy for neighbor search, n_neighbors = 20
23:39:00 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:39:10 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85407dfdab
23:39:10 Searching Annoy index using 1 thread, search_k = 2000
23:39:26 Annoy recall = 100%
23:39:27 Commencing smooth kNN distance calibration using 1 thread
23:39:30 Initializing from normalized Laplacian + noise
23:39:31 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:40:22 Optimization finished
23:40:24 UMAP embedding parameters a = 0.9922 b = 1.112
23:40:25 Read 49148 rows and found 50 numeric columns
23:40:25 Using Annoy for neighbor search, n_neighbors = 20
23:40:25 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:40:34 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec851355f21a
23:40:34 Searching Annoy index using 1 thread, search_k = 2000
23:40:49 Annoy recall = 100%
23:40:51 Commencing smooth kNN distance calibration using 1 thread
23:40:53 Initializing from normalized Laplacian + noise
23:40:55 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:41:44 Optimization finished
23:41:47 UMAP embedding parameters a = 0.9922 b = 1.112
23:41:47 Read 49148 rows and found 50 numeric columns
23:41:47 Using Annoy for neighbor search, n_neighbors = 20
23:41:47 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:41:56 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8535dfe73c
23:41:56 Searching Annoy index using 1 thread, search_k = 2000
23:42:11 Annoy recall = 100%
23:42:12 Commencing smooth kNN distance calibration using 1 thread
23:42:14 Initializing from normalized Laplacian + noise
23:42:16 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:43:06 Optimization finished
23:43:08 UMAP embedding parameters a = 0.9922 b = 1.112
23:43:08 Read 49148 rows and found 50 numeric columns
23:43:08 Using Annoy for neighbor search, n_neighbors = 20
23:43:08 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:43:18 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8535e4e61c
23:43:18 Searching Annoy index using 1 thread, search_k = 2000
23:43:33 Annoy recall = 100%
23:43:34 Commencing smooth kNN distance calibration using 1 thread
23:43:37 Initializing from normalized Laplacian + noise
23:43:38 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:44:28 Optimization finished
23:44:30 UMAP embedding parameters a = 0.9922 b = 1.112
23:44:30 Read 49148 rows and found 50 numeric columns
23:44:30 Using Annoy for neighbor search, n_neighbors = 20
23:44:30 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:44:40 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8548997d85
23:44:40 Searching Annoy index using 1 thread, search_k = 2000
23:44:55 Annoy recall = 100%
23:44:56 Commencing smooth kNN distance calibration using 1 thread
23:44:59 Initializing from normalized Laplacian + noise
23:45:00 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:45:50 Optimization finished
23:45:52 UMAP embedding parameters a = 0.9922 b = 1.112
23:45:52 Read 49148 rows and found 50 numeric columns
23:45:52 Using Annoy for neighbor search, n_neighbors = 20
23:45:52 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:46:02 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85692f8213
23:46:02 Searching Annoy index using 1 thread, search_k = 2000
23:46:17 Annoy recall = 100%
23:46:18 Commencing smooth kNN distance calibration using 1 thread
23:46:21 Initializing from normalized Laplacian + noise
23:46:22 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:47:12 Optimization finished
23:47:14 UMAP embedding parameters a = 0.9922 b = 1.112
23:47:14 Read 49148 rows and found 50 numeric columns
23:47:14 Using Annoy for neighbor search, n_neighbors = 20
23:47:14 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:47:23 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec854c21cb2b
23:47:23 Searching Annoy index using 1 thread, search_k = 2000
23:47:39 Annoy recall = 100%
23:47:39 Commencing smooth kNN distance calibration using 1 thread
23:47:42 Initializing from normalized Laplacian + noise
23:47:43 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:48:32 Optimization finished
23:48:34 UMAP embedding parameters a = 0.9922 b = 1.112
23:48:35 Read 49148 rows and found 50 numeric columns
23:48:35 Using Annoy for neighbor search, n_neighbors = 20
23:48:35 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:48:44 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8563969b22
23:48:44 Searching Annoy index using 1 thread, search_k = 2000
23:48:59 Annoy recall = 100%
23:49:00 Commencing smooth kNN distance calibration using 1 thread
23:49:02 Initializing from normalized Laplacian + noise
23:49:04 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:49:53 Optimization finished
23:49:55 UMAP embedding parameters a = 0.9922 b = 1.112
23:49:55 Read 49148 rows and found 50 numeric columns
23:49:55 Using Annoy for neighbor search, n_neighbors = 20
23:49:55 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:50:04 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec852796ebbe
23:50:04 Searching Annoy index using 1 thread, search_k = 2000
23:50:19 Annoy recall = 100%
23:50:20 Commencing smooth kNN distance calibration using 1 thread
23:50:23 Initializing from normalized Laplacian + noise
23:50:24 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:51:13 Optimization finished
23:51:16 UMAP embedding parameters a = 0.9922 b = 1.112
23:51:16 Read 49148 rows and found 50 numeric columns
23:51:16 Using Annoy for neighbor search, n_neighbors = 20
23:51:16 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:51:25 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85d4b2e91
23:51:25 Searching Annoy index using 1 thread, search_k = 2000
23:51:40 Annoy recall = 100%
23:51:41 Commencing smooth kNN distance calibration using 1 thread
23:51:44 Initializing from normalized Laplacian + noise
23:51:45 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:52:34 Optimization finished
23:52:36 UMAP embedding parameters a = 0.9922 b = 1.112
23:52:36 Read 49148 rows and found 50 numeric columns
23:52:36 Using Annoy for neighbor search, n_neighbors = 20
23:52:36 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:52:46 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85794eeea6
23:52:46 Searching Annoy index using 1 thread, search_k = 2000
23:53:01 Annoy recall = 100%
23:53:02 Commencing smooth kNN distance calibration using 1 thread
23:53:04 Initializing from normalized Laplacian + noise
23:53:06 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:53:55 Optimization finished
23:53:58 UMAP embedding parameters a = 0.9922 b = 1.112
23:53:58 Read 49148 rows and found 50 numeric columns
23:53:58 Using Annoy for neighbor search, n_neighbors = 20
23:53:58 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:54:07 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec854e635d21
23:54:07 Searching Annoy index using 1 thread, search_k = 2000
23:54:22 Annoy recall = 100%
23:54:23 Commencing smooth kNN distance calibration using 1 thread
23:54:25 Initializing from normalized Laplacian + noise
23:54:27 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:55:16 Optimization finished
23:55:18 UMAP embedding parameters a = 0.9922 b = 1.112
23:55:18 Read 49148 rows and found 50 numeric columns
23:55:18 Using Annoy for neighbor search, n_neighbors = 20
23:55:18 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:55:28 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec856d63cca4
23:55:28 Searching Annoy index using 1 thread, search_k = 2000
23:55:43 Annoy recall = 100%
23:55:44 Commencing smooth kNN distance calibration using 1 thread
23:55:46 Initializing from normalized Laplacian + noise
23:55:48 Commencing optimization for 200 epochs, with 1398830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:56:37 Optimization finished
23:56:40 UMAP embedding parameters a = 0.9922 b = 1.112
23:56:40 Read 49148 rows and found 50 numeric columns
23:56:40 Using Annoy for neighbor search, n_neighbors = 30
23:56:40 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:56:49 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85474c227f
23:56:49 Searching Annoy index using 1 thread, search_k = 3000
23:57:09 Annoy recall = 100%
23:57:10 Commencing smooth kNN distance calibration using 1 thread
23:57:13 Initializing from normalized Laplacian + noise
23:57:15 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:58:11 Optimization finished
23:58:13 UMAP embedding parameters a = 0.9922 b = 1.112
23:58:13 Read 49148 rows and found 50 numeric columns
23:58:13 Using Annoy for neighbor search, n_neighbors = 30
23:58:13 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:58:23 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec851457a76e
23:58:23 Searching Annoy index using 1 thread, search_k = 3000
23:58:43 Annoy recall = 100%
23:58:44 Commencing smooth kNN distance calibration using 1 thread
23:58:47 Initializing from normalized Laplacian + noise
23:58:49 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:59:45 Optimization finished
23:59:47 UMAP embedding parameters a = 0.9922 b = 1.112
23:59:47 Read 49148 rows and found 50 numeric columns
23:59:47 Using Annoy for neighbor search, n_neighbors = 30
23:59:47 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:59:56 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec851717224
23:59:56 Searching Annoy index using 1 thread, search_k = 3000
00:00:16 Annoy recall = 100%
00:00:17 Commencing smooth kNN distance calibration using 1 thread
00:00:20 Initializing from normalized Laplacian + noise
00:00:23 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:01:19 Optimization finished
00:01:22 UMAP embedding parameters a = 0.9922 b = 1.112
00:01:22 Read 49148 rows and found 50 numeric columns
00:01:22 Using Annoy for neighbor search, n_neighbors = 30
00:01:22 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:01:31 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec857aca3ce5
00:01:31 Searching Annoy index using 1 thread, search_k = 3000
00:01:51 Annoy recall = 100%
00:01:52 Commencing smooth kNN distance calibration using 1 thread
00:01:55 Initializing from normalized Laplacian + noise
00:01:58 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:02:54 Optimization finished
00:02:56 UMAP embedding parameters a = 0.9922 b = 1.112
00:02:56 Read 49148 rows and found 50 numeric columns
00:02:56 Using Annoy for neighbor search, n_neighbors = 30
00:02:56 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:03:06 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec854cc621ed
00:03:06 Searching Annoy index using 1 thread, search_k = 3000
00:03:25 Annoy recall = 100%
00:03:26 Commencing smooth kNN distance calibration using 1 thread
00:03:29 Initializing from normalized Laplacian + noise
00:03:32 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:04:28 Optimization finished
00:04:30 UMAP embedding parameters a = 0.9922 b = 1.112
00:04:30 Read 49148 rows and found 50 numeric columns
00:04:30 Using Annoy for neighbor search, n_neighbors = 30
00:04:30 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:04:40 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85211c30e
00:04:40 Searching Annoy index using 1 thread, search_k = 3000
00:05:00 Annoy recall = 100%
00:05:01 Commencing smooth kNN distance calibration using 1 thread
00:05:04 Initializing from normalized Laplacian + noise
00:05:06 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:06:02 Optimization finished
00:06:05 UMAP embedding parameters a = 0.9922 b = 1.112
00:06:05 Read 49148 rows and found 50 numeric columns
00:06:05 Using Annoy for neighbor search, n_neighbors = 30
00:06:05 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:06:14 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85566b9ceb
00:06:14 Searching Annoy index using 1 thread, search_k = 3000
00:06:34 Annoy recall = 100%
00:06:35 Commencing smooth kNN distance calibration using 1 thread
00:06:38 Initializing from normalized Laplacian + noise
00:06:40 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:07:37 Optimization finished
00:07:39 UMAP embedding parameters a = 0.9922 b = 1.112
00:07:39 Read 49148 rows and found 50 numeric columns
00:07:39 Using Annoy for neighbor search, n_neighbors = 30
00:07:39 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:07:48 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec856fdccb8d
00:07:48 Searching Annoy index using 1 thread, search_k = 3000
00:08:08 Annoy recall = 100%
00:08:09 Commencing smooth kNN distance calibration using 1 thread
00:08:12 Initializing from normalized Laplacian + noise
00:08:14 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:09:11 Optimization finished
00:09:13 UMAP embedding parameters a = 0.9922 b = 1.112
00:09:13 Read 49148 rows and found 50 numeric columns
00:09:13 Using Annoy for neighbor search, n_neighbors = 30
00:09:13 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:09:22 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8558b55911
00:09:22 Searching Annoy index using 1 thread, search_k = 3000
00:09:42 Annoy recall = 100%
00:09:43 Commencing smooth kNN distance calibration using 1 thread
00:09:46 Initializing from normalized Laplacian + noise
00:09:48 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:10:44 Optimization finished
00:10:46 UMAP embedding parameters a = 0.9922 b = 1.112
00:10:46 Read 49148 rows and found 50 numeric columns
00:10:47 Using Annoy for neighbor search, n_neighbors = 30
00:10:47 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:10:56 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec855f245c02
00:10:56 Searching Annoy index using 1 thread, search_k = 3000
00:11:15 Annoy recall = 100%
00:11:16 Commencing smooth kNN distance calibration using 1 thread
00:11:19 Initializing from normalized Laplacian + noise
00:11:21 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:12:18 Optimization finished
00:12:20 UMAP embedding parameters a = 0.9922 b = 1.112
00:12:20 Read 49148 rows and found 50 numeric columns
00:12:20 Using Annoy for neighbor search, n_neighbors = 30
00:12:20 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:12:29 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8510b99442
00:12:29 Searching Annoy index using 1 thread, search_k = 3000
00:12:50 Annoy recall = 100%
00:12:50 Commencing smooth kNN distance calibration using 1 thread
00:12:53 Initializing from normalized Laplacian + noise
00:12:56 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:13:52 Optimization finished
00:13:54 UMAP embedding parameters a = 0.9922 b = 1.112
00:13:54 Read 49148 rows and found 50 numeric columns
00:13:54 Using Annoy for neighbor search, n_neighbors = 30
00:13:54 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:14:04 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec851de6c1bf
00:14:04 Searching Annoy index using 1 thread, search_k = 3000
00:14:23 Annoy recall = 100%
00:14:24 Commencing smooth kNN distance calibration using 1 thread
00:14:27 Initializing from normalized Laplacian + noise
00:14:30 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:15:26 Optimization finished
00:15:28 UMAP embedding parameters a = 0.9922 b = 1.112
00:15:28 Read 49148 rows and found 50 numeric columns
00:15:28 Using Annoy for neighbor search, n_neighbors = 30
00:15:28 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:15:37 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8557cfd292
00:15:37 Searching Annoy index using 1 thread, search_k = 3000
00:15:57 Annoy recall = 100%
00:15:58 Commencing smooth kNN distance calibration using 1 thread
00:16:01 Initializing from normalized Laplacian + noise
00:16:04 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:16:59 Optimization finished
00:17:02 UMAP embedding parameters a = 0.9922 b = 1.112
00:17:02 Read 49148 rows and found 50 numeric columns
00:17:02 Using Annoy for neighbor search, n_neighbors = 30
00:17:02 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:17:11 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec857e880489
00:17:11 Searching Annoy index using 1 thread, search_k = 3000
00:17:31 Annoy recall = 100%
00:17:31 Commencing smooth kNN distance calibration using 1 thread
00:17:34 Initializing from normalized Laplacian + noise
00:17:37 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:18:33 Optimization finished
00:18:35 UMAP embedding parameters a = 0.9922 b = 1.112
00:18:35 Read 49148 rows and found 50 numeric columns
00:18:35 Using Annoy for neighbor search, n_neighbors = 30
00:18:35 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:18:45 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8579c6f8a9
00:18:45 Searching Annoy index using 1 thread, search_k = 3000
00:19:05 Annoy recall = 100%
00:19:06 Commencing smooth kNN distance calibration using 1 thread
00:19:09 Initializing from normalized Laplacian + noise
00:19:11 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:20:07 Optimization finished
00:20:09 UMAP embedding parameters a = 0.9922 b = 1.112
00:20:09 Read 49148 rows and found 50 numeric columns
00:20:09 Using Annoy for neighbor search, n_neighbors = 30
00:20:09 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:20:19 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec854acf7711
00:20:19 Searching Annoy index using 1 thread, search_k = 3000
00:20:39 Annoy recall = 100%
00:20:40 Commencing smooth kNN distance calibration using 1 thread
00:20:43 Initializing from normalized Laplacian + noise
00:20:45 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:21:42 Optimization finished
00:21:44 UMAP embedding parameters a = 0.9922 b = 1.112
00:21:44 Read 49148 rows and found 50 numeric columns
00:21:44 Using Annoy for neighbor search, n_neighbors = 30
00:21:44 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:21:53 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec857aafe32c
00:21:54 Searching Annoy index using 1 thread, search_k = 3000
00:22:13 Annoy recall = 100%
00:22:14 Commencing smooth kNN distance calibration using 1 thread
00:22:17 Initializing from normalized Laplacian + noise
00:22:19 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:23:15 Optimization finished
00:23:18 UMAP embedding parameters a = 0.9922 b = 1.112
00:23:18 Read 49148 rows and found 50 numeric columns
00:23:18 Using Annoy for neighbor search, n_neighbors = 30
00:23:18 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:23:27 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8543417751
00:23:27 Searching Annoy index using 1 thread, search_k = 3000
00:23:46 Annoy recall = 100%
00:23:47 Commencing smooth kNN distance calibration using 1 thread
00:23:50 Initializing from normalized Laplacian + noise
00:23:52 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:24:49 Optimization finished
00:24:51 UMAP embedding parameters a = 0.9922 b = 1.112
00:24:51 Read 49148 rows and found 50 numeric columns
00:24:51 Using Annoy for neighbor search, n_neighbors = 30
00:24:51 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:25:00 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85b4d74bc
00:25:00 Searching Annoy index using 1 thread, search_k = 3000
00:25:20 Annoy recall = 100%
00:25:21 Commencing smooth kNN distance calibration using 1 thread
00:25:24 Initializing from normalized Laplacian + noise
00:25:26 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:26:22 Optimization finished
00:26:24 UMAP embedding parameters a = 0.9922 b = 1.112
00:26:25 Read 49148 rows and found 50 numeric columns
00:26:25 Using Annoy for neighbor search, n_neighbors = 30
00:26:25 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:26:34 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85e05d546
00:26:34 Searching Annoy index using 1 thread, search_k = 3000
00:26:54 Annoy recall = 100%
00:26:55 Commencing smooth kNN distance calibration using 1 thread
00:26:58 Initializing from normalized Laplacian + noise
00:27:00 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:27:56 Optimization finished
00:27:58 UMAP embedding parameters a = 0.9922 b = 1.112
00:27:58 Read 49148 rows and found 50 numeric columns
00:27:58 Using Annoy for neighbor search, n_neighbors = 30
00:27:58 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:28:08 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8579215e8e
00:28:08 Searching Annoy index using 1 thread, search_k = 3000
00:28:28 Annoy recall = 100%
00:28:29 Commencing smooth kNN distance calibration using 1 thread
00:28:32 Initializing from normalized Laplacian + noise
00:28:34 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:29:30 Optimization finished
00:29:32 UMAP embedding parameters a = 0.9922 b = 1.112
00:29:33 Read 49148 rows and found 50 numeric columns
00:29:33 Using Annoy for neighbor search, n_neighbors = 30
00:29:33 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:29:42 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8541325ad8
00:29:42 Searching Annoy index using 1 thread, search_k = 3000
00:30:02 Annoy recall = 100%
00:30:03 Commencing smooth kNN distance calibration using 1 thread
00:30:06 Initializing from normalized Laplacian + noise
00:30:08 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:31:04 Optimization finished
00:31:06 UMAP embedding parameters a = 0.9922 b = 1.112
00:31:06 Read 49148 rows and found 50 numeric columns
00:31:06 Using Annoy for neighbor search, n_neighbors = 30
00:31:06 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:31:16 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85569f52cb
00:31:16 Searching Annoy index using 1 thread, search_k = 3000
00:31:35 Annoy recall = 100%
00:31:36 Commencing smooth kNN distance calibration using 1 thread
00:31:39 Initializing from normalized Laplacian + noise
00:31:42 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:32:38 Optimization finished
00:32:41 UMAP embedding parameters a = 0.9922 b = 1.112
00:32:41 Read 49148 rows and found 50 numeric columns
00:32:41 Using Annoy for neighbor search, n_neighbors = 30
00:32:41 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:32:50 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec856250e0a1
00:32:50 Searching Annoy index using 1 thread, search_k = 3000
00:33:10 Annoy recall = 100%
00:33:11 Commencing smooth kNN distance calibration using 1 thread
00:33:14 Initializing from normalized Laplacian + noise
00:33:16 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:34:13 Optimization finished
00:34:15 UMAP embedding parameters a = 0.9922 b = 1.112
00:34:15 Read 49148 rows and found 50 numeric columns
00:34:15 Using Annoy for neighbor search, n_neighbors = 30
00:34:15 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:34:24 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85d542603
00:34:24 Searching Annoy index using 1 thread, search_k = 3000
00:34:44 Annoy recall = 100%
00:34:45 Commencing smooth kNN distance calibration using 1 thread
00:34:48 Initializing from normalized Laplacian + noise
00:34:51 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:35:47 Optimization finished
00:35:49 UMAP embedding parameters a = 0.9922 b = 1.112
00:35:49 Read 49148 rows and found 50 numeric columns
00:35:49 Using Annoy for neighbor search, n_neighbors = 30
00:35:49 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:35:58 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec853a35eded
00:35:59 Searching Annoy index using 1 thread, search_k = 3000
00:36:18 Annoy recall = 100%
00:36:19 Commencing smooth kNN distance calibration using 1 thread
00:36:22 Initializing from normalized Laplacian + noise
00:36:25 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:37:20 Optimization finished
00:37:23 UMAP embedding parameters a = 0.9922 b = 1.112
00:37:23 Read 49148 rows and found 50 numeric columns
00:37:23 Using Annoy for neighbor search, n_neighbors = 30
00:37:23 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:37:32 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec859e7cc5f
00:37:32 Searching Annoy index using 1 thread, search_k = 3000
00:37:51 Annoy recall = 100%
00:37:52 Commencing smooth kNN distance calibration using 1 thread
00:37:55 Initializing from normalized Laplacian + noise
00:37:57 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:38:54 Optimization finished
00:38:56 UMAP embedding parameters a = 0.9922 b = 1.112
00:38:56 Read 49148 rows and found 50 numeric columns
00:38:56 Using Annoy for neighbor search, n_neighbors = 30
00:38:56 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:39:06 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec851a9f5494
00:39:06 Searching Annoy index using 1 thread, search_k = 3000
00:39:25 Annoy recall = 100%
00:39:26 Commencing smooth kNN distance calibration using 1 thread
00:39:29 Initializing from normalized Laplacian + noise
00:39:32 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:40:28 Optimization finished
00:40:30 UMAP embedding parameters a = 0.9922 b = 1.112
00:40:30 Read 49148 rows and found 50 numeric columns
00:40:30 Using Annoy for neighbor search, n_neighbors = 30
00:40:30 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:40:39 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec853384dc93
00:40:39 Searching Annoy index using 1 thread, search_k = 3000
00:40:58 Annoy recall = 100%
00:40:59 Commencing smooth kNN distance calibration using 1 thread
00:41:02 Initializing from normalized Laplacian + noise
00:41:04 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:42:00 Optimization finished
00:42:03 UMAP embedding parameters a = 0.9922 b = 1.112
00:42:03 Read 49148 rows and found 50 numeric columns
00:42:03 Using Annoy for neighbor search, n_neighbors = 30
00:42:03 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:42:12 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85584b2981
00:42:12 Searching Annoy index using 1 thread, search_k = 3000
00:42:32 Annoy recall = 100%
00:42:33 Commencing smooth kNN distance calibration using 1 thread
00:42:36 Initializing from normalized Laplacian + noise
00:42:38 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:43:35 Optimization finished
00:43:37 UMAP embedding parameters a = 0.9922 b = 1.112
00:43:37 Read 49148 rows and found 50 numeric columns
00:43:37 Using Annoy for neighbor search, n_neighbors = 30
00:43:37 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:43:46 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec858032139
00:43:46 Searching Annoy index using 1 thread, search_k = 3000
00:44:05 Annoy recall = 100%
00:44:06 Commencing smooth kNN distance calibration using 1 thread
00:44:09 Initializing from normalized Laplacian + noise
00:44:12 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:45:08 Optimization finished
00:45:10 UMAP embedding parameters a = 0.9922 b = 1.112
00:45:10 Read 49148 rows and found 50 numeric columns
00:45:10 Using Annoy for neighbor search, n_neighbors = 30
00:45:10 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:45:20 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec857ad0ff13
00:45:20 Searching Annoy index using 1 thread, search_k = 3000
00:45:39 Annoy recall = 100%
00:45:40 Commencing smooth kNN distance calibration using 1 thread
00:45:43 Initializing from normalized Laplacian + noise
00:45:46 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:46:42 Optimization finished
00:46:44 UMAP embedding parameters a = 0.9922 b = 1.112
00:46:44 Read 49148 rows and found 50 numeric columns
00:46:44 Using Annoy for neighbor search, n_neighbors = 30
00:46:44 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:46:54 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec856ca2d0ef
00:46:54 Searching Annoy index using 1 thread, search_k = 3000
00:47:14 Annoy recall = 100%
00:47:15 Commencing smooth kNN distance calibration using 1 thread
00:47:18 Initializing from normalized Laplacian + noise
00:47:20 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:48:17 Optimization finished
00:48:19 UMAP embedding parameters a = 0.9922 b = 1.112
00:48:19 Read 49148 rows and found 50 numeric columns
00:48:19 Using Annoy for neighbor search, n_neighbors = 30
00:48:19 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:48:28 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85974935d
00:48:28 Searching Annoy index using 1 thread, search_k = 3000
00:48:48 Annoy recall = 100%
00:48:49 Commencing smooth kNN distance calibration using 1 thread
00:48:52 Initializing from normalized Laplacian + noise
00:48:55 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:49:51 Optimization finished
00:49:53 UMAP embedding parameters a = 0.9922 b = 1.112
00:49:53 Read 49148 rows and found 50 numeric columns
00:49:53 Using Annoy for neighbor search, n_neighbors = 30
00:49:53 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:50:03 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85759b3bf8
00:50:03 Searching Annoy index using 1 thread, search_k = 3000
00:50:23 Annoy recall = 100%
00:50:24 Commencing smooth kNN distance calibration using 1 thread
00:50:27 Initializing from normalized Laplacian + noise
00:50:29 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:51:26 Optimization finished
00:51:28 UMAP embedding parameters a = 0.9922 b = 1.112
00:51:28 Read 49148 rows and found 50 numeric columns
00:51:28 Using Annoy for neighbor search, n_neighbors = 30
00:51:28 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:51:37 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec853968f2dc
00:51:37 Searching Annoy index using 1 thread, search_k = 3000
00:51:57 Annoy recall = 100%
00:51:58 Commencing smooth kNN distance calibration using 1 thread
00:52:01 Initializing from normalized Laplacian + noise
00:52:03 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:53:00 Optimization finished
00:53:02 UMAP embedding parameters a = 0.9922 b = 1.112
00:53:02 Read 49148 rows and found 50 numeric columns
00:53:02 Using Annoy for neighbor search, n_neighbors = 30
00:53:02 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:53:12 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85b86566c
00:53:12 Searching Annoy index using 1 thread, search_k = 3000
00:53:31 Annoy recall = 100%
00:53:32 Commencing smooth kNN distance calibration using 1 thread
00:53:35 Initializing from normalized Laplacian + noise
00:53:38 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:54:35 Optimization finished
00:54:37 UMAP embedding parameters a = 0.9922 b = 1.112
00:54:37 Read 49148 rows and found 50 numeric columns
00:54:37 Using Annoy for neighbor search, n_neighbors = 30
00:54:37 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:54:46 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec854c06d8e3
00:54:46 Searching Annoy index using 1 thread, search_k = 3000
00:55:06 Annoy recall = 100%
00:55:07 Commencing smooth kNN distance calibration using 1 thread
00:55:10 Initializing from normalized Laplacian + noise
00:55:12 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:56:09 Optimization finished
00:56:11 UMAP embedding parameters a = 0.9922 b = 1.112
00:56:11 Read 49148 rows and found 50 numeric columns
00:56:11 Using Annoy for neighbor search, n_neighbors = 30
00:56:11 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:56:21 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec852945be6a
00:56:21 Searching Annoy index using 1 thread, search_k = 3000
00:56:40 Annoy recall = 100%
00:56:41 Commencing smooth kNN distance calibration using 1 thread
00:56:44 Initializing from normalized Laplacian + noise
00:56:46 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:57:43 Optimization finished
00:57:46 UMAP embedding parameters a = 0.9922 b = 1.112
00:57:46 Read 49148 rows and found 50 numeric columns
00:57:46 Using Annoy for neighbor search, n_neighbors = 30
00:57:46 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:57:55 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85643baf7d
00:57:55 Searching Annoy index using 1 thread, search_k = 3000
00:58:15 Annoy recall = 100%
00:58:16 Commencing smooth kNN distance calibration using 1 thread
00:58:19 Initializing from normalized Laplacian + noise
00:58:21 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:59:18 Optimization finished
00:59:20 UMAP embedding parameters a = 0.9922 b = 1.112
00:59:20 Read 49148 rows and found 50 numeric columns
00:59:20 Using Annoy for neighbor search, n_neighbors = 30
00:59:20 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:59:30 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec852b2b34e5
00:59:30 Searching Annoy index using 1 thread, search_k = 3000
00:59:49 Annoy recall = 100%
00:59:50 Commencing smooth kNN distance calibration using 1 thread
00:59:53 Initializing from normalized Laplacian + noise
00:59:55 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:00:52 Optimization finished
01:00:54 UMAP embedding parameters a = 0.9922 b = 1.112
01:00:54 Read 49148 rows and found 50 numeric columns
01:00:54 Using Annoy for neighbor search, n_neighbors = 30
01:00:54 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:01:03 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8539ff52ac
01:01:03 Searching Annoy index using 1 thread, search_k = 3000
01:01:23 Annoy recall = 100%
01:01:24 Commencing smooth kNN distance calibration using 1 thread
01:01:27 Initializing from normalized Laplacian + noise
01:01:29 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:02:26 Optimization finished
01:02:28 UMAP embedding parameters a = 0.9922 b = 1.112
01:02:28 Read 49148 rows and found 50 numeric columns
01:02:28 Using Annoy for neighbor search, n_neighbors = 30
01:02:28 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:02:38 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85222713c
01:02:38 Searching Annoy index using 1 thread, search_k = 3000
01:02:58 Annoy recall = 100%
01:02:59 Commencing smooth kNN distance calibration using 1 thread
01:03:02 Initializing from normalized Laplacian + noise
01:03:04 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:04:00 Optimization finished
01:04:02 UMAP embedding parameters a = 0.9922 b = 1.112
01:04:02 Read 49148 rows and found 50 numeric columns
01:04:02 Using Annoy for neighbor search, n_neighbors = 30
01:04:02 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:04:11 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec852fb0777
01:04:11 Searching Annoy index using 1 thread, search_k = 3000
01:04:31 Annoy recall = 100%
01:04:32 Commencing smooth kNN distance calibration using 1 thread
01:04:35 Initializing from normalized Laplacian + noise
01:04:38 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:05:34 Optimization finished
01:05:36 UMAP embedding parameters a = 0.9922 b = 1.112
01:05:36 Read 49148 rows and found 50 numeric columns
01:05:36 Using Annoy for neighbor search, n_neighbors = 30
01:05:36 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:05:45 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8538875735
01:05:45 Searching Annoy index using 1 thread, search_k = 3000
01:06:05 Annoy recall = 100%
01:06:06 Commencing smooth kNN distance calibration using 1 thread
01:06:09 Initializing from normalized Laplacian + noise
01:06:11 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:07:07 Optimization finished
01:07:09 UMAP embedding parameters a = 0.9922 b = 1.112
01:07:09 Read 49148 rows and found 50 numeric columns
01:07:09 Using Annoy for neighbor search, n_neighbors = 30
01:07:09 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:07:19 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec857be969e6
01:07:19 Searching Annoy index using 1 thread, search_k = 3000
01:07:38 Annoy recall = 100%
01:07:39 Commencing smooth kNN distance calibration using 1 thread
01:07:42 Initializing from normalized Laplacian + noise
01:07:45 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:08:41 Optimization finished
01:08:43 UMAP embedding parameters a = 0.9922 b = 1.112
01:08:43 Read 49148 rows and found 50 numeric columns
01:08:43 Using Annoy for neighbor search, n_neighbors = 30
01:08:43 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:08:53 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec854dca7e89
01:08:53 Searching Annoy index using 1 thread, search_k = 3000
01:09:12 Annoy recall = 100%
01:09:13 Commencing smooth kNN distance calibration using 1 thread
01:09:16 Initializing from normalized Laplacian + noise
01:09:19 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:10:15 Optimization finished
01:10:17 UMAP embedding parameters a = 0.9922 b = 1.112
01:10:17 Read 49148 rows and found 50 numeric columns
01:10:17 Using Annoy for neighbor search, n_neighbors = 30
01:10:17 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:10:26 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8533373a61
01:10:26 Searching Annoy index using 1 thread, search_k = 3000
01:10:46 Annoy recall = 100%
01:10:47 Commencing smooth kNN distance calibration using 1 thread
01:10:50 Initializing from normalized Laplacian + noise
01:10:52 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:11:48 Optimization finished
01:11:51 UMAP embedding parameters a = 0.9922 b = 1.112
01:11:51 Read 49148 rows and found 50 numeric columns
01:11:51 Using Annoy for neighbor search, n_neighbors = 30
01:11:51 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:12:00 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec853f2ae137
01:12:00 Searching Annoy index using 1 thread, search_k = 3000
01:12:19 Annoy recall = 100%
01:12:20 Commencing smooth kNN distance calibration using 1 thread
01:12:23 Initializing from normalized Laplacian + noise
01:12:26 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:13:22 Optimization finished
01:13:24 UMAP embedding parameters a = 0.9922 b = 1.112
01:13:25 Read 49148 rows and found 50 numeric columns
01:13:25 Using Annoy for neighbor search, n_neighbors = 30
01:13:25 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:13:34 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec855917f345
01:13:34 Searching Annoy index using 1 thread, search_k = 3000
01:13:54 Annoy recall = 100%
01:13:55 Commencing smooth kNN distance calibration using 1 thread
01:13:58 Initializing from normalized Laplacian + noise
01:14:00 Commencing optimization for 200 epochs, with 2100754 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:14:57 Optimization finished
01:14:59 UMAP embedding parameters a = 0.9922 b = 1.112
01:14:59 Read 49148 rows and found 50 numeric columns
01:14:59 Using Annoy for neighbor search, n_neighbors = 40
01:14:59 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:15:08 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85413d0fa8
01:15:08 Searching Annoy index using 1 thread, search_k = 4000
01:15:32 Annoy recall = 100%
01:15:33 Commencing smooth kNN distance calibration using 1 thread
01:15:37 Initializing from normalized Laplacian + noise
01:15:40 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:16:42 Optimization finished
01:16:44 UMAP embedding parameters a = 0.9922 b = 1.112
01:16:44 Read 49148 rows and found 50 numeric columns
01:16:44 Using Annoy for neighbor search, n_neighbors = 40
01:16:44 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:16:53 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85384c3fc5
01:16:53 Searching Annoy index using 1 thread, search_k = 4000
01:17:17 Annoy recall = 100%
01:17:18 Commencing smooth kNN distance calibration using 1 thread
01:17:22 Initializing from normalized Laplacian + noise
01:17:25 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:18:27 Optimization finished
01:18:29 UMAP embedding parameters a = 0.9922 b = 1.112
01:18:29 Read 49148 rows and found 50 numeric columns
01:18:29 Using Annoy for neighbor search, n_neighbors = 40
01:18:29 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:18:39 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec851a4a4e1e
01:18:39 Searching Annoy index using 1 thread, search_k = 4000
01:19:03 Annoy recall = 100%
01:19:04 Commencing smooth kNN distance calibration using 1 thread
01:19:08 Initializing from normalized Laplacian + noise
01:19:11 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:20:12 Optimization finished
01:20:14 UMAP embedding parameters a = 0.9922 b = 1.112
01:20:14 Read 49148 rows and found 50 numeric columns
01:20:14 Using Annoy for neighbor search, n_neighbors = 40
01:20:14 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:20:23 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8517dc6273
01:20:23 Searching Annoy index using 1 thread, search_k = 4000
01:20:48 Annoy recall = 100%
01:20:49 Commencing smooth kNN distance calibration using 1 thread
01:20:52 Initializing from normalized Laplacian + noise
01:20:55 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:21:56 Optimization finished
01:21:59 UMAP embedding parameters a = 0.9922 b = 1.112
01:21:59 Read 49148 rows and found 50 numeric columns
01:21:59 Using Annoy for neighbor search, n_neighbors = 40
01:21:59 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:22:08 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec851a9d2067
01:22:08 Searching Annoy index using 1 thread, search_k = 4000
01:22:32 Annoy recall = 100%
01:22:33 Commencing smooth kNN distance calibration using 1 thread
01:22:37 Initializing from normalized Laplacian + noise
01:22:40 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:23:41 Optimization finished
01:23:44 UMAP embedding parameters a = 0.9922 b = 1.112
01:23:44 Read 49148 rows and found 50 numeric columns
01:23:44 Using Annoy for neighbor search, n_neighbors = 40
01:23:44 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:23:53 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85279e7421
01:23:53 Searching Annoy index using 1 thread, search_k = 4000
01:24:17 Annoy recall = 100%
01:24:18 Commencing smooth kNN distance calibration using 1 thread
01:24:22 Initializing from normalized Laplacian + noise
01:24:25 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:25:26 Optimization finished
01:25:28 UMAP embedding parameters a = 0.9922 b = 1.112
01:25:29 Read 49148 rows and found 50 numeric columns
01:25:29 Using Annoy for neighbor search, n_neighbors = 40
01:25:29 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:25:38 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8552125061
01:25:38 Searching Annoy index using 1 thread, search_k = 4000
01:26:02 Annoy recall = 100%
01:26:03 Commencing smooth kNN distance calibration using 1 thread
01:26:06 Initializing from normalized Laplacian + noise
01:26:09 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:27:11 Optimization finished
01:27:14 UMAP embedding parameters a = 0.9922 b = 1.112
01:27:14 Read 49148 rows and found 50 numeric columns
01:27:14 Using Annoy for neighbor search, n_neighbors = 40
01:27:14 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:27:23 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec852484ecc6
01:27:23 Searching Annoy index using 1 thread, search_k = 4000
01:27:47 Annoy recall = 100%
01:27:48 Commencing smooth kNN distance calibration using 1 thread
01:27:51 Initializing from normalized Laplacian + noise
01:27:54 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:28:55 Optimization finished
01:28:58 UMAP embedding parameters a = 0.9922 b = 1.112
01:28:58 Read 49148 rows and found 50 numeric columns
01:28:58 Using Annoy for neighbor search, n_neighbors = 40
01:28:58 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:29:07 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85423dc8b6
01:29:07 Searching Annoy index using 1 thread, search_k = 4000
01:29:31 Annoy recall = 100%
01:29:32 Commencing smooth kNN distance calibration using 1 thread
01:29:36 Initializing from normalized Laplacian + noise
01:29:39 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:30:40 Optimization finished
01:30:43 UMAP embedding parameters a = 0.9922 b = 1.112
01:30:43 Read 49148 rows and found 50 numeric columns
01:30:43 Using Annoy for neighbor search, n_neighbors = 40
01:30:43 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:30:52 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec855972cf4
01:30:52 Searching Annoy index using 1 thread, search_k = 4000
01:31:16 Annoy recall = 100%
01:31:17 Commencing smooth kNN distance calibration using 1 thread
01:31:21 Initializing from normalized Laplacian + noise
01:31:24 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:32:26 Optimization finished
01:32:28 UMAP embedding parameters a = 0.9922 b = 1.112
01:32:28 Read 49148 rows and found 50 numeric columns
01:32:28 Using Annoy for neighbor search, n_neighbors = 40
01:32:28 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:32:38 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec857cd01647
01:32:38 Searching Annoy index using 1 thread, search_k = 4000
01:33:02 Annoy recall = 100%
01:33:03 Commencing smooth kNN distance calibration using 1 thread
01:33:06 Initializing from normalized Laplacian + noise
01:33:09 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:34:11 Optimization finished
01:34:13 UMAP embedding parameters a = 0.9922 b = 1.112
01:34:13 Read 49148 rows and found 50 numeric columns
01:34:13 Using Annoy for neighbor search, n_neighbors = 40
01:34:13 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:34:22 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec854a40e9ef
01:34:22 Searching Annoy index using 1 thread, search_k = 4000
01:34:47 Annoy recall = 100%
01:34:48 Commencing smooth kNN distance calibration using 1 thread
01:34:51 Initializing from normalized Laplacian + noise
01:34:54 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:35:56 Optimization finished
01:35:58 UMAP embedding parameters a = 0.9922 b = 1.112
01:35:58 Read 49148 rows and found 50 numeric columns
01:35:58 Using Annoy for neighbor search, n_neighbors = 40
01:35:58 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:36:07 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85682c07
01:36:07 Searching Annoy index using 1 thread, search_k = 4000
01:36:32 Annoy recall = 100%
01:36:33 Commencing smooth kNN distance calibration using 1 thread
01:36:37 Initializing from normalized Laplacian + noise
01:36:40 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:37:41 Optimization finished
01:37:43 UMAP embedding parameters a = 0.9922 b = 1.112
01:37:43 Read 49148 rows and found 50 numeric columns
01:37:43 Using Annoy for neighbor search, n_neighbors = 40
01:37:43 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:37:52 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec856972e736
01:37:52 Searching Annoy index using 1 thread, search_k = 4000
01:38:17 Annoy recall = 100%
01:38:18 Commencing smooth kNN distance calibration using 1 thread
01:38:21 Initializing from normalized Laplacian + noise
01:38:24 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:39:25 Optimization finished
01:39:28 UMAP embedding parameters a = 0.9922 b = 1.112
01:39:28 Read 49148 rows and found 50 numeric columns
01:39:28 Using Annoy for neighbor search, n_neighbors = 40
01:39:28 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:39:37 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8553b57d4c
01:39:37 Searching Annoy index using 1 thread, search_k = 4000
01:40:00 Annoy recall = 100%
01:40:01 Commencing smooth kNN distance calibration using 1 thread
01:40:05 Initializing from normalized Laplacian + noise
01:40:08 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:41:09 Optimization finished
01:41:12 UMAP embedding parameters a = 0.9922 b = 1.112
01:41:12 Read 49148 rows and found 50 numeric columns
01:41:12 Using Annoy for neighbor search, n_neighbors = 40
01:41:12 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:41:21 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85760367ff
01:41:21 Searching Annoy index using 1 thread, search_k = 4000
01:41:45 Annoy recall = 100%
01:41:46 Commencing smooth kNN distance calibration using 1 thread
01:41:50 Initializing from normalized Laplacian + noise
01:41:53 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:42:55 Optimization finished
01:42:57 UMAP embedding parameters a = 0.9922 b = 1.112
01:42:57 Read 49148 rows and found 50 numeric columns
01:42:57 Using Annoy for neighbor search, n_neighbors = 40
01:42:57 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:43:07 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8522dbda13
01:43:07 Searching Annoy index using 1 thread, search_k = 4000
01:43:31 Annoy recall = 100%
01:43:32 Commencing smooth kNN distance calibration using 1 thread
01:43:36 Initializing from normalized Laplacian + noise
01:43:39 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:44:40 Optimization finished
01:44:43 UMAP embedding parameters a = 0.9922 b = 1.112
01:44:43 Read 49148 rows and found 50 numeric columns
01:44:43 Using Annoy for neighbor search, n_neighbors = 40
01:44:43 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:44:52 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec855f3bd3b8
01:44:52 Searching Annoy index using 1 thread, search_k = 4000
01:45:17 Annoy recall = 100%
01:45:18 Commencing smooth kNN distance calibration using 1 thread
01:45:21 Initializing from normalized Laplacian + noise
01:45:24 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:46:26 Optimization finished
01:46:29 UMAP embedding parameters a = 0.9922 b = 1.112
01:46:29 Read 49148 rows and found 50 numeric columns
01:46:29 Using Annoy for neighbor search, n_neighbors = 40
01:46:29 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:46:38 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85420a40e2
01:46:38 Searching Annoy index using 1 thread, search_k = 4000
01:47:02 Annoy recall = 100%
01:47:03 Commencing smooth kNN distance calibration using 1 thread
01:47:07 Initializing from normalized Laplacian + noise
01:47:10 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:48:11 Optimization finished
01:48:14 UMAP embedding parameters a = 0.9922 b = 1.112
01:48:14 Read 49148 rows and found 50 numeric columns
01:48:14 Using Annoy for neighbor search, n_neighbors = 40
01:48:14 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:48:23 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec854c21987d
01:48:23 Searching Annoy index using 1 thread, search_k = 4000
01:48:47 Annoy recall = 100%
01:48:48 Commencing smooth kNN distance calibration using 1 thread
01:48:52 Initializing from normalized Laplacian + noise
01:48:55 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:49:57 Optimization finished
01:49:59 UMAP embedding parameters a = 0.9922 b = 1.112
01:50:00 Read 49148 rows and found 50 numeric columns
01:50:00 Using Annoy for neighbor search, n_neighbors = 40
01:50:00 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:50:09 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8543778336
01:50:09 Searching Annoy index using 1 thread, search_k = 4000
01:50:33 Annoy recall = 100%
01:50:34 Commencing smooth kNN distance calibration using 1 thread
01:50:38 Initializing from normalized Laplacian + noise
01:50:41 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:51:42 Optimization finished
01:51:44 UMAP embedding parameters a = 0.9922 b = 1.112
01:51:44 Read 49148 rows and found 50 numeric columns
01:51:44 Using Annoy for neighbor search, n_neighbors = 40
01:51:44 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:51:54 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec856d3575c8
01:51:54 Searching Annoy index using 1 thread, search_k = 4000
01:52:18 Annoy recall = 100%
01:52:19 Commencing smooth kNN distance calibration using 1 thread
01:52:23 Initializing from normalized Laplacian + noise
01:52:26 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:53:28 Optimization finished
01:53:30 UMAP embedding parameters a = 0.9922 b = 1.112
01:53:30 Read 49148 rows and found 50 numeric columns
01:53:30 Using Annoy for neighbor search, n_neighbors = 40
01:53:30 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:53:39 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85620eb29
01:53:39 Searching Annoy index using 1 thread, search_k = 4000
01:54:03 Annoy recall = 100%
01:54:04 Commencing smooth kNN distance calibration using 1 thread
01:54:08 Initializing from normalized Laplacian + noise
01:54:11 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:55:12 Optimization finished
01:55:14 UMAP embedding parameters a = 0.9922 b = 1.112
01:55:14 Read 49148 rows and found 50 numeric columns
01:55:14 Using Annoy for neighbor search, n_neighbors = 40
01:55:14 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:55:24 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec854599f472
01:55:24 Searching Annoy index using 1 thread, search_k = 4000
01:55:48 Annoy recall = 100%
01:55:49 Commencing smooth kNN distance calibration using 1 thread
01:55:53 Initializing from normalized Laplacian + noise
01:55:56 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:56:57 Optimization finished
01:57:00 UMAP embedding parameters a = 0.9922 b = 1.112
01:57:00 Read 49148 rows and found 50 numeric columns
01:57:00 Using Annoy for neighbor search, n_neighbors = 40
01:57:00 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:57:09 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8570307d3f
01:57:09 Searching Annoy index using 1 thread, search_k = 4000
01:57:33 Annoy recall = 100%
01:57:34 Commencing smooth kNN distance calibration using 1 thread
01:57:38 Initializing from normalized Laplacian + noise
01:57:41 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:58:43 Optimization finished
01:58:46 UMAP embedding parameters a = 0.9922 b = 1.112
01:58:46 Read 49148 rows and found 50 numeric columns
01:58:46 Using Annoy for neighbor search, n_neighbors = 40
01:58:46 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:58:55 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec853ea8425e
01:58:55 Searching Annoy index using 1 thread, search_k = 4000
01:59:19 Annoy recall = 100%
01:59:20 Commencing smooth kNN distance calibration using 1 thread
01:59:24 Initializing from normalized Laplacian + noise
01:59:27 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:00:28 Optimization finished
02:00:30 UMAP embedding parameters a = 0.9922 b = 1.112
02:00:30 Read 49148 rows and found 50 numeric columns
02:00:30 Using Annoy for neighbor search, n_neighbors = 40
02:00:30 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:00:39 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8541835e58
02:00:40 Searching Annoy index using 1 thread, search_k = 4000
02:01:03 Annoy recall = 100%
02:01:04 Commencing smooth kNN distance calibration using 1 thread
02:01:08 Initializing from normalized Laplacian + noise
02:01:11 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:02:12 Optimization finished
02:02:14 UMAP embedding parameters a = 0.9922 b = 1.112
02:02:14 Read 49148 rows and found 50 numeric columns
02:02:14 Using Annoy for neighbor search, n_neighbors = 40
02:02:14 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:02:24 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec853dfafbc8
02:02:24 Searching Annoy index using 1 thread, search_k = 4000
02:02:48 Annoy recall = 100%
02:02:49 Commencing smooth kNN distance calibration using 1 thread
02:02:53 Initializing from normalized Laplacian + noise
02:02:56 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:03:57 Optimization finished
02:04:00 UMAP embedding parameters a = 0.9922 b = 1.112
02:04:00 Read 49148 rows and found 50 numeric columns
02:04:00 Using Annoy for neighbor search, n_neighbors = 40
02:04:00 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:04:09 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8571df7cbf
02:04:09 Searching Annoy index using 1 thread, search_k = 4000
02:04:33 Annoy recall = 100%
02:04:34 Commencing smooth kNN distance calibration using 1 thread
02:04:38 Initializing from normalized Laplacian + noise
02:04:41 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:05:42 Optimization finished
02:05:44 UMAP embedding parameters a = 0.9922 b = 1.112
02:05:44 Read 49148 rows and found 50 numeric columns
02:05:44 Using Annoy for neighbor search, n_neighbors = 40
02:05:44 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:05:54 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85ae3f90
02:05:54 Searching Annoy index using 1 thread, search_k = 4000
02:06:18 Annoy recall = 100%
02:06:19 Commencing smooth kNN distance calibration using 1 thread
02:06:22 Initializing from normalized Laplacian + noise
02:06:25 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:07:27 Optimization finished
02:07:29 UMAP embedding parameters a = 0.9922 b = 1.112
02:07:29 Read 49148 rows and found 50 numeric columns
02:07:29 Using Annoy for neighbor search, n_neighbors = 40
02:07:29 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:07:38 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec851712ef0e
02:07:38 Searching Annoy index using 1 thread, search_k = 4000
02:08:03 Annoy recall = 100%
02:08:04 Commencing smooth kNN distance calibration using 1 thread
02:08:07 Initializing from normalized Laplacian + noise
02:08:10 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:09:12 Optimization finished
02:09:15 UMAP embedding parameters a = 0.9922 b = 1.112
02:09:15 Read 49148 rows and found 50 numeric columns
02:09:15 Using Annoy for neighbor search, n_neighbors = 40
02:09:15 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:09:24 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85331c8c67
02:09:24 Searching Annoy index using 1 thread, search_k = 4000
02:09:48 Annoy recall = 100%
02:09:49 Commencing smooth kNN distance calibration using 1 thread
02:09:53 Initializing from normalized Laplacian + noise
02:09:56 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:10:58 Optimization finished
02:11:00 UMAP embedding parameters a = 0.9922 b = 1.112
02:11:00 Read 49148 rows and found 50 numeric columns
02:11:00 Using Annoy for neighbor search, n_neighbors = 40
02:11:00 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:11:10 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8538fa7f55
02:11:10 Searching Annoy index using 1 thread, search_k = 4000
02:11:34 Annoy recall = 100%
02:11:35 Commencing smooth kNN distance calibration using 1 thread
02:11:39 Initializing from normalized Laplacian + noise
02:11:42 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:12:44 Optimization finished
02:12:46 UMAP embedding parameters a = 0.9922 b = 1.112
02:12:46 Read 49148 rows and found 50 numeric columns
02:12:46 Using Annoy for neighbor search, n_neighbors = 40
02:12:46 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:12:56 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85315d3d2c
02:12:56 Searching Annoy index using 1 thread, search_k = 4000
02:13:19 Annoy recall = 100%
02:13:20 Commencing smooth kNN distance calibration using 1 thread
02:13:24 Initializing from normalized Laplacian + noise
02:13:27 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:14:29 Optimization finished
02:14:32 UMAP embedding parameters a = 0.9922 b = 1.112
02:14:32 Read 49148 rows and found 50 numeric columns
02:14:32 Using Annoy for neighbor search, n_neighbors = 40
02:14:32 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:14:41 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec854af8eedb
02:14:41 Searching Annoy index using 1 thread, search_k = 4000
02:15:05 Annoy recall = 100%
02:15:06 Commencing smooth kNN distance calibration using 1 thread
02:15:10 Initializing from normalized Laplacian + noise
02:15:13 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:16:15 Optimization finished
02:16:17 UMAP embedding parameters a = 0.9922 b = 1.112
02:16:17 Read 49148 rows and found 50 numeric columns
02:16:17 Using Annoy for neighbor search, n_neighbors = 40
02:16:17 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:16:26 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8553979fbc
02:16:26 Searching Annoy index using 1 thread, search_k = 4000
02:16:50 Annoy recall = 100%
02:16:51 Commencing smooth kNN distance calibration using 1 thread
02:16:55 Initializing from normalized Laplacian + noise
02:16:58 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:18:00 Optimization finished
02:18:02 UMAP embedding parameters a = 0.9922 b = 1.112
02:18:02 Read 49148 rows and found 50 numeric columns
02:18:02 Using Annoy for neighbor search, n_neighbors = 40
02:18:02 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:18:12 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8558fbb14d
02:18:12 Searching Annoy index using 1 thread, search_k = 4000
02:18:36 Annoy recall = 100%
02:18:37 Commencing smooth kNN distance calibration using 1 thread
02:18:41 Initializing from normalized Laplacian + noise
02:18:44 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:19:46 Optimization finished
02:19:48 UMAP embedding parameters a = 0.9922 b = 1.112
02:19:48 Read 49148 rows and found 50 numeric columns
02:19:48 Using Annoy for neighbor search, n_neighbors = 40
02:19:48 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:19:57 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec851d0b3f3c
02:19:57 Searching Annoy index using 1 thread, search_k = 4000
02:20:22 Annoy recall = 100%
02:20:23 Commencing smooth kNN distance calibration using 1 thread
02:20:26 Initializing from normalized Laplacian + noise
02:20:29 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:21:31 Optimization finished
02:21:33 UMAP embedding parameters a = 0.9922 b = 1.112
02:21:33 Read 49148 rows and found 50 numeric columns
02:21:33 Using Annoy for neighbor search, n_neighbors = 40
02:21:33 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:21:43 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85781c8c83
02:21:43 Searching Annoy index using 1 thread, search_k = 4000
02:22:07 Annoy recall = 100%
02:22:08 Commencing smooth kNN distance calibration using 1 thread
02:22:12 Initializing from normalized Laplacian + noise
02:22:15 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:23:16 Optimization finished
02:23:18 UMAP embedding parameters a = 0.9922 b = 1.112
02:23:19 Read 49148 rows and found 50 numeric columns
02:23:19 Using Annoy for neighbor search, n_neighbors = 40
02:23:19 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:23:28 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec851b397a03
02:23:28 Searching Annoy index using 1 thread, search_k = 4000
02:23:53 Annoy recall = 100%
02:23:54 Commencing smooth kNN distance calibration using 1 thread
02:23:57 Initializing from normalized Laplacian + noise
02:24:00 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:25:02 Optimization finished
02:25:04 UMAP embedding parameters a = 0.9922 b = 1.112
02:25:04 Read 49148 rows and found 50 numeric columns
02:25:04 Using Annoy for neighbor search, n_neighbors = 40
02:25:04 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:25:14 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8522a26c30
02:25:14 Searching Annoy index using 1 thread, search_k = 4000
02:25:38 Annoy recall = 100%
02:25:39 Commencing smooth kNN distance calibration using 1 thread
02:25:43 Initializing from normalized Laplacian + noise
02:25:46 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:26:48 Optimization finished
02:26:50 UMAP embedding parameters a = 0.9922 b = 1.112
02:26:50 Read 49148 rows and found 50 numeric columns
02:26:50 Using Annoy for neighbor search, n_neighbors = 40
02:26:50 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:27:00 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8574eca2ca
02:27:00 Searching Annoy index using 1 thread, search_k = 4000
02:27:24 Annoy recall = 100%
02:27:25 Commencing smooth kNN distance calibration using 1 thread
02:27:29 Initializing from normalized Laplacian + noise
02:27:32 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:28:34 Optimization finished
02:28:36 UMAP embedding parameters a = 0.9922 b = 1.112
02:28:36 Read 49148 rows and found 50 numeric columns
02:28:36 Using Annoy for neighbor search, n_neighbors = 40
02:28:36 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:28:46 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85657a63f2
02:28:46 Searching Annoy index using 1 thread, search_k = 4000
02:29:10 Annoy recall = 100%
02:29:11 Commencing smooth kNN distance calibration using 1 thread
02:29:15 Initializing from normalized Laplacian + noise
02:29:18 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:30:20 Optimization finished
02:30:23 UMAP embedding parameters a = 0.9922 b = 1.112
02:30:23 Read 49148 rows and found 50 numeric columns
02:30:23 Using Annoy for neighbor search, n_neighbors = 40
02:30:23 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:30:32 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85230a9838
02:30:32 Searching Annoy index using 1 thread, search_k = 4000
02:30:56 Annoy recall = 100%
02:30:57 Commencing smooth kNN distance calibration using 1 thread
02:31:01 Initializing from normalized Laplacian + noise
02:31:04 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:32:29 Optimization finished
02:32:32 UMAP embedding parameters a = 0.9922 b = 1.112
02:32:32 Read 49148 rows and found 50 numeric columns
02:32:32 Using Annoy for neighbor search, n_neighbors = 40
02:32:32 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:32:42 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec855e5f8a01
02:32:43 Searching Annoy index using 1 thread, search_k = 4000
02:33:07 Annoy recall = 100%
02:33:08 Commencing smooth kNN distance calibration using 1 thread
02:33:12 Initializing from normalized Laplacian + noise
02:33:15 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:34:28 Optimization finished
02:34:31 UMAP embedding parameters a = 0.9922 b = 1.112
02:34:31 Read 49148 rows and found 50 numeric columns
02:34:31 Using Annoy for neighbor search, n_neighbors = 40
02:34:31 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:34:41 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85392fe13f
02:34:42 Searching Annoy index using 1 thread, search_k = 4000
02:35:06 Annoy recall = 100%
02:35:07 Commencing smooth kNN distance calibration using 1 thread
02:35:10 Initializing from normalized Laplacian + noise
02:35:14 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:36:49 Optimization finished
02:36:54 UMAP embedding parameters a = 0.9922 b = 1.112
02:36:54 Read 49148 rows and found 50 numeric columns
02:36:54 Using Annoy for neighbor search, n_neighbors = 40
02:36:54 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:37:03 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85190e0037
02:37:03 Searching Annoy index using 1 thread, search_k = 4000
02:37:28 Annoy recall = 100%
02:37:29 Commencing smooth kNN distance calibration using 1 thread
02:37:32 Initializing from normalized Laplacian + noise
02:37:36 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:38:38 Optimization finished
02:38:40 UMAP embedding parameters a = 0.9922 b = 1.112
02:38:40 Read 49148 rows and found 50 numeric columns
02:38:40 Using Annoy for neighbor search, n_neighbors = 40
02:38:40 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:38:50 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8513b6414
02:38:50 Searching Annoy index using 1 thread, search_k = 4000
02:39:14 Annoy recall = 100%
02:39:15 Commencing smooth kNN distance calibration using 1 thread
02:39:19 Initializing from normalized Laplacian + noise
02:39:22 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:40:24 Optimization finished
02:40:26 UMAP embedding parameters a = 0.9922 b = 1.112
02:40:26 Read 49148 rows and found 50 numeric columns
02:40:26 Using Annoy for neighbor search, n_neighbors = 40
02:40:26 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:40:36 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85186bb4f7
02:40:36 Searching Annoy index using 1 thread, search_k = 4000
02:41:00 Annoy recall = 100%
02:41:01 Commencing smooth kNN distance calibration using 1 thread
02:41:04 Initializing from normalized Laplacian + noise
02:41:07 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:42:09 Optimization finished
02:42:11 UMAP embedding parameters a = 0.9922 b = 1.112
02:42:11 Read 49148 rows and found 50 numeric columns
02:42:11 Using Annoy for neighbor search, n_neighbors = 40
02:42:11 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:42:20 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec855b18411a
02:42:20 Searching Annoy index using 1 thread, search_k = 4000
02:42:45 Annoy recall = 100%
02:42:46 Commencing smooth kNN distance calibration using 1 thread
02:42:50 Initializing from normalized Laplacian + noise
02:42:53 Commencing optimization for 200 epochs, with 2776314 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:43:54 Optimization finished
02:43:56 UMAP embedding parameters a = 0.9922 b = 1.112
02:43:56 Read 49148 rows and found 50 numeric columns
02:43:56 Using Annoy for neighbor search, n_neighbors = 50
02:43:56 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:44:05 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec854d5cfc91
02:44:05 Searching Annoy index using 1 thread, search_k = 5000
02:44:34 Annoy recall = 100%
02:44:35 Commencing smooth kNN distance calibration using 1 thread
02:44:39 Initializing from normalized Laplacian + noise
02:44:43 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:45:49 Optimization finished
02:45:51 UMAP embedding parameters a = 0.9922 b = 1.112
02:45:51 Read 49148 rows and found 50 numeric columns
02:45:51 Using Annoy for neighbor search, n_neighbors = 50
02:45:51 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:46:01 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec855be3382d
02:46:01 Searching Annoy index using 1 thread, search_k = 5000
02:46:30 Annoy recall = 100%
02:46:31 Commencing smooth kNN distance calibration using 1 thread
02:46:36 Initializing from normalized Laplacian + noise
02:46:39 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:47:45 Optimization finished
02:47:47 UMAP embedding parameters a = 0.9922 b = 1.112
02:47:47 Read 49148 rows and found 50 numeric columns
02:47:47 Using Annoy for neighbor search, n_neighbors = 50
02:47:47 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:47:57 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85484db6e2
02:47:57 Searching Annoy index using 1 thread, search_k = 5000
02:48:26 Annoy recall = 100%
02:48:27 Commencing smooth kNN distance calibration using 1 thread
02:48:31 Initializing from normalized Laplacian + noise
02:48:35 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:49:40 Optimization finished
02:49:43 UMAP embedding parameters a = 0.9922 b = 1.112
02:49:43 Read 49148 rows and found 50 numeric columns
02:49:43 Using Annoy for neighbor search, n_neighbors = 50
02:49:43 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:49:52 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85537de7ba
02:49:52 Searching Annoy index using 1 thread, search_k = 5000
02:50:21 Annoy recall = 100%
02:50:22 Commencing smooth kNN distance calibration using 1 thread
02:50:26 Initializing from normalized Laplacian + noise
02:50:30 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:51:36 Optimization finished
02:51:38 UMAP embedding parameters a = 0.9922 b = 1.112
02:51:38 Read 49148 rows and found 50 numeric columns
02:51:38 Using Annoy for neighbor search, n_neighbors = 50
02:51:38 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:51:48 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85217d2ca0
02:51:48 Searching Annoy index using 1 thread, search_k = 5000
02:52:17 Annoy recall = 100%
02:52:18 Commencing smooth kNN distance calibration using 1 thread
02:52:22 Initializing from normalized Laplacian + noise
02:52:26 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:53:31 Optimization finished
02:53:34 UMAP embedding parameters a = 0.9922 b = 1.112
02:53:34 Read 49148 rows and found 50 numeric columns
02:53:34 Using Annoy for neighbor search, n_neighbors = 50
02:53:34 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:53:43 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85387e3421
02:53:43 Searching Annoy index using 1 thread, search_k = 5000
02:54:13 Annoy recall = 100%
02:54:13 Commencing smooth kNN distance calibration using 1 thread
02:54:18 Initializing from normalized Laplacian + noise
02:54:22 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:55:28 Optimization finished
02:55:30 UMAP embedding parameters a = 0.9922 b = 1.112
02:55:30 Read 49148 rows and found 50 numeric columns
02:55:30 Using Annoy for neighbor search, n_neighbors = 50
02:55:30 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:55:39 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8512262a18
02:55:39 Searching Annoy index using 1 thread, search_k = 5000
02:56:08 Annoy recall = 100%
02:56:09 Commencing smooth kNN distance calibration using 1 thread
02:56:14 Initializing from normalized Laplacian + noise
02:56:17 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:57:24 Optimization finished
02:57:26 UMAP embedding parameters a = 0.9922 b = 1.112
02:57:26 Read 49148 rows and found 50 numeric columns
02:57:26 Using Annoy for neighbor search, n_neighbors = 50
02:57:26 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:57:36 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8563008af8
02:57:36 Searching Annoy index using 1 thread, search_k = 5000
02:58:05 Annoy recall = 100%
02:58:06 Commencing smooth kNN distance calibration using 1 thread
02:58:11 Initializing from normalized Laplacian + noise
02:58:14 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:59:21 Optimization finished
02:59:23 UMAP embedding parameters a = 0.9922 b = 1.112
02:59:23 Read 49148 rows and found 50 numeric columns
02:59:23 Using Annoy for neighbor search, n_neighbors = 50
02:59:23 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:59:33 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8576792fea
02:59:33 Searching Annoy index using 1 thread, search_k = 5000
03:00:02 Annoy recall = 100%
03:00:03 Commencing smooth kNN distance calibration using 1 thread
03:00:07 Initializing from normalized Laplacian + noise
03:00:11 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:01:17 Optimization finished
03:01:19 UMAP embedding parameters a = 0.9922 b = 1.112
03:01:19 Read 49148 rows and found 50 numeric columns
03:01:19 Using Annoy for neighbor search, n_neighbors = 50
03:01:19 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:01:28 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85405a6d7
03:01:28 Searching Annoy index using 1 thread, search_k = 5000
03:01:57 Annoy recall = 100%
03:01:58 Commencing smooth kNN distance calibration using 1 thread
03:02:03 Initializing from normalized Laplacian + noise
03:02:06 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:03:13 Optimization finished
03:03:15 UMAP embedding parameters a = 0.9922 b = 1.112
03:03:15 Read 49148 rows and found 50 numeric columns
03:03:15 Using Annoy for neighbor search, n_neighbors = 50
03:03:15 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:03:25 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8563aeca88
03:03:25 Searching Annoy index using 1 thread, search_k = 5000
03:03:54 Annoy recall = 100%
03:03:55 Commencing smooth kNN distance calibration using 1 thread
03:03:59 Initializing from normalized Laplacian + noise
03:04:03 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:05:09 Optimization finished
03:05:11 UMAP embedding parameters a = 0.9922 b = 1.112
03:05:11 Read 49148 rows and found 50 numeric columns
03:05:11 Using Annoy for neighbor search, n_neighbors = 50
03:05:11 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:05:21 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85d8c1ef8
03:05:21 Searching Annoy index using 1 thread, search_k = 5000
03:05:50 Annoy recall = 100%
03:05:50 Commencing smooth kNN distance calibration using 1 thread
03:05:55 Initializing from normalized Laplacian + noise
03:05:58 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:07:04 Optimization finished
03:07:06 UMAP embedding parameters a = 0.9922 b = 1.112
03:07:06 Read 49148 rows and found 50 numeric columns
03:07:06 Using Annoy for neighbor search, n_neighbors = 50
03:07:06 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:07:15 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec853722333f
03:07:15 Searching Annoy index using 1 thread, search_k = 5000
03:07:44 Annoy recall = 100%
03:07:45 Commencing smooth kNN distance calibration using 1 thread
03:07:50 Initializing from normalized Laplacian + noise
03:07:53 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:08:59 Optimization finished
03:09:01 UMAP embedding parameters a = 0.9922 b = 1.112
03:09:01 Read 49148 rows and found 50 numeric columns
03:09:01 Using Annoy for neighbor search, n_neighbors = 50
03:09:01 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:09:11 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec851ca949de
03:09:11 Searching Annoy index using 1 thread, search_k = 5000
03:09:39 Annoy recall = 100%
03:09:40 Commencing smooth kNN distance calibration using 1 thread
03:09:45 Initializing from normalized Laplacian + noise
03:09:48 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:10:54 Optimization finished
03:10:56 UMAP embedding parameters a = 0.9922 b = 1.112
03:10:56 Read 49148 rows and found 50 numeric columns
03:10:56 Using Annoy for neighbor search, n_neighbors = 50
03:10:56 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:11:06 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec853ee95c24
03:11:06 Searching Annoy index using 1 thread, search_k = 5000
03:11:34 Annoy recall = 100%
03:11:35 Commencing smooth kNN distance calibration using 1 thread
03:11:40 Initializing from normalized Laplacian + noise
03:11:44 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:12:50 Optimization finished
03:12:52 UMAP embedding parameters a = 0.9922 b = 1.112
03:12:52 Read 49148 rows and found 50 numeric columns
03:12:52 Using Annoy for neighbor search, n_neighbors = 50
03:12:52 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:13:02 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8521b221a
03:13:02 Searching Annoy index using 1 thread, search_k = 5000
03:13:31 Annoy recall = 100%
03:13:32 Commencing smooth kNN distance calibration using 1 thread
03:13:36 Initializing from normalized Laplacian + noise
03:13:40 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:14:46 Optimization finished
03:14:49 UMAP embedding parameters a = 0.9922 b = 1.112
03:14:49 Read 49148 rows and found 50 numeric columns
03:14:49 Using Annoy for neighbor search, n_neighbors = 50
03:14:49 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:14:58 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec857040e99a
03:14:58 Searching Annoy index using 1 thread, search_k = 5000
03:15:27 Annoy recall = 100%
03:15:28 Commencing smooth kNN distance calibration using 1 thread
03:15:33 Initializing from normalized Laplacian + noise
03:15:36 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:16:42 Optimization finished
03:16:44 UMAP embedding parameters a = 0.9922 b = 1.112
03:16:44 Read 49148 rows and found 50 numeric columns
03:16:44 Using Annoy for neighbor search, n_neighbors = 50
03:16:44 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:16:54 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8517e50d71
03:16:54 Searching Annoy index using 1 thread, search_k = 5000
03:17:23 Annoy recall = 100%
03:17:24 Commencing smooth kNN distance calibration using 1 thread
03:17:28 Initializing from normalized Laplacian + noise
03:17:32 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:18:38 Optimization finished
03:18:40 UMAP embedding parameters a = 0.9922 b = 1.112
03:18:40 Read 49148 rows and found 50 numeric columns
03:18:40 Using Annoy for neighbor search, n_neighbors = 50
03:18:40 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:18:50 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec851f266156
03:18:50 Searching Annoy index using 1 thread, search_k = 5000
03:19:19 Annoy recall = 100%
03:19:20 Commencing smooth kNN distance calibration using 1 thread
03:19:25 Initializing from normalized Laplacian + noise
03:19:28 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:20:34 Optimization finished
03:20:36 UMAP embedding parameters a = 0.9922 b = 1.112
03:20:36 Read 49148 rows and found 50 numeric columns
03:20:36 Using Annoy for neighbor search, n_neighbors = 50
03:20:36 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:20:46 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85685d761d
03:20:46 Searching Annoy index using 1 thread, search_k = 5000
03:21:14 Annoy recall = 100%
03:21:15 Commencing smooth kNN distance calibration using 1 thread
03:21:20 Initializing from normalized Laplacian + noise
03:21:23 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:22:29 Optimization finished
03:22:31 UMAP embedding parameters a = 0.9922 b = 1.112
03:22:31 Read 49148 rows and found 50 numeric columns
03:22:31 Using Annoy for neighbor search, n_neighbors = 50
03:22:31 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:22:41 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85331e8775
03:22:41 Searching Annoy index using 1 thread, search_k = 5000
03:23:10 Annoy recall = 100%
03:23:11 Commencing smooth kNN distance calibration using 1 thread
03:23:16 Initializing from normalized Laplacian + noise
03:23:19 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:24:25 Optimization finished
03:24:27 UMAP embedding parameters a = 0.9922 b = 1.112
03:24:27 Read 49148 rows and found 50 numeric columns
03:24:27 Using Annoy for neighbor search, n_neighbors = 50
03:24:27 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:24:36 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8541c8cd86
03:24:36 Searching Annoy index using 1 thread, search_k = 5000
03:25:06 Annoy recall = 100%
03:25:06 Commencing smooth kNN distance calibration using 1 thread
03:25:11 Initializing from normalized Laplacian + noise
03:25:14 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:26:20 Optimization finished
03:26:22 UMAP embedding parameters a = 0.9922 b = 1.112
03:26:22 Read 49148 rows and found 50 numeric columns
03:26:22 Using Annoy for neighbor search, n_neighbors = 50
03:26:22 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:26:31 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec855d4a18e8
03:26:31 Searching Annoy index using 1 thread, search_k = 5000
03:27:01 Annoy recall = 100%
03:27:02 Commencing smooth kNN distance calibration using 1 thread
03:27:06 Initializing from normalized Laplacian + noise
03:27:10 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:28:15 Optimization finished
03:28:18 UMAP embedding parameters a = 0.9922 b = 1.112
03:28:18 Read 49148 rows and found 50 numeric columns
03:28:18 Using Annoy for neighbor search, n_neighbors = 50
03:28:18 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:28:27 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec851898eb67
03:28:27 Searching Annoy index using 1 thread, search_k = 5000
03:28:56 Annoy recall = 100%
03:28:57 Commencing smooth kNN distance calibration using 1 thread
03:29:02 Initializing from normalized Laplacian + noise
03:29:06 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:30:11 Optimization finished
03:30:13 UMAP embedding parameters a = 0.9922 b = 1.112
03:30:13 Read 49148 rows and found 50 numeric columns
03:30:13 Using Annoy for neighbor search, n_neighbors = 50
03:30:13 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:30:23 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8564d365be
03:30:23 Searching Annoy index using 1 thread, search_k = 5000
03:30:52 Annoy recall = 100%
03:30:53 Commencing smooth kNN distance calibration using 1 thread
03:30:58 Initializing from normalized Laplacian + noise
03:31:01 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:32:07 Optimization finished
03:32:09 UMAP embedding parameters a = 0.9922 b = 1.112
03:32:09 Read 49148 rows and found 50 numeric columns
03:32:09 Using Annoy for neighbor search, n_neighbors = 50
03:32:09 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:32:19 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec853ba9a2e9
03:32:19 Searching Annoy index using 1 thread, search_k = 5000
03:32:48 Annoy recall = 100%
03:32:49 Commencing smooth kNN distance calibration using 1 thread
03:32:53 Initializing from normalized Laplacian + noise
03:32:57 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:34:03 Optimization finished
03:34:05 UMAP embedding parameters a = 0.9922 b = 1.112
03:34:05 Read 49148 rows and found 50 numeric columns
03:34:05 Using Annoy for neighbor search, n_neighbors = 50
03:34:05 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:34:15 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8551c8cca6
03:34:15 Searching Annoy index using 1 thread, search_k = 5000
03:34:44 Annoy recall = 100%
03:34:45 Commencing smooth kNN distance calibration using 1 thread
03:34:49 Initializing from normalized Laplacian + noise
03:34:53 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:35:58 Optimization finished
03:36:00 UMAP embedding parameters a = 0.9922 b = 1.112
03:36:00 Read 49148 rows and found 50 numeric columns
03:36:00 Using Annoy for neighbor search, n_neighbors = 50
03:36:00 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:36:10 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec857de165f6
03:36:10 Searching Annoy index using 1 thread, search_k = 5000
03:36:39 Annoy recall = 100%
03:36:40 Commencing smooth kNN distance calibration using 1 thread
03:36:44 Initializing from normalized Laplacian + noise
03:36:48 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:37:54 Optimization finished
03:37:56 UMAP embedding parameters a = 0.9922 b = 1.112
03:37:56 Read 49148 rows and found 50 numeric columns
03:37:56 Using Annoy for neighbor search, n_neighbors = 50
03:37:56 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:38:06 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec853ce506fd
03:38:06 Searching Annoy index using 1 thread, search_k = 5000
03:38:35 Annoy recall = 100%
03:38:36 Commencing smooth kNN distance calibration using 1 thread
03:38:40 Initializing from normalized Laplacian + noise
03:38:44 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:39:50 Optimization finished
03:39:52 UMAP embedding parameters a = 0.9922 b = 1.112
03:39:52 Read 49148 rows and found 50 numeric columns
03:39:52 Using Annoy for neighbor search, n_neighbors = 50
03:39:52 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:40:02 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec856a34819e
03:40:02 Searching Annoy index using 1 thread, search_k = 5000
03:40:30 Annoy recall = 100%
03:40:31 Commencing smooth kNN distance calibration using 1 thread
03:40:36 Initializing from normalized Laplacian + noise
03:40:40 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:41:46 Optimization finished
03:41:48 UMAP embedding parameters a = 0.9922 b = 1.112
03:41:48 Read 49148 rows and found 50 numeric columns
03:41:48 Using Annoy for neighbor search, n_neighbors = 50
03:41:48 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:41:57 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8558f9a710
03:41:57 Searching Annoy index using 1 thread, search_k = 5000
03:42:26 Annoy recall = 100%
03:42:27 Commencing smooth kNN distance calibration using 1 thread
03:42:32 Initializing from normalized Laplacian + noise
03:42:35 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:43:42 Optimization finished
03:43:44 UMAP embedding parameters a = 0.9922 b = 1.112
03:43:44 Read 49148 rows and found 50 numeric columns
03:43:44 Using Annoy for neighbor search, n_neighbors = 50
03:43:44 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:43:54 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85a42038e
03:43:54 Searching Annoy index using 1 thread, search_k = 5000
03:44:22 Annoy recall = 100%
03:44:23 Commencing smooth kNN distance calibration using 1 thread
03:44:27 Initializing from normalized Laplacian + noise
03:44:31 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:45:37 Optimization finished
03:45:39 UMAP embedding parameters a = 0.9922 b = 1.112
03:45:39 Read 49148 rows and found 50 numeric columns
03:45:39 Using Annoy for neighbor search, n_neighbors = 50
03:45:39 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:45:49 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec854617b9cb
03:45:49 Searching Annoy index using 1 thread, search_k = 5000
03:46:18 Annoy recall = 100%
03:46:19 Commencing smooth kNN distance calibration using 1 thread
03:46:24 Initializing from normalized Laplacian + noise
03:46:27 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:47:33 Optimization finished
03:47:36 UMAP embedding parameters a = 0.9922 b = 1.112
03:47:36 Read 49148 rows and found 50 numeric columns
03:47:36 Using Annoy for neighbor search, n_neighbors = 50
03:47:36 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:47:45 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8521475df2
03:47:45 Searching Annoy index using 1 thread, search_k = 5000
03:48:14 Annoy recall = 100%
03:48:15 Commencing smooth kNN distance calibration using 1 thread
03:48:19 Initializing from normalized Laplacian + noise
03:48:23 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:49:29 Optimization finished
03:49:32 UMAP embedding parameters a = 0.9922 b = 1.112
03:49:32 Read 49148 rows and found 50 numeric columns
03:49:32 Using Annoy for neighbor search, n_neighbors = 50
03:49:32 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:49:41 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec855dbfeb48
03:49:41 Searching Annoy index using 1 thread, search_k = 5000
03:50:10 Annoy recall = 100%
03:50:11 Commencing smooth kNN distance calibration using 1 thread
03:50:16 Initializing from normalized Laplacian + noise
03:50:20 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:51:25 Optimization finished
03:51:27 UMAP embedding parameters a = 0.9922 b = 1.112
03:51:27 Read 49148 rows and found 50 numeric columns
03:51:27 Using Annoy for neighbor search, n_neighbors = 50
03:51:27 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:51:37 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec856794e66b
03:51:37 Searching Annoy index using 1 thread, search_k = 5000
03:52:06 Annoy recall = 100%
03:52:06 Commencing smooth kNN distance calibration using 1 thread
03:52:11 Initializing from normalized Laplacian + noise
03:52:14 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:53:21 Optimization finished
03:53:23 UMAP embedding parameters a = 0.9922 b = 1.112
03:53:23 Read 49148 rows and found 50 numeric columns
03:53:23 Using Annoy for neighbor search, n_neighbors = 50
03:53:23 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:53:33 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8559c59213
03:53:33 Searching Annoy index using 1 thread, search_k = 5000
03:54:01 Annoy recall = 100%
03:54:02 Commencing smooth kNN distance calibration using 1 thread
03:54:07 Initializing from normalized Laplacian + noise
03:54:11 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:55:16 Optimization finished
03:55:18 UMAP embedding parameters a = 0.9922 b = 1.112
03:55:19 Read 49148 rows and found 50 numeric columns
03:55:19 Using Annoy for neighbor search, n_neighbors = 50
03:55:19 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:55:28 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec856fe61560
03:55:28 Searching Annoy index using 1 thread, search_k = 5000
03:55:57 Annoy recall = 100%
03:55:58 Commencing smooth kNN distance calibration using 1 thread
03:56:03 Initializing from normalized Laplacian + noise
03:56:07 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:57:13 Optimization finished
03:57:15 UMAP embedding parameters a = 0.9922 b = 1.112
03:57:15 Read 49148 rows and found 50 numeric columns
03:57:15 Using Annoy for neighbor search, n_neighbors = 50
03:57:15 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:57:24 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec854a957164
03:57:24 Searching Annoy index using 1 thread, search_k = 5000
03:57:53 Annoy recall = 100%
03:57:54 Commencing smooth kNN distance calibration using 1 thread
03:57:58 Initializing from normalized Laplacian + noise
03:58:02 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:59:08 Optimization finished
03:59:10 UMAP embedding parameters a = 0.9922 b = 1.112
03:59:10 Read 49148 rows and found 50 numeric columns
03:59:10 Using Annoy for neighbor search, n_neighbors = 50
03:59:10 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:59:19 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec85503ec1fd
03:59:19 Searching Annoy index using 1 thread, search_k = 5000
03:59:49 Annoy recall = 100%
03:59:50 Commencing smooth kNN distance calibration using 1 thread
03:59:54 Initializing from normalized Laplacian + noise
03:59:58 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:01:05 Optimization finished
04:01:07 UMAP embedding parameters a = 0.9922 b = 1.112
04:01:07 Read 49148 rows and found 50 numeric columns
04:01:07 Using Annoy for neighbor search, n_neighbors = 50
04:01:07 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:01:17 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8573ebbc37
04:01:17 Searching Annoy index using 1 thread, search_k = 5000
04:01:46 Annoy recall = 100%
04:01:47 Commencing smooth kNN distance calibration using 1 thread
04:01:51 Initializing from normalized Laplacian + noise
04:01:55 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:03:01 Optimization finished
04:03:03 UMAP embedding parameters a = 0.9922 b = 1.112
04:03:03 Read 49148 rows and found 50 numeric columns
04:03:03 Using Annoy for neighbor search, n_neighbors = 50
04:03:03 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:03:13 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec852e443bec
04:03:13 Searching Annoy index using 1 thread, search_k = 5000
04:03:42 Annoy recall = 100%
04:03:43 Commencing smooth kNN distance calibration using 1 thread
04:03:47 Initializing from normalized Laplacian + noise
04:03:51 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:04:56 Optimization finished
04:04:59 UMAP embedding parameters a = 0.9922 b = 1.112
04:04:59 Read 49148 rows and found 50 numeric columns
04:04:59 Using Annoy for neighbor search, n_neighbors = 50
04:04:59 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:05:08 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec855dcae0f5
04:05:08 Searching Annoy index using 1 thread, search_k = 5000
04:05:37 Annoy recall = 100%
04:05:38 Commencing smooth kNN distance calibration using 1 thread
04:05:42 Initializing from normalized Laplacian + noise
04:05:46 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:06:51 Optimization finished
04:06:54 UMAP embedding parameters a = 0.9922 b = 1.112
04:06:54 Read 49148 rows and found 50 numeric columns
04:06:54 Using Annoy for neighbor search, n_neighbors = 50
04:06:54 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:07:03 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec852b0def76
04:07:03 Searching Annoy index using 1 thread, search_k = 5000
04:07:32 Annoy recall = 100%
04:07:32 Commencing smooth kNN distance calibration using 1 thread
04:07:37 Initializing from normalized Laplacian + noise
04:07:40 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:08:46 Optimization finished
04:08:49 UMAP embedding parameters a = 0.9922 b = 1.112
04:08:49 Read 49148 rows and found 50 numeric columns
04:08:49 Using Annoy for neighbor search, n_neighbors = 50
04:08:49 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:08:58 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec854aed85ca
04:08:58 Searching Annoy index using 1 thread, search_k = 5000
04:09:28 Annoy recall = 100%
04:09:28 Commencing smooth kNN distance calibration using 1 thread
04:09:33 Initializing from normalized Laplacian + noise
04:09:37 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:10:43 Optimization finished
04:10:45 UMAP embedding parameters a = 0.9922 b = 1.112
04:10:45 Read 49148 rows and found 50 numeric columns
04:10:45 Using Annoy for neighbor search, n_neighbors = 50
04:10:45 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:10:54 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec851cb43d19
04:10:54 Searching Annoy index using 1 thread, search_k = 5000
04:11:23 Annoy recall = 100%
04:11:24 Commencing smooth kNN distance calibration using 1 thread
04:11:28 Initializing from normalized Laplacian + noise
04:11:32 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:12:37 Optimization finished
04:12:40 UMAP embedding parameters a = 0.9922 b = 1.112
04:12:40 Read 49148 rows and found 50 numeric columns
04:12:40 Using Annoy for neighbor search, n_neighbors = 50
04:12:40 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:12:49 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec852d291190
04:12:49 Searching Annoy index using 1 thread, search_k = 5000
04:13:18 Annoy recall = 100%
04:13:19 Commencing smooth kNN distance calibration using 1 thread
04:13:23 Initializing from normalized Laplacian + noise
04:13:27 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:14:32 Optimization finished
04:14:35 UMAP embedding parameters a = 0.9922 b = 1.112
04:14:35 Read 49148 rows and found 50 numeric columns
04:14:35 Using Annoy for neighbor search, n_neighbors = 50
04:14:35 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:14:44 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec853b2e6f65
04:14:44 Searching Annoy index using 1 thread, search_k = 5000
04:15:13 Annoy recall = 100%
04:15:14 Commencing smooth kNN distance calibration using 1 thread
04:15:19 Initializing from normalized Laplacian + noise
04:15:22 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:16:28 Optimization finished
04:16:30 UMAP embedding parameters a = 0.9922 b = 1.112
04:16:30 Read 49148 rows and found 50 numeric columns
04:16:30 Using Annoy for neighbor search, n_neighbors = 50
04:16:30 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:16:39 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec8534994a8b
04:16:39 Searching Annoy index using 1 thread, search_k = 5000
04:17:08 Annoy recall = 100%
04:17:09 Commencing smooth kNN distance calibration using 1 thread
04:17:14 Initializing from normalized Laplacian + noise
04:17:18 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:18:24 Optimization finished
04:18:26 UMAP embedding parameters a = 0.9922 b = 1.112
04:18:26 Read 49148 rows and found 50 numeric columns
04:18:26 Using Annoy for neighbor search, n_neighbors = 50
04:18:26 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:18:35 Writing NN index file to temp file /scratch/RtmpORPRHJ/filec854c4f72e6
04:18:36 Searching Annoy index using 1 thread, search_k = 5000
04:19:05 Annoy recall = 100%
04:19:06 Commencing smooth kNN distance calibration using 1 thread
04:19:10 Initializing from normalized Laplacian + noise
04:19:14 Commencing optimization for 200 epochs, with 3417534 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:20:21 Optimization finished
