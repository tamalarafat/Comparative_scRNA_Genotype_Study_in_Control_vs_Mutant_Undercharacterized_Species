Attaching SeuratObject
Loading required package: ggraph
Loading required package: ggplot2
Loading required package: cowplot
Loading required package: Matrix
Loading required package: patchwork

Attaching package: ‘patchwork’

The following object is masked from ‘package:cowplot’:

    align_plots


Attaching package: ‘ggpubr’

The following object is masked from ‘package:cowplot’:

    get_legend


Attaching package: ‘ggthemes’

The following object is masked from ‘package:cowplot’:

    theme_map


Attaching package: ‘tidyr’

The following objects are masked from ‘package:Matrix’:

    expand, pack, unpack


Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union


Attaching package: ‘readr’

The following object is masked from ‘package:scales’:

    col_factor


clusterProfiler v3.18.1  For help: https://guangchuangyu.github.io/software/clusterProfiler

If you use clusterProfiler in published research, please cite:
Guangchuang Yu, Li-Gen Wang, Yanyan Han, Qing-Yu He. clusterProfiler: an R package for comparing biological themes among gene clusters. OMICS: A Journal of Integrative Biology. 2012, 16(5):284-287.

Attaching package: ‘clusterProfiler’

The following object is masked from ‘package:stats’:

    filter

Loading required package: princurve
Loading required package: viridisLite

Attaching package: ‘viridis’

The following object is masked from ‘package:scales’:

    viridis_pal

Loading required package: SummarizedExperiment
Loading required package: MatrixGenerics
Loading required package: matrixStats

Attaching package: ‘matrixStats’

The following object is masked from ‘package:dplyr’:

    count


Attaching package: ‘MatrixGenerics’

The following objects are masked from ‘package:matrixStats’:

    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,
    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,
    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,
    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,
    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,
    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,
    colWeightedMeans, colWeightedMedians, colWeightedSds,
    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,
    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,
    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,
    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,
    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,
    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,
    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,
    rowWeightedSds, rowWeightedVars

Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:dplyr’:

    combine, intersect, setdiff, union

The following object is masked from ‘package:rliger’:

    normalize

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames,
    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,
    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,
    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,
    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,
    union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following object is masked from ‘package:clusterProfiler’:

    rename

The following objects are masked from ‘package:dplyr’:

    first, rename

The following object is masked from ‘package:tidyr’:

    expand

The following object is masked from ‘package:Matrix’:

    expand

The following object is masked from ‘package:base’:

    expand.grid

Loading required package: IRanges

Attaching package: ‘IRanges’

The following object is masked from ‘package:clusterProfiler’:

    slice

The following objects are masked from ‘package:dplyr’:

    collapse, desc, slice

Loading required package: GenomeInfoDb
Loading required package: Biobase
Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.


Attaching package: ‘Biobase’

The following object is masked from ‘package:MatrixGenerics’:

    rowMedians

The following objects are masked from ‘package:matrixStats’:

    anyMissing, rowMedians


Attaching package: ‘SummarizedExperiment’

The following object is masked from ‘package:SeuratObject’:

    Assays

The following object is masked from ‘package:Seurat’:

    Assays


Attaching package: ‘enrichplot’

The following object is masked from ‘package:ggpubr’:

    color_palette

Loading required package: AnnotationDbi

Attaching package: ‘AnnotationDbi’

The following object is masked from ‘package:clusterProfiler’:

    select

The following object is masked from ‘package:dplyr’:

    select


Loading required package: registry
Loading required package: rngtools
Loading required package: cluster
NMF - BioConductor layer [OK] | Shared memory capabilities [OK] | Cores 2/2

Attaching package: ‘NMF’

The following object is masked from ‘package:S4Vectors’:

    nrun


Attaching package: ‘reshape2’

The following object is masked from ‘package:tidyr’:

    smiths

Warning message:
package ‘ggbeeswarm’ was built under R version 4.2.0 
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
23:29:01 UMAP embedding parameters a = 0.9922 b = 1.112
23:29:01 Read 49148 rows and found 45 numeric columns
23:29:01 Using Annoy for neighbor search, n_neighbors = 20
23:29:01 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:29:12 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb55e363822
23:29:12 Searching Annoy index using 1 thread, search_k = 2000
23:29:27 Annoy recall = 100%
23:29:28 Commencing smooth kNN distance calibration using 1 thread
23:29:31 Initializing from normalized Laplacian + noise
23:29:33 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:30:24 Optimization finished
23:30:27 UMAP embedding parameters a = 0.9922 b = 1.112
23:30:27 Read 49148 rows and found 45 numeric columns
23:30:27 Using Annoy for neighbor search, n_neighbors = 20
23:30:27 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:30:37 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb560fb1d40
23:30:37 Searching Annoy index using 1 thread, search_k = 2000
23:30:53 Annoy recall = 100%
23:30:54 Commencing smooth kNN distance calibration using 1 thread
23:30:57 Initializing from normalized Laplacian + noise
23:30:59 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:31:50 Optimization finished
23:31:52 UMAP embedding parameters a = 0.9922 b = 1.112
23:31:52 Read 49148 rows and found 45 numeric columns
23:31:52 Using Annoy for neighbor search, n_neighbors = 20
23:31:52 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:32:03 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb54ef3d9ac
23:32:03 Searching Annoy index using 1 thread, search_k = 2000
23:32:18 Annoy recall = 100%
23:32:19 Commencing smooth kNN distance calibration using 1 thread
23:32:22 Initializing from normalized Laplacian + noise
23:32:24 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:33:15 Optimization finished
23:33:17 UMAP embedding parameters a = 0.9922 b = 1.112
23:33:17 Read 49148 rows and found 45 numeric columns
23:33:17 Using Annoy for neighbor search, n_neighbors = 20
23:33:17 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:33:28 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb552ef051c
23:33:28 Searching Annoy index using 1 thread, search_k = 2000
23:33:44 Annoy recall = 100%
23:33:45 Commencing smooth kNN distance calibration using 1 thread
23:33:48 Initializing from normalized Laplacian + noise
23:33:50 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:34:41 Optimization finished
23:34:44 UMAP embedding parameters a = 0.9922 b = 1.112
23:34:44 Read 49148 rows and found 45 numeric columns
23:34:44 Using Annoy for neighbor search, n_neighbors = 20
23:34:44 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:34:54 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb53950e91e
23:34:54 Searching Annoy index using 1 thread, search_k = 2000
23:35:10 Annoy recall = 100%
23:35:11 Commencing smooth kNN distance calibration using 1 thread
23:35:13 Initializing from normalized Laplacian + noise
23:35:15 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:36:06 Optimization finished
23:36:08 UMAP embedding parameters a = 0.9922 b = 1.112
23:36:08 Read 49148 rows and found 45 numeric columns
23:36:08 Using Annoy for neighbor search, n_neighbors = 20
23:36:08 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:36:19 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb556217c6b
23:36:19 Searching Annoy index using 1 thread, search_k = 2000
23:36:35 Annoy recall = 100%
23:36:36 Commencing smooth kNN distance calibration using 1 thread
23:36:39 Initializing from normalized Laplacian + noise
23:36:41 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:37:32 Optimization finished
23:37:34 UMAP embedding parameters a = 0.9922 b = 1.112
23:37:34 Read 49148 rows and found 45 numeric columns
23:37:34 Using Annoy for neighbor search, n_neighbors = 20
23:37:34 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:37:45 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb570b31e2d
23:37:45 Searching Annoy index using 1 thread, search_k = 2000
23:38:01 Annoy recall = 100%
23:38:02 Commencing smooth kNN distance calibration using 1 thread
23:38:04 Initializing from normalized Laplacian + noise
23:38:07 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:38:58 Optimization finished
23:39:01 UMAP embedding parameters a = 0.9922 b = 1.112
23:39:01 Read 49148 rows and found 45 numeric columns
23:39:01 Using Annoy for neighbor search, n_neighbors = 20
23:39:01 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:39:11 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb57e657c5
23:39:11 Searching Annoy index using 1 thread, search_k = 2000
23:39:27 Annoy recall = 100%
23:39:28 Commencing smooth kNN distance calibration using 1 thread
23:39:31 Initializing from normalized Laplacian + noise
23:39:33 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:40:24 Optimization finished
23:40:27 UMAP embedding parameters a = 0.9922 b = 1.112
23:40:27 Read 49148 rows and found 45 numeric columns
23:40:27 Using Annoy for neighbor search, n_neighbors = 20
23:40:27 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:40:37 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5163136a8
23:40:37 Searching Annoy index using 1 thread, search_k = 2000
23:40:53 Annoy recall = 100%
23:40:54 Commencing smooth kNN distance calibration using 1 thread
23:40:56 Initializing from normalized Laplacian + noise
23:40:58 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:41:49 Optimization finished
23:41:51 UMAP embedding parameters a = 0.9922 b = 1.112
23:41:51 Read 49148 rows and found 45 numeric columns
23:41:51 Using Annoy for neighbor search, n_neighbors = 20
23:41:51 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:42:01 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb54d26e69f
23:42:01 Searching Annoy index using 1 thread, search_k = 2000
23:42:17 Annoy recall = 100%
23:42:18 Commencing smooth kNN distance calibration using 1 thread
23:42:20 Initializing from normalized Laplacian + noise
23:42:22 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:43:13 Optimization finished
23:43:15 UMAP embedding parameters a = 0.9922 b = 1.112
23:43:15 Read 49148 rows and found 45 numeric columns
23:43:15 Using Annoy for neighbor search, n_neighbors = 20
23:43:15 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:43:25 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5743dd7db
23:43:25 Searching Annoy index using 1 thread, search_k = 2000
23:43:41 Annoy recall = 100%
23:43:42 Commencing smooth kNN distance calibration using 1 thread
23:43:44 Initializing from normalized Laplacian + noise
23:43:46 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:44:35 Optimization finished
23:44:38 UMAP embedding parameters a = 0.9922 b = 1.112
23:44:38 Read 49148 rows and found 45 numeric columns
23:44:38 Using Annoy for neighbor search, n_neighbors = 20
23:44:38 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:44:48 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5536908e6
23:44:48 Searching Annoy index using 1 thread, search_k = 2000
23:45:04 Annoy recall = 100%
23:45:04 Commencing smooth kNN distance calibration using 1 thread
23:45:07 Initializing from normalized Laplacian + noise
23:45:09 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:45:59 Optimization finished
23:46:01 UMAP embedding parameters a = 0.9922 b = 1.112
23:46:01 Read 49148 rows and found 45 numeric columns
23:46:01 Using Annoy for neighbor search, n_neighbors = 20
23:46:01 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:46:12 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5779fda1e
23:46:12 Searching Annoy index using 1 thread, search_k = 2000
23:46:27 Annoy recall = 100%
23:46:28 Commencing smooth kNN distance calibration using 1 thread
23:46:31 Initializing from normalized Laplacian + noise
23:46:33 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:47:23 Optimization finished
23:47:25 UMAP embedding parameters a = 0.9922 b = 1.112
23:47:25 Read 49148 rows and found 45 numeric columns
23:47:25 Using Annoy for neighbor search, n_neighbors = 20
23:47:25 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:47:36 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5426c1d6f
23:47:36 Searching Annoy index using 1 thread, search_k = 2000
23:47:51 Annoy recall = 100%
23:47:52 Commencing smooth kNN distance calibration using 1 thread
23:47:55 Initializing from normalized Laplacian + noise
23:47:57 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:48:47 Optimization finished
23:48:49 UMAP embedding parameters a = 0.9922 b = 1.112
23:48:49 Read 49148 rows and found 45 numeric columns
23:48:49 Using Annoy for neighbor search, n_neighbors = 20
23:48:49 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:49:00 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb596cfb8f
23:49:00 Searching Annoy index using 1 thread, search_k = 2000
23:49:16 Annoy recall = 100%
23:49:17 Commencing smooth kNN distance calibration using 1 thread
23:49:19 Initializing from normalized Laplacian + noise
23:49:21 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:50:11 Optimization finished
23:50:13 UMAP embedding parameters a = 0.9922 b = 1.112
23:50:13 Read 49148 rows and found 45 numeric columns
23:50:13 Using Annoy for neighbor search, n_neighbors = 20
23:50:13 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:50:24 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb56fdb190e
23:50:24 Searching Annoy index using 1 thread, search_k = 2000
23:50:39 Annoy recall = 100%
23:50:40 Commencing smooth kNN distance calibration using 1 thread
23:50:43 Initializing from normalized Laplacian + noise
23:50:45 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:51:35 Optimization finished
23:51:37 UMAP embedding parameters a = 0.9922 b = 1.112
23:51:37 Read 49148 rows and found 45 numeric columns
23:51:37 Using Annoy for neighbor search, n_neighbors = 20
23:51:37 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:51:48 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb52390028b
23:51:48 Searching Annoy index using 1 thread, search_k = 2000
23:52:03 Annoy recall = 100%
23:52:04 Commencing smooth kNN distance calibration using 1 thread
23:52:07 Initializing from normalized Laplacian + noise
23:52:09 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:52:59 Optimization finished
23:53:01 UMAP embedding parameters a = 0.9922 b = 1.112
23:53:01 Read 49148 rows and found 45 numeric columns
23:53:01 Using Annoy for neighbor search, n_neighbors = 20
23:53:01 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:53:11 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5109dab54
23:53:11 Searching Annoy index using 1 thread, search_k = 2000
23:53:27 Annoy recall = 100%
23:53:28 Commencing smooth kNN distance calibration using 1 thread
23:53:30 Initializing from normalized Laplacian + noise
23:53:32 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:54:22 Optimization finished
23:54:24 UMAP embedding parameters a = 0.9922 b = 1.112
23:54:24 Read 49148 rows and found 45 numeric columns
23:54:24 Using Annoy for neighbor search, n_neighbors = 20
23:54:24 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:54:34 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb51dc6139c
23:54:34 Searching Annoy index using 1 thread, search_k = 2000
23:54:50 Annoy recall = 100%
23:54:51 Commencing smooth kNN distance calibration using 1 thread
23:54:53 Initializing from normalized Laplacian + noise
23:54:55 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:55:45 Optimization finished
23:55:47 UMAP embedding parameters a = 0.9922 b = 1.112
23:55:47 Read 49148 rows and found 45 numeric columns
23:55:47 Using Annoy for neighbor search, n_neighbors = 20
23:55:47 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:55:58 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb55b72ba4
23:55:58 Searching Annoy index using 1 thread, search_k = 2000
23:56:13 Annoy recall = 100%
23:56:14 Commencing smooth kNN distance calibration using 1 thread
23:56:17 Initializing from normalized Laplacian + noise
23:56:19 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:57:09 Optimization finished
23:57:12 UMAP embedding parameters a = 0.9922 b = 1.112
23:57:12 Read 49148 rows and found 45 numeric columns
23:57:12 Using Annoy for neighbor search, n_neighbors = 20
23:57:12 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:57:22 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb544924a45
23:57:22 Searching Annoy index using 1 thread, search_k = 2000
23:57:38 Annoy recall = 100%
23:57:38 Commencing smooth kNN distance calibration using 1 thread
23:57:41 Initializing from normalized Laplacian + noise
23:57:43 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:58:33 Optimization finished
23:58:36 UMAP embedding parameters a = 0.9922 b = 1.112
23:58:36 Read 49148 rows and found 45 numeric columns
23:58:36 Using Annoy for neighbor search, n_neighbors = 20
23:58:36 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:58:46 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb566705c01
23:58:46 Searching Annoy index using 1 thread, search_k = 2000
23:59:02 Annoy recall = 100%
23:59:03 Commencing smooth kNN distance calibration using 1 thread
23:59:06 Initializing from normalized Laplacian + noise
23:59:08 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
23:59:58 Optimization finished
00:00:00 UMAP embedding parameters a = 0.9922 b = 1.112
00:00:00 Read 49148 rows and found 45 numeric columns
00:00:00 Using Annoy for neighbor search, n_neighbors = 20
00:00:00 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:00:11 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb55908633d
00:00:11 Searching Annoy index using 1 thread, search_k = 2000
00:00:26 Annoy recall = 100%
00:00:27 Commencing smooth kNN distance calibration using 1 thread
00:00:30 Initializing from normalized Laplacian + noise
00:00:32 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:01:22 Optimization finished
00:01:25 UMAP embedding parameters a = 0.9922 b = 1.112
00:01:25 Read 49148 rows and found 45 numeric columns
00:01:25 Using Annoy for neighbor search, n_neighbors = 20
00:01:25 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:01:35 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb531022ff4
00:01:35 Searching Annoy index using 1 thread, search_k = 2000
00:01:51 Annoy recall = 100%
00:01:52 Commencing smooth kNN distance calibration using 1 thread
00:01:55 Initializing from normalized Laplacian + noise
00:01:57 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:02:47 Optimization finished
00:02:49 UMAP embedding parameters a = 0.9922 b = 1.112
00:02:49 Read 49148 rows and found 45 numeric columns
00:02:49 Using Annoy for neighbor search, n_neighbors = 20
00:02:49 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:03:00 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb55152426d
00:03:00 Searching Annoy index using 1 thread, search_k = 2000
00:03:16 Annoy recall = 100%
00:03:17 Commencing smooth kNN distance calibration using 1 thread
00:03:19 Initializing from normalized Laplacian + noise
00:03:21 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:04:11 Optimization finished
00:04:14 UMAP embedding parameters a = 0.9922 b = 1.112
00:04:14 Read 49148 rows and found 45 numeric columns
00:04:14 Using Annoy for neighbor search, n_neighbors = 20
00:04:14 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:04:24 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb51f8da336
00:04:24 Searching Annoy index using 1 thread, search_k = 2000
00:04:40 Annoy recall = 100%
00:04:41 Commencing smooth kNN distance calibration using 1 thread
00:04:44 Initializing from normalized Laplacian + noise
00:04:46 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:05:36 Optimization finished
00:05:38 UMAP embedding parameters a = 0.9922 b = 1.112
00:05:38 Read 49148 rows and found 45 numeric columns
00:05:38 Using Annoy for neighbor search, n_neighbors = 20
00:05:38 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:05:49 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb522b99de7
00:05:49 Searching Annoy index using 1 thread, search_k = 2000
00:06:05 Annoy recall = 100%
00:06:06 Commencing smooth kNN distance calibration using 1 thread
00:06:08 Initializing from normalized Laplacian + noise
00:06:10 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:07:02 Optimization finished
00:07:04 UMAP embedding parameters a = 0.9922 b = 1.112
00:07:04 Read 49148 rows and found 45 numeric columns
00:07:04 Using Annoy for neighbor search, n_neighbors = 20
00:07:04 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:07:15 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb532055363
00:07:15 Searching Annoy index using 1 thread, search_k = 2000
00:07:30 Annoy recall = 100%
00:07:31 Commencing smooth kNN distance calibration using 1 thread
00:07:34 Initializing from normalized Laplacian + noise
00:07:36 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:08:26 Optimization finished
00:08:28 UMAP embedding parameters a = 0.9922 b = 1.112
00:08:28 Read 49148 rows and found 45 numeric columns
00:08:28 Using Annoy for neighbor search, n_neighbors = 20
00:08:28 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:08:39 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb559f218af
00:08:39 Searching Annoy index using 1 thread, search_k = 2000
00:08:54 Annoy recall = 100%
00:08:55 Commencing smooth kNN distance calibration using 1 thread
00:08:57 Initializing from normalized Laplacian + noise
00:09:00 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:09:50 Optimization finished
00:09:52 UMAP embedding parameters a = 0.9922 b = 1.112
00:09:52 Read 49148 rows and found 45 numeric columns
00:09:52 Using Annoy for neighbor search, n_neighbors = 20
00:09:52 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:10:03 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb522f36e73
00:10:03 Searching Annoy index using 1 thread, search_k = 2000
00:10:18 Annoy recall = 100%
00:10:19 Commencing smooth kNN distance calibration using 1 thread
00:10:22 Initializing from normalized Laplacian + noise
00:10:24 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:11:14 Optimization finished
00:11:16 UMAP embedding parameters a = 0.9922 b = 1.112
00:11:16 Read 49148 rows and found 45 numeric columns
00:11:16 Using Annoy for neighbor search, n_neighbors = 20
00:11:16 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:11:27 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5662f4bf4
00:11:27 Searching Annoy index using 1 thread, search_k = 2000
00:11:43 Annoy recall = 100%
00:11:43 Commencing smooth kNN distance calibration using 1 thread
00:11:46 Initializing from normalized Laplacian + noise
00:11:48 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:12:39 Optimization finished
00:12:41 UMAP embedding parameters a = 0.9922 b = 1.112
00:12:41 Read 49148 rows and found 45 numeric columns
00:12:41 Using Annoy for neighbor search, n_neighbors = 20
00:12:41 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:12:52 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5382850d1
00:12:52 Searching Annoy index using 1 thread, search_k = 2000
00:13:08 Annoy recall = 100%
00:13:09 Commencing smooth kNN distance calibration using 1 thread
00:13:11 Initializing from normalized Laplacian + noise
00:13:13 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:14:04 Optimization finished
00:14:06 UMAP embedding parameters a = 0.9922 b = 1.112
00:14:06 Read 49148 rows and found 45 numeric columns
00:14:06 Using Annoy for neighbor search, n_neighbors = 20
00:14:06 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:14:17 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb53ee8bb3
00:14:17 Searching Annoy index using 1 thread, search_k = 2000
00:14:32 Annoy recall = 100%
00:14:33 Commencing smooth kNN distance calibration using 1 thread
00:14:36 Initializing from normalized Laplacian + noise
00:14:38 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:15:28 Optimization finished
00:15:30 UMAP embedding parameters a = 0.9922 b = 1.112
00:15:31 Read 49148 rows and found 45 numeric columns
00:15:31 Using Annoy for neighbor search, n_neighbors = 20
00:15:31 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:15:41 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5352325a1
00:15:41 Searching Annoy index using 1 thread, search_k = 2000
00:15:56 Annoy recall = 100%
00:15:57 Commencing smooth kNN distance calibration using 1 thread
00:16:00 Initializing from normalized Laplacian + noise
00:16:02 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:16:52 Optimization finished
00:16:55 UMAP embedding parameters a = 0.9922 b = 1.112
00:16:55 Read 49148 rows and found 45 numeric columns
00:16:55 Using Annoy for neighbor search, n_neighbors = 20
00:16:55 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:17:05 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5b1755ed
00:17:05 Searching Annoy index using 1 thread, search_k = 2000
00:17:20 Annoy recall = 100%
00:17:21 Commencing smooth kNN distance calibration using 1 thread
00:17:24 Initializing from normalized Laplacian + noise
00:17:26 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:18:16 Optimization finished
00:18:18 UMAP embedding parameters a = 0.9922 b = 1.112
00:18:18 Read 49148 rows and found 45 numeric columns
00:18:18 Using Annoy for neighbor search, n_neighbors = 20
00:18:18 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:18:29 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb53d3f74d1
00:18:29 Searching Annoy index using 1 thread, search_k = 2000
00:18:44 Annoy recall = 100%
00:18:45 Commencing smooth kNN distance calibration using 1 thread
00:18:47 Initializing from normalized Laplacian + noise
00:18:49 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:19:39 Optimization finished
00:19:42 UMAP embedding parameters a = 0.9922 b = 1.112
00:19:42 Read 49148 rows and found 45 numeric columns
00:19:42 Using Annoy for neighbor search, n_neighbors = 20
00:19:42 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:19:52 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5b44a20c
00:19:52 Searching Annoy index using 1 thread, search_k = 2000
00:20:08 Annoy recall = 100%
00:20:08 Commencing smooth kNN distance calibration using 1 thread
00:20:11 Initializing from normalized Laplacian + noise
00:20:13 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:21:03 Optimization finished
00:21:05 UMAP embedding parameters a = 0.9922 b = 1.112
00:21:05 Read 49148 rows and found 45 numeric columns
00:21:05 Using Annoy for neighbor search, n_neighbors = 20
00:21:05 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:21:16 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb57bca741b
00:21:16 Searching Annoy index using 1 thread, search_k = 2000
00:21:31 Annoy recall = 100%
00:21:32 Commencing smooth kNN distance calibration using 1 thread
00:21:34 Initializing from normalized Laplacian + noise
00:21:36 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:22:27 Optimization finished
00:22:29 UMAP embedding parameters a = 0.9922 b = 1.112
00:22:29 Read 49148 rows and found 45 numeric columns
00:22:29 Using Annoy for neighbor search, n_neighbors = 20
00:22:29 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:22:40 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb54525cc96
00:22:40 Searching Annoy index using 1 thread, search_k = 2000
00:22:55 Annoy recall = 100%
00:22:56 Commencing smooth kNN distance calibration using 1 thread
00:22:58 Initializing from normalized Laplacian + noise
00:23:00 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:23:51 Optimization finished
00:23:53 UMAP embedding parameters a = 0.9922 b = 1.112
00:23:53 Read 49148 rows and found 45 numeric columns
00:23:53 Using Annoy for neighbor search, n_neighbors = 20
00:23:53 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:24:04 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb52175d8b4
00:24:04 Searching Annoy index using 1 thread, search_k = 2000
00:24:19 Annoy recall = 100%
00:24:20 Commencing smooth kNN distance calibration using 1 thread
00:24:23 Initializing from normalized Laplacian + noise
00:24:25 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:25:15 Optimization finished
00:25:17 UMAP embedding parameters a = 0.9922 b = 1.112
00:25:17 Read 49148 rows and found 45 numeric columns
00:25:17 Using Annoy for neighbor search, n_neighbors = 20
00:25:17 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:25:28 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb548f15aba
00:25:28 Searching Annoy index using 1 thread, search_k = 2000
00:25:43 Annoy recall = 100%
00:25:44 Commencing smooth kNN distance calibration using 1 thread
00:25:47 Initializing from normalized Laplacian + noise
00:25:49 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:26:39 Optimization finished
00:26:42 UMAP embedding parameters a = 0.9922 b = 1.112
00:26:42 Read 49148 rows and found 45 numeric columns
00:26:42 Using Annoy for neighbor search, n_neighbors = 20
00:26:42 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:26:52 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb53963a471
00:26:52 Searching Annoy index using 1 thread, search_k = 2000
00:27:08 Annoy recall = 100%
00:27:09 Commencing smooth kNN distance calibration using 1 thread
00:27:11 Initializing from normalized Laplacian + noise
00:27:13 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:28:04 Optimization finished
00:28:06 UMAP embedding parameters a = 0.9922 b = 1.112
00:28:06 Read 49148 rows and found 45 numeric columns
00:28:06 Using Annoy for neighbor search, n_neighbors = 20
00:28:06 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:28:17 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb574dee19a
00:28:17 Searching Annoy index using 1 thread, search_k = 2000
00:28:32 Annoy recall = 100%
00:28:33 Commencing smooth kNN distance calibration using 1 thread
00:28:36 Initializing from normalized Laplacian + noise
00:28:38 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:29:28 Optimization finished
00:29:30 UMAP embedding parameters a = 0.9922 b = 1.112
00:29:30 Read 49148 rows and found 45 numeric columns
00:29:30 Using Annoy for neighbor search, n_neighbors = 20
00:29:30 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:29:40 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5409134d8
00:29:40 Searching Annoy index using 1 thread, search_k = 2000
00:29:56 Annoy recall = 100%
00:29:57 Commencing smooth kNN distance calibration using 1 thread
00:29:59 Initializing from normalized Laplacian + noise
00:30:01 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:30:52 Optimization finished
00:30:54 UMAP embedding parameters a = 0.9922 b = 1.112
00:30:54 Read 49148 rows and found 45 numeric columns
00:30:54 Using Annoy for neighbor search, n_neighbors = 20
00:30:54 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:31:05 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb57bcfc1e0
00:31:05 Searching Annoy index using 1 thread, search_k = 2000
00:31:20 Annoy recall = 100%
00:31:21 Commencing smooth kNN distance calibration using 1 thread
00:31:24 Initializing from normalized Laplacian + noise
00:31:26 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:32:15 Optimization finished
00:32:18 UMAP embedding parameters a = 0.9922 b = 1.112
00:32:18 Read 49148 rows and found 45 numeric columns
00:32:18 Using Annoy for neighbor search, n_neighbors = 20
00:32:18 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:32:28 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb57e4bdd29
00:32:28 Searching Annoy index using 1 thread, search_k = 2000
00:32:44 Annoy recall = 100%
00:32:45 Commencing smooth kNN distance calibration using 1 thread
00:32:47 Initializing from normalized Laplacian + noise
00:32:49 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:33:39 Optimization finished
00:33:41 UMAP embedding parameters a = 0.9922 b = 1.112
00:33:41 Read 49148 rows and found 45 numeric columns
00:33:41 Using Annoy for neighbor search, n_neighbors = 20
00:33:41 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:33:51 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5306c4de6
00:33:51 Searching Annoy index using 1 thread, search_k = 2000
00:34:07 Annoy recall = 100%
00:34:08 Commencing smooth kNN distance calibration using 1 thread
00:34:10 Initializing from normalized Laplacian + noise
00:34:12 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:35:02 Optimization finished
00:35:05 UMAP embedding parameters a = 0.9922 b = 1.112
00:35:05 Read 49148 rows and found 45 numeric columns
00:35:05 Using Annoy for neighbor search, n_neighbors = 20
00:35:05 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:35:15 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb51f5fc46b
00:35:15 Searching Annoy index using 1 thread, search_k = 2000
00:35:30 Annoy recall = 100%
00:35:31 Commencing smooth kNN distance calibration using 1 thread
00:35:34 Initializing from normalized Laplacian + noise
00:35:36 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:36:25 Optimization finished
00:36:28 UMAP embedding parameters a = 0.9922 b = 1.112
00:36:28 Read 49148 rows and found 45 numeric columns
00:36:28 Using Annoy for neighbor search, n_neighbors = 20
00:36:28 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:36:38 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5ee9887d
00:36:38 Searching Annoy index using 1 thread, search_k = 2000
00:36:54 Annoy recall = 100%
00:36:55 Commencing smooth kNN distance calibration using 1 thread
00:36:57 Initializing from normalized Laplacian + noise
00:36:59 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:37:49 Optimization finished
00:37:52 UMAP embedding parameters a = 0.9922 b = 1.112
00:37:52 Read 49148 rows and found 45 numeric columns
00:37:52 Using Annoy for neighbor search, n_neighbors = 20
00:37:52 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:38:02 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb54e326183
00:38:02 Searching Annoy index using 1 thread, search_k = 2000
00:38:18 Annoy recall = 100%
00:38:19 Commencing smooth kNN distance calibration using 1 thread
00:38:21 Initializing from normalized Laplacian + noise
00:38:23 Commencing optimization for 200 epochs, with 1404898 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:39:13 Optimization finished
00:39:16 UMAP embedding parameters a = 0.9922 b = 1.112
00:39:16 Read 49148 rows and found 45 numeric columns
00:39:16 Using Annoy for neighbor search, n_neighbors = 30
00:39:16 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:39:27 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb52516f00f
00:39:27 Searching Annoy index using 1 thread, search_k = 3000
00:39:47 Annoy recall = 100%
00:39:48 Commencing smooth kNN distance calibration using 1 thread
00:39:51 Initializing from normalized Laplacian + noise
00:39:54 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:40:51 Optimization finished
00:40:53 UMAP embedding parameters a = 0.9922 b = 1.112
00:40:53 Read 49148 rows and found 45 numeric columns
00:40:53 Using Annoy for neighbor search, n_neighbors = 30
00:40:53 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:41:04 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5537bd2c2
00:41:04 Searching Annoy index using 1 thread, search_k = 3000
00:41:23 Annoy recall = 100%
00:41:24 Commencing smooth kNN distance calibration using 1 thread
00:41:26 Initializing from normalized Laplacian + noise
00:41:29 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:42:27 Optimization finished
00:42:30 UMAP embedding parameters a = 0.9922 b = 1.112
00:42:30 Read 49148 rows and found 45 numeric columns
00:42:30 Using Annoy for neighbor search, n_neighbors = 30
00:42:30 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:42:40 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb534a2bd84
00:42:40 Searching Annoy index using 1 thread, search_k = 3000
00:43:01 Annoy recall = 100%
00:43:01 Commencing smooth kNN distance calibration using 1 thread
00:43:04 Initializing from normalized Laplacian + noise
00:43:07 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:44:05 Optimization finished
00:44:07 UMAP embedding parameters a = 0.9922 b = 1.112
00:44:07 Read 49148 rows and found 45 numeric columns
00:44:07 Using Annoy for neighbor search, n_neighbors = 30
00:44:07 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:44:18 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb57e1f534d
00:44:18 Searching Annoy index using 1 thread, search_k = 3000
00:44:38 Annoy recall = 100%
00:44:39 Commencing smooth kNN distance calibration using 1 thread
00:44:42 Initializing from normalized Laplacian + noise
00:44:45 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:45:43 Optimization finished
00:45:45 UMAP embedding parameters a = 0.9922 b = 1.112
00:45:45 Read 49148 rows and found 45 numeric columns
00:45:45 Using Annoy for neighbor search, n_neighbors = 30
00:45:45 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:45:56 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb547e02b6
00:45:56 Searching Annoy index using 1 thread, search_k = 3000
00:46:16 Annoy recall = 100%
00:46:17 Commencing smooth kNN distance calibration using 1 thread
00:46:20 Initializing from normalized Laplacian + noise
00:46:23 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:47:20 Optimization finished
00:47:23 UMAP embedding parameters a = 0.9922 b = 1.112
00:47:23 Read 49148 rows and found 45 numeric columns
00:47:23 Using Annoy for neighbor search, n_neighbors = 30
00:47:23 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:47:33 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb55f4fff2
00:47:33 Searching Annoy index using 1 thread, search_k = 3000
00:47:54 Annoy recall = 100%
00:47:55 Commencing smooth kNN distance calibration using 1 thread
00:47:58 Initializing from normalized Laplacian + noise
00:48:00 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:48:58 Optimization finished
00:49:00 UMAP embedding parameters a = 0.9922 b = 1.112
00:49:00 Read 49148 rows and found 45 numeric columns
00:49:00 Using Annoy for neighbor search, n_neighbors = 30
00:49:00 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:49:11 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb51dacf683
00:49:11 Searching Annoy index using 1 thread, search_k = 3000
00:49:31 Annoy recall = 100%
00:49:32 Commencing smooth kNN distance calibration using 1 thread
00:49:35 Initializing from normalized Laplacian + noise
00:49:38 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:50:36 Optimization finished
00:50:39 UMAP embedding parameters a = 0.9922 b = 1.112
00:50:39 Read 49148 rows and found 45 numeric columns
00:50:39 Using Annoy for neighbor search, n_neighbors = 30
00:50:39 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:50:49 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb52737a09d
00:50:49 Searching Annoy index using 1 thread, search_k = 3000
00:51:09 Annoy recall = 100%
00:51:10 Commencing smooth kNN distance calibration using 1 thread
00:51:13 Initializing from normalized Laplacian + noise
00:51:16 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:52:14 Optimization finished
00:52:17 UMAP embedding parameters a = 0.9922 b = 1.112
00:52:17 Read 49148 rows and found 45 numeric columns
00:52:17 Using Annoy for neighbor search, n_neighbors = 30
00:52:17 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:52:27 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb537fa5355
00:52:27 Searching Annoy index using 1 thread, search_k = 3000
00:52:48 Annoy recall = 100%
00:52:49 Commencing smooth kNN distance calibration using 1 thread
00:52:52 Initializing from normalized Laplacian + noise
00:52:54 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:53:51 Optimization finished
00:53:54 UMAP embedding parameters a = 0.9922 b = 1.112
00:53:54 Read 49148 rows and found 45 numeric columns
00:53:54 Using Annoy for neighbor search, n_neighbors = 30
00:53:54 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:54:04 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5779f0f32
00:54:04 Searching Annoy index using 1 thread, search_k = 3000
00:54:25 Annoy recall = 100%
00:54:26 Commencing smooth kNN distance calibration using 1 thread
00:54:29 Initializing from normalized Laplacian + noise
00:54:31 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:55:29 Optimization finished
00:55:32 UMAP embedding parameters a = 0.9922 b = 1.112
00:55:32 Read 49148 rows and found 45 numeric columns
00:55:32 Using Annoy for neighbor search, n_neighbors = 30
00:55:32 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:55:43 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb54a2b0f10
00:55:43 Searching Annoy index using 1 thread, search_k = 3000
00:56:03 Annoy recall = 100%
00:56:04 Commencing smooth kNN distance calibration using 1 thread
00:56:07 Initializing from normalized Laplacian + noise
00:56:10 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:57:07 Optimization finished
00:57:10 UMAP embedding parameters a = 0.9922 b = 1.112
00:57:10 Read 49148 rows and found 45 numeric columns
00:57:10 Using Annoy for neighbor search, n_neighbors = 30
00:57:10 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:57:20 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb51e299f49
00:57:20 Searching Annoy index using 1 thread, search_k = 3000
00:57:41 Annoy recall = 100%
00:57:41 Commencing smooth kNN distance calibration using 1 thread
00:57:44 Initializing from normalized Laplacian + noise
00:57:47 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:58:45 Optimization finished
00:58:47 UMAP embedding parameters a = 0.9922 b = 1.112
00:58:47 Read 49148 rows and found 45 numeric columns
00:58:47 Using Annoy for neighbor search, n_neighbors = 30
00:58:47 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
00:58:58 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb52fc76004
00:58:58 Searching Annoy index using 1 thread, search_k = 3000
00:59:18 Annoy recall = 100%
00:59:19 Commencing smooth kNN distance calibration using 1 thread
00:59:22 Initializing from normalized Laplacian + noise
00:59:24 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:00:22 Optimization finished
01:00:24 UMAP embedding parameters a = 0.9922 b = 1.112
01:00:24 Read 49148 rows and found 45 numeric columns
01:00:24 Using Annoy for neighbor search, n_neighbors = 30
01:00:24 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:00:34 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb54e199ac3
01:00:34 Searching Annoy index using 1 thread, search_k = 3000
01:00:54 Annoy recall = 100%
01:00:55 Commencing smooth kNN distance calibration using 1 thread
01:00:58 Initializing from normalized Laplacian + noise
01:01:01 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:01:58 Optimization finished
01:02:00 UMAP embedding parameters a = 0.9922 b = 1.112
01:02:00 Read 49148 rows and found 45 numeric columns
01:02:00 Using Annoy for neighbor search, n_neighbors = 30
01:02:00 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:02:11 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5534cc4ea
01:02:11 Searching Annoy index using 1 thread, search_k = 3000
01:02:32 Annoy recall = 100%
01:02:32 Commencing smooth kNN distance calibration using 1 thread
01:02:36 Initializing from normalized Laplacian + noise
01:02:38 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:03:35 Optimization finished
01:03:38 UMAP embedding parameters a = 0.9922 b = 1.112
01:03:38 Read 49148 rows and found 45 numeric columns
01:03:38 Using Annoy for neighbor search, n_neighbors = 30
01:03:38 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:03:48 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb53adeb5f1
01:03:48 Searching Annoy index using 1 thread, search_k = 3000
01:04:08 Annoy recall = 100%
01:04:09 Commencing smooth kNN distance calibration using 1 thread
01:04:12 Initializing from normalized Laplacian + noise
01:04:14 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:05:11 Optimization finished
01:05:14 UMAP embedding parameters a = 0.9922 b = 1.112
01:05:14 Read 49148 rows and found 45 numeric columns
01:05:14 Using Annoy for neighbor search, n_neighbors = 30
01:05:14 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:05:24 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5b590f94
01:05:24 Searching Annoy index using 1 thread, search_k = 3000
01:05:44 Annoy recall = 100%
01:05:45 Commencing smooth kNN distance calibration using 1 thread
01:05:48 Initializing from normalized Laplacian + noise
01:05:51 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:06:48 Optimization finished
01:06:51 UMAP embedding parameters a = 0.9922 b = 1.112
01:06:51 Read 49148 rows and found 45 numeric columns
01:06:51 Using Annoy for neighbor search, n_neighbors = 30
01:06:51 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:07:01 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb55e9166f7
01:07:01 Searching Annoy index using 1 thread, search_k = 3000
01:07:22 Annoy recall = 100%
01:07:23 Commencing smooth kNN distance calibration using 1 thread
01:07:26 Initializing from normalized Laplacian + noise
01:07:29 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:08:26 Optimization finished
01:08:29 UMAP embedding parameters a = 0.9922 b = 1.112
01:08:29 Read 49148 rows and found 45 numeric columns
01:08:29 Using Annoy for neighbor search, n_neighbors = 30
01:08:29 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:08:39 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb536a92a0c
01:08:39 Searching Annoy index using 1 thread, search_k = 3000
01:09:00 Annoy recall = 100%
01:09:01 Commencing smooth kNN distance calibration using 1 thread
01:09:04 Initializing from normalized Laplacian + noise
01:09:06 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:10:05 Optimization finished
01:10:07 UMAP embedding parameters a = 0.9922 b = 1.112
01:10:07 Read 49148 rows and found 45 numeric columns
01:10:07 Using Annoy for neighbor search, n_neighbors = 30
01:10:07 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:10:18 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5507edc2a
01:10:18 Searching Annoy index using 1 thread, search_k = 3000
01:10:38 Annoy recall = 100%
01:10:39 Commencing smooth kNN distance calibration using 1 thread
01:10:42 Initializing from normalized Laplacian + noise
01:10:45 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:11:43 Optimization finished
01:11:45 UMAP embedding parameters a = 0.9922 b = 1.112
01:11:45 Read 49148 rows and found 45 numeric columns
01:11:45 Using Annoy for neighbor search, n_neighbors = 30
01:11:45 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:11:56 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb573fab
01:11:56 Searching Annoy index using 1 thread, search_k = 3000
01:12:16 Annoy recall = 100%
01:12:17 Commencing smooth kNN distance calibration using 1 thread
01:12:20 Initializing from normalized Laplacian + noise
01:12:23 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:13:20 Optimization finished
01:13:23 UMAP embedding parameters a = 0.9922 b = 1.112
01:13:23 Read 49148 rows and found 45 numeric columns
01:13:23 Using Annoy for neighbor search, n_neighbors = 30
01:13:23 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:13:33 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb57f9a84c6
01:13:33 Searching Annoy index using 1 thread, search_k = 3000
01:13:53 Annoy recall = 100%
01:13:54 Commencing smooth kNN distance calibration using 1 thread
01:13:58 Initializing from normalized Laplacian + noise
01:14:00 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:14:58 Optimization finished
01:15:01 UMAP embedding parameters a = 0.9922 b = 1.112
01:15:01 Read 49148 rows and found 45 numeric columns
01:15:01 Using Annoy for neighbor search, n_neighbors = 30
01:15:01 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:15:11 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb59e2809c
01:15:11 Searching Annoy index using 1 thread, search_k = 3000
01:15:31 Annoy recall = 100%
01:15:32 Commencing smooth kNN distance calibration using 1 thread
01:15:35 Initializing from normalized Laplacian + noise
01:15:38 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:16:36 Optimization finished
01:16:38 UMAP embedding parameters a = 0.9922 b = 1.112
01:16:38 Read 49148 rows and found 45 numeric columns
01:16:38 Using Annoy for neighbor search, n_neighbors = 30
01:16:38 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:16:49 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb574e62146
01:16:49 Searching Annoy index using 1 thread, search_k = 3000
01:17:09 Annoy recall = 100%
01:17:10 Commencing smooth kNN distance calibration using 1 thread
01:17:13 Initializing from normalized Laplacian + noise
01:17:15 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:18:13 Optimization finished
01:18:15 UMAP embedding parameters a = 0.9922 b = 1.112
01:18:15 Read 49148 rows and found 45 numeric columns
01:18:15 Using Annoy for neighbor search, n_neighbors = 30
01:18:15 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:18:26 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5402bb99e
01:18:26 Searching Annoy index using 1 thread, search_k = 3000
01:18:46 Annoy recall = 100%
01:18:47 Commencing smooth kNN distance calibration using 1 thread
01:18:50 Initializing from normalized Laplacian + noise
01:18:53 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:19:51 Optimization finished
01:19:53 UMAP embedding parameters a = 0.9922 b = 1.112
01:19:53 Read 49148 rows and found 45 numeric columns
01:19:53 Using Annoy for neighbor search, n_neighbors = 30
01:19:53 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:20:04 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb55b2427c
01:20:04 Searching Annoy index using 1 thread, search_k = 3000
01:20:24 Annoy recall = 100%
01:20:25 Commencing smooth kNN distance calibration using 1 thread
01:20:28 Initializing from normalized Laplacian + noise
01:20:30 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:21:28 Optimization finished
01:21:30 UMAP embedding parameters a = 0.9922 b = 1.112
01:21:30 Read 49148 rows and found 45 numeric columns
01:21:30 Using Annoy for neighbor search, n_neighbors = 30
01:21:30 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:21:41 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb57331fe6f
01:21:41 Searching Annoy index using 1 thread, search_k = 3000
01:22:01 Annoy recall = 100%
01:22:02 Commencing smooth kNN distance calibration using 1 thread
01:22:05 Initializing from normalized Laplacian + noise
01:22:07 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:23:04 Optimization finished
01:23:07 UMAP embedding parameters a = 0.9922 b = 1.112
01:23:07 Read 49148 rows and found 45 numeric columns
01:23:07 Using Annoy for neighbor search, n_neighbors = 30
01:23:07 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:23:17 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb570980785
01:23:17 Searching Annoy index using 1 thread, search_k = 3000
01:23:37 Annoy recall = 100%
01:23:38 Commencing smooth kNN distance calibration using 1 thread
01:23:42 Initializing from normalized Laplacian + noise
01:23:44 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:24:42 Optimization finished
01:24:44 UMAP embedding parameters a = 0.9922 b = 1.112
01:24:44 Read 49148 rows and found 45 numeric columns
01:24:44 Using Annoy for neighbor search, n_neighbors = 30
01:24:44 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:24:54 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5251206e8
01:24:54 Searching Annoy index using 1 thread, search_k = 3000
01:25:14 Annoy recall = 100%
01:25:15 Commencing smooth kNN distance calibration using 1 thread
01:25:18 Initializing from normalized Laplacian + noise
01:25:21 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:26:18 Optimization finished
01:26:20 UMAP embedding parameters a = 0.9922 b = 1.112
01:26:20 Read 49148 rows and found 45 numeric columns
01:26:20 Using Annoy for neighbor search, n_neighbors = 30
01:26:20 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:26:31 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb521b86ed
01:26:31 Searching Annoy index using 1 thread, search_k = 3000
01:26:51 Annoy recall = 100%
01:26:52 Commencing smooth kNN distance calibration using 1 thread
01:26:55 Initializing from normalized Laplacian + noise
01:26:58 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:27:56 Optimization finished
01:27:59 UMAP embedding parameters a = 0.9922 b = 1.112
01:27:59 Read 49148 rows and found 45 numeric columns
01:27:59 Using Annoy for neighbor search, n_neighbors = 30
01:27:59 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:28:09 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb53eca6908
01:28:09 Searching Annoy index using 1 thread, search_k = 3000
01:28:29 Annoy recall = 100%
01:28:30 Commencing smooth kNN distance calibration using 1 thread
01:28:33 Initializing from normalized Laplacian + noise
01:28:36 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:29:33 Optimization finished
01:29:35 UMAP embedding parameters a = 0.9922 b = 1.112
01:29:35 Read 49148 rows and found 45 numeric columns
01:29:35 Using Annoy for neighbor search, n_neighbors = 30
01:29:35 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:29:46 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb54a28f6f7
01:29:46 Searching Annoy index using 1 thread, search_k = 3000
01:30:06 Annoy recall = 100%
01:30:07 Commencing smooth kNN distance calibration using 1 thread
01:30:10 Initializing from normalized Laplacian + noise
01:30:13 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:31:11 Optimization finished
01:31:13 UMAP embedding parameters a = 0.9922 b = 1.112
01:31:13 Read 49148 rows and found 45 numeric columns
01:31:13 Using Annoy for neighbor search, n_neighbors = 30
01:31:13 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:31:24 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5559759af
01:31:24 Searching Annoy index using 1 thread, search_k = 3000
01:31:44 Annoy recall = 100%
01:31:45 Commencing smooth kNN distance calibration using 1 thread
01:31:48 Initializing from normalized Laplacian + noise
01:31:50 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:32:48 Optimization finished
01:32:50 UMAP embedding parameters a = 0.9922 b = 1.112
01:32:50 Read 49148 rows and found 45 numeric columns
01:32:50 Using Annoy for neighbor search, n_neighbors = 30
01:32:50 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:33:01 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5736d268c
01:33:01 Searching Annoy index using 1 thread, search_k = 3000
01:33:21 Annoy recall = 100%
01:33:22 Commencing smooth kNN distance calibration using 1 thread
01:33:25 Initializing from normalized Laplacian + noise
01:33:28 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:34:25 Optimization finished
01:34:27 UMAP embedding parameters a = 0.9922 b = 1.112
01:34:27 Read 49148 rows and found 45 numeric columns
01:34:27 Using Annoy for neighbor search, n_neighbors = 30
01:34:27 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:34:37 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb548484a44
01:34:37 Searching Annoy index using 1 thread, search_k = 3000
01:34:57 Annoy recall = 100%
01:34:58 Commencing smooth kNN distance calibration using 1 thread
01:35:01 Initializing from normalized Laplacian + noise
01:35:04 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:36:02 Optimization finished
01:36:04 UMAP embedding parameters a = 0.9922 b = 1.112
01:36:04 Read 49148 rows and found 45 numeric columns
01:36:04 Using Annoy for neighbor search, n_neighbors = 30
01:36:04 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:36:15 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb55a155c66
01:36:15 Searching Annoy index using 1 thread, search_k = 3000
01:36:35 Annoy recall = 100%
01:36:36 Commencing smooth kNN distance calibration using 1 thread
01:36:39 Initializing from normalized Laplacian + noise
01:36:42 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:37:40 Optimization finished
01:37:42 UMAP embedding parameters a = 0.9922 b = 1.112
01:37:42 Read 49148 rows and found 45 numeric columns
01:37:42 Using Annoy for neighbor search, n_neighbors = 30
01:37:42 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:37:53 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb57962267e
01:37:53 Searching Annoy index using 1 thread, search_k = 3000
01:38:13 Annoy recall = 100%
01:38:14 Commencing smooth kNN distance calibration using 1 thread
01:38:17 Initializing from normalized Laplacian + noise
01:38:20 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:39:18 Optimization finished
01:39:20 UMAP embedding parameters a = 0.9922 b = 1.112
01:39:20 Read 49148 rows and found 45 numeric columns
01:39:20 Using Annoy for neighbor search, n_neighbors = 30
01:39:20 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:39:31 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb565f540c7
01:39:31 Searching Annoy index using 1 thread, search_k = 3000
01:39:51 Annoy recall = 100%
01:39:52 Commencing smooth kNN distance calibration using 1 thread
01:39:55 Initializing from normalized Laplacian + noise
01:39:58 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:40:55 Optimization finished
01:40:58 UMAP embedding parameters a = 0.9922 b = 1.112
01:40:58 Read 49148 rows and found 45 numeric columns
01:40:58 Using Annoy for neighbor search, n_neighbors = 30
01:40:58 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:41:08 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb514cfd03
01:41:08 Searching Annoy index using 1 thread, search_k = 3000
01:41:29 Annoy recall = 100%
01:41:30 Commencing smooth kNN distance calibration using 1 thread
01:41:33 Initializing from normalized Laplacian + noise
01:41:35 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:42:34 Optimization finished
01:42:36 UMAP embedding parameters a = 0.9922 b = 1.112
01:42:36 Read 49148 rows and found 45 numeric columns
01:42:36 Using Annoy for neighbor search, n_neighbors = 30
01:42:36 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:42:47 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5315c79d3
01:42:47 Searching Annoy index using 1 thread, search_k = 3000
01:43:07 Annoy recall = 100%
01:43:08 Commencing smooth kNN distance calibration using 1 thread
01:43:11 Initializing from normalized Laplacian + noise
01:43:14 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:44:11 Optimization finished
01:44:14 UMAP embedding parameters a = 0.9922 b = 1.112
01:44:14 Read 49148 rows and found 45 numeric columns
01:44:14 Using Annoy for neighbor search, n_neighbors = 30
01:44:14 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:44:24 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb55d944ffa
01:44:24 Searching Annoy index using 1 thread, search_k = 3000
01:44:45 Annoy recall = 100%
01:44:45 Commencing smooth kNN distance calibration using 1 thread
01:44:49 Initializing from normalized Laplacian + noise
01:44:51 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:45:49 Optimization finished
01:45:51 UMAP embedding parameters a = 0.9922 b = 1.112
01:45:51 Read 49148 rows and found 45 numeric columns
01:45:51 Using Annoy for neighbor search, n_neighbors = 30
01:45:51 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:46:02 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb54b780c14
01:46:02 Searching Annoy index using 1 thread, search_k = 3000
01:46:22 Annoy recall = 100%
01:46:23 Commencing smooth kNN distance calibration using 1 thread
01:46:26 Initializing from normalized Laplacian + noise
01:46:28 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:47:26 Optimization finished
01:47:28 UMAP embedding parameters a = 0.9922 b = 1.112
01:47:28 Read 49148 rows and found 45 numeric columns
01:47:28 Using Annoy for neighbor search, n_neighbors = 30
01:47:28 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:47:39 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb54f86191d
01:47:39 Searching Annoy index using 1 thread, search_k = 3000
01:47:59 Annoy recall = 100%
01:48:00 Commencing smooth kNN distance calibration using 1 thread
01:48:03 Initializing from normalized Laplacian + noise
01:48:05 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:49:03 Optimization finished
01:49:05 UMAP embedding parameters a = 0.9922 b = 1.112
01:49:05 Read 49148 rows and found 45 numeric columns
01:49:05 Using Annoy for neighbor search, n_neighbors = 30
01:49:05 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:49:16 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5d5baffe
01:49:16 Searching Annoy index using 1 thread, search_k = 3000
01:49:36 Annoy recall = 100%
01:49:37 Commencing smooth kNN distance calibration using 1 thread
01:49:40 Initializing from normalized Laplacian + noise
01:49:43 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:50:40 Optimization finished
01:50:42 UMAP embedding parameters a = 0.9922 b = 1.112
01:50:42 Read 49148 rows and found 45 numeric columns
01:50:42 Using Annoy for neighbor search, n_neighbors = 30
01:50:42 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:50:52 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb51991a6d7
01:50:53 Searching Annoy index using 1 thread, search_k = 3000
01:51:12 Annoy recall = 100%
01:51:13 Commencing smooth kNN distance calibration using 1 thread
01:51:16 Initializing from normalized Laplacian + noise
01:51:19 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:52:16 Optimization finished
01:52:19 UMAP embedding parameters a = 0.9922 b = 1.112
01:52:19 Read 49148 rows and found 45 numeric columns
01:52:19 Using Annoy for neighbor search, n_neighbors = 30
01:52:19 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:52:29 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb522d2de07
01:52:30 Searching Annoy index using 1 thread, search_k = 3000
01:52:49 Annoy recall = 100%
01:52:50 Commencing smooth kNN distance calibration using 1 thread
01:52:54 Initializing from normalized Laplacian + noise
01:52:56 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:53:55 Optimization finished
01:53:58 UMAP embedding parameters a = 0.9922 b = 1.112
01:53:58 Read 49148 rows and found 45 numeric columns
01:53:58 Using Annoy for neighbor search, n_neighbors = 30
01:53:58 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:54:08 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5483a65ef
01:54:08 Searching Annoy index using 1 thread, search_k = 3000
01:54:29 Annoy recall = 100%
01:54:30 Commencing smooth kNN distance calibration using 1 thread
01:54:33 Initializing from normalized Laplacian + noise
01:54:35 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:55:32 Optimization finished
01:55:35 UMAP embedding parameters a = 0.9922 b = 1.112
01:55:35 Read 49148 rows and found 45 numeric columns
01:55:35 Using Annoy for neighbor search, n_neighbors = 30
01:55:35 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:55:45 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb524eab66c
01:55:45 Searching Annoy index using 1 thread, search_k = 3000
01:56:06 Annoy recall = 100%
01:56:06 Commencing smooth kNN distance calibration using 1 thread
01:56:09 Initializing from normalized Laplacian + noise
01:56:12 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:57:09 Optimization finished
01:57:11 UMAP embedding parameters a = 0.9922 b = 1.112
01:57:11 Read 49148 rows and found 45 numeric columns
01:57:11 Using Annoy for neighbor search, n_neighbors = 30
01:57:11 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:57:22 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb516444fe
01:57:22 Searching Annoy index using 1 thread, search_k = 3000
01:57:42 Annoy recall = 100%
01:57:43 Commencing smooth kNN distance calibration using 1 thread
01:57:46 Initializing from normalized Laplacian + noise
01:57:49 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:58:46 Optimization finished
01:58:48 UMAP embedding parameters a = 0.9922 b = 1.112
01:58:48 Read 49148 rows and found 45 numeric columns
01:58:48 Using Annoy for neighbor search, n_neighbors = 30
01:58:48 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
01:58:59 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb57ee38ffc
01:58:59 Searching Annoy index using 1 thread, search_k = 3000
01:59:19 Annoy recall = 100%
01:59:20 Commencing smooth kNN distance calibration using 1 thread
01:59:23 Initializing from normalized Laplacian + noise
01:59:25 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:00:22 Optimization finished
02:00:25 UMAP embedding parameters a = 0.9922 b = 1.112
02:00:25 Read 49148 rows and found 45 numeric columns
02:00:25 Using Annoy for neighbor search, n_neighbors = 40
02:00:25 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:00:35 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb575699296
02:00:35 Searching Annoy index using 1 thread, search_k = 4000
02:01:00 Annoy recall = 100%
02:01:01 Commencing smooth kNN distance calibration using 1 thread
02:01:05 Initializing from normalized Laplacian + noise
02:01:08 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:02:11 Optimization finished
02:02:13 UMAP embedding parameters a = 0.9922 b = 1.112
02:02:13 Read 49148 rows and found 45 numeric columns
02:02:13 Using Annoy for neighbor search, n_neighbors = 40
02:02:13 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:02:24 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb516b84aa
02:02:24 Searching Annoy index using 1 thread, search_k = 4000
02:02:49 Annoy recall = 100%
02:02:50 Commencing smooth kNN distance calibration using 1 thread
02:02:54 Initializing from normalized Laplacian + noise
02:02:57 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:04:00 Optimization finished
02:04:02 UMAP embedding parameters a = 0.9922 b = 1.112
02:04:02 Read 49148 rows and found 45 numeric columns
02:04:02 Using Annoy for neighbor search, n_neighbors = 40
02:04:02 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:04:13 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb57e7e14c2
02:04:13 Searching Annoy index using 1 thread, search_k = 4000
02:04:39 Annoy recall = 100%
02:04:39 Commencing smooth kNN distance calibration using 1 thread
02:04:43 Initializing from normalized Laplacian + noise
02:04:46 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:05:49 Optimization finished
02:05:51 UMAP embedding parameters a = 0.9922 b = 1.112
02:05:51 Read 49148 rows and found 45 numeric columns
02:05:51 Using Annoy for neighbor search, n_neighbors = 40
02:05:51 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:06:02 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb57f4c1332
02:06:02 Searching Annoy index using 1 thread, search_k = 4000
02:06:26 Annoy recall = 100%
02:06:27 Commencing smooth kNN distance calibration using 1 thread
02:06:31 Initializing from normalized Laplacian + noise
02:06:34 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:07:36 Optimization finished
02:07:38 UMAP embedding parameters a = 0.9922 b = 1.112
02:07:38 Read 49148 rows and found 45 numeric columns
02:07:38 Using Annoy for neighbor search, n_neighbors = 40
02:07:38 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:07:49 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb57651a5f0
02:07:49 Searching Annoy index using 1 thread, search_k = 4000
02:08:14 Annoy recall = 100%
02:08:15 Commencing smooth kNN distance calibration using 1 thread
02:08:18 Initializing from normalized Laplacian + noise
02:08:22 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:09:24 Optimization finished
02:09:26 UMAP embedding parameters a = 0.9922 b = 1.112
02:09:26 Read 49148 rows and found 45 numeric columns
02:09:26 Using Annoy for neighbor search, n_neighbors = 40
02:09:26 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:09:37 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb53ea9ce61
02:09:37 Searching Annoy index using 1 thread, search_k = 4000
02:10:02 Annoy recall = 100%
02:10:03 Commencing smooth kNN distance calibration using 1 thread
02:10:07 Initializing from normalized Laplacian + noise
02:10:10 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:11:12 Optimization finished
02:11:14 UMAP embedding parameters a = 0.9922 b = 1.112
02:11:14 Read 49148 rows and found 45 numeric columns
02:11:14 Using Annoy for neighbor search, n_neighbors = 40
02:11:14 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:11:25 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb54fe55af
02:11:25 Searching Annoy index using 1 thread, search_k = 4000
02:11:50 Annoy recall = 100%
02:11:51 Commencing smooth kNN distance calibration using 1 thread
02:11:55 Initializing from normalized Laplacian + noise
02:11:58 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:13:02 Optimization finished
02:13:04 UMAP embedding parameters a = 0.9922 b = 1.112
02:13:04 Read 49148 rows and found 45 numeric columns
02:13:04 Using Annoy for neighbor search, n_neighbors = 40
02:13:04 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:13:15 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb56983a45f
02:13:15 Searching Annoy index using 1 thread, search_k = 4000
02:13:40 Annoy recall = 100%
02:13:41 Commencing smooth kNN distance calibration using 1 thread
02:13:45 Initializing from normalized Laplacian + noise
02:13:48 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:14:51 Optimization finished
02:14:54 UMAP embedding parameters a = 0.9922 b = 1.112
02:14:54 Read 49148 rows and found 45 numeric columns
02:14:54 Using Annoy for neighbor search, n_neighbors = 40
02:14:54 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:15:05 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb52f41d5e6
02:15:05 Searching Annoy index using 1 thread, search_k = 4000
02:15:29 Annoy recall = 100%
02:15:30 Commencing smooth kNN distance calibration using 1 thread
02:15:34 Initializing from normalized Laplacian + noise
02:15:38 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:16:41 Optimization finished
02:16:43 UMAP embedding parameters a = 0.9922 b = 1.112
02:16:43 Read 49148 rows and found 45 numeric columns
02:16:43 Using Annoy for neighbor search, n_neighbors = 40
02:16:43 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:16:54 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb52a105c97
02:16:54 Searching Annoy index using 1 thread, search_k = 4000
02:17:19 Annoy recall = 100%
02:17:20 Commencing smooth kNN distance calibration using 1 thread
02:17:23 Initializing from normalized Laplacian + noise
02:17:27 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:18:31 Optimization finished
02:18:34 UMAP embedding parameters a = 0.9922 b = 1.112
02:18:34 Read 49148 rows and found 45 numeric columns
02:18:34 Using Annoy for neighbor search, n_neighbors = 40
02:18:34 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:18:44 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb56b9f2b4c
02:18:44 Searching Annoy index using 1 thread, search_k = 4000
02:19:09 Annoy recall = 100%
02:19:10 Commencing smooth kNN distance calibration using 1 thread
02:19:14 Initializing from normalized Laplacian + noise
02:19:17 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:20:21 Optimization finished
02:20:23 UMAP embedding parameters a = 0.9922 b = 1.112
02:20:23 Read 49148 rows and found 45 numeric columns
02:20:23 Using Annoy for neighbor search, n_neighbors = 40
02:20:23 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:20:34 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb56e0c3eee
02:20:34 Searching Annoy index using 1 thread, search_k = 4000
02:20:58 Annoy recall = 100%
02:20:59 Commencing smooth kNN distance calibration using 1 thread
02:21:03 Initializing from normalized Laplacian + noise
02:21:07 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:22:10 Optimization finished
02:22:13 UMAP embedding parameters a = 0.9922 b = 1.112
02:22:13 Read 49148 rows and found 45 numeric columns
02:22:13 Using Annoy for neighbor search, n_neighbors = 40
02:22:13 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:22:24 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb57439538e
02:22:24 Searching Annoy index using 1 thread, search_k = 4000
02:22:49 Annoy recall = 100%
02:22:49 Commencing smooth kNN distance calibration using 1 thread
02:22:54 Initializing from normalized Laplacian + noise
02:22:57 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:24:00 Optimization finished
02:24:03 UMAP embedding parameters a = 0.9922 b = 1.112
02:24:03 Read 49148 rows and found 45 numeric columns
02:24:03 Using Annoy for neighbor search, n_neighbors = 40
02:24:03 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:24:13 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5413684fc
02:24:13 Searching Annoy index using 1 thread, search_k = 4000
02:24:38 Annoy recall = 100%
02:24:39 Commencing smooth kNN distance calibration using 1 thread
02:24:43 Initializing from normalized Laplacian + noise
02:24:46 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:25:49 Optimization finished
02:25:51 UMAP embedding parameters a = 0.9922 b = 1.112
02:25:51 Read 49148 rows and found 45 numeric columns
02:25:51 Using Annoy for neighbor search, n_neighbors = 40
02:25:51 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:26:01 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb56179657a
02:26:01 Searching Annoy index using 1 thread, search_k = 4000
02:26:26 Annoy recall = 100%
02:26:27 Commencing smooth kNN distance calibration using 1 thread
02:26:31 Initializing from normalized Laplacian + noise
02:26:34 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:27:36 Optimization finished
02:27:39 UMAP embedding parameters a = 0.9922 b = 1.112
02:27:39 Read 49148 rows and found 45 numeric columns
02:27:39 Using Annoy for neighbor search, n_neighbors = 40
02:27:39 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:27:49 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb53c819dd3
02:27:49 Searching Annoy index using 1 thread, search_k = 4000
02:28:14 Annoy recall = 100%
02:28:15 Commencing smooth kNN distance calibration using 1 thread
02:28:19 Initializing from normalized Laplacian + noise
02:28:22 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:29:25 Optimization finished
02:29:27 UMAP embedding parameters a = 0.9922 b = 1.112
02:29:27 Read 49148 rows and found 45 numeric columns
02:29:27 Using Annoy for neighbor search, n_neighbors = 40
02:29:27 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:29:37 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb51b4be162
02:29:37 Searching Annoy index using 1 thread, search_k = 4000
02:30:02 Annoy recall = 100%
02:30:03 Commencing smooth kNN distance calibration using 1 thread
02:30:07 Initializing from normalized Laplacian + noise
02:30:10 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:31:24 Optimization finished
02:31:28 UMAP embedding parameters a = 0.9922 b = 1.112
02:31:28 Read 49148 rows and found 45 numeric columns
02:31:28 Using Annoy for neighbor search, n_neighbors = 40
02:31:28 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:31:38 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb55adb8bf9
02:31:38 Searching Annoy index using 1 thread, search_k = 4000
02:32:02 Annoy recall = 100%
02:32:03 Commencing smooth kNN distance calibration using 1 thread
02:32:08 Initializing from normalized Laplacian + noise
02:32:13 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:33:47 Optimization finished
02:33:49 UMAP embedding parameters a = 0.9922 b = 1.112
02:33:49 Read 49148 rows and found 45 numeric columns
02:33:49 Using Annoy for neighbor search, n_neighbors = 40
02:33:49 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:34:00 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb52276de9a
02:34:00 Searching Annoy index using 1 thread, search_k = 4000
02:34:25 Annoy recall = 100%
02:34:26 Commencing smooth kNN distance calibration using 1 thread
02:34:30 Initializing from normalized Laplacian + noise
02:34:33 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:35:58 Optimization finished
02:36:02 UMAP embedding parameters a = 0.9922 b = 1.112
02:36:02 Read 49148 rows and found 45 numeric columns
02:36:02 Using Annoy for neighbor search, n_neighbors = 40
02:36:02 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:36:13 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb51c98de65
02:36:13 Searching Annoy index using 1 thread, search_k = 4000
02:36:37 Annoy recall = 100%
02:36:38 Commencing smooth kNN distance calibration using 1 thread
02:36:42 Initializing from normalized Laplacian + noise
02:36:46 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:37:52 Optimization finished
02:37:54 UMAP embedding parameters a = 0.9922 b = 1.112
02:37:54 Read 49148 rows and found 45 numeric columns
02:37:54 Using Annoy for neighbor search, n_neighbors = 40
02:37:54 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:38:05 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5c3805cc
02:38:05 Searching Annoy index using 1 thread, search_k = 4000
02:38:29 Annoy recall = 100%
02:38:30 Commencing smooth kNN distance calibration using 1 thread
02:38:34 Initializing from normalized Laplacian + noise
02:38:38 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:39:40 Optimization finished
02:39:42 UMAP embedding parameters a = 0.9922 b = 1.112
02:39:42 Read 49148 rows and found 45 numeric columns
02:39:42 Using Annoy for neighbor search, n_neighbors = 40
02:39:42 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:39:53 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5b2e94
02:39:53 Searching Annoy index using 1 thread, search_k = 4000
02:40:18 Annoy recall = 100%
02:40:19 Commencing smooth kNN distance calibration using 1 thread
02:40:23 Initializing from normalized Laplacian + noise
02:40:26 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:41:29 Optimization finished
02:41:31 UMAP embedding parameters a = 0.9922 b = 1.112
02:41:31 Read 49148 rows and found 45 numeric columns
02:41:31 Using Annoy for neighbor search, n_neighbors = 40
02:41:31 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:41:41 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb56810ea79
02:41:42 Searching Annoy index using 1 thread, search_k = 4000
02:42:06 Annoy recall = 100%
02:42:07 Commencing smooth kNN distance calibration using 1 thread
02:42:11 Initializing from normalized Laplacian + noise
02:42:14 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:43:17 Optimization finished
02:43:19 UMAP embedding parameters a = 0.9922 b = 1.112
02:43:20 Read 49148 rows and found 45 numeric columns
02:43:20 Using Annoy for neighbor search, n_neighbors = 40
02:43:20 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:43:30 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb55bbe1ee9
02:43:30 Searching Annoy index using 1 thread, search_k = 4000
02:43:55 Annoy recall = 100%
02:43:56 Commencing smooth kNN distance calibration using 1 thread
02:44:00 Initializing from normalized Laplacian + noise
02:44:03 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:45:06 Optimization finished
02:45:08 UMAP embedding parameters a = 0.9922 b = 1.112
02:45:08 Read 49148 rows and found 45 numeric columns
02:45:08 Using Annoy for neighbor search, n_neighbors = 40
02:45:08 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:45:19 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5d66de92
02:45:19 Searching Annoy index using 1 thread, search_k = 4000
02:45:43 Annoy recall = 100%
02:45:44 Commencing smooth kNN distance calibration using 1 thread
02:45:48 Initializing from normalized Laplacian + noise
02:45:52 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:46:54 Optimization finished
02:46:57 UMAP embedding parameters a = 0.9922 b = 1.112
02:46:57 Read 49148 rows and found 45 numeric columns
02:46:57 Using Annoy for neighbor search, n_neighbors = 40
02:46:57 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:47:07 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb51a29151
02:47:07 Searching Annoy index using 1 thread, search_k = 4000
02:47:32 Annoy recall = 100%
02:47:33 Commencing smooth kNN distance calibration using 1 thread
02:47:37 Initializing from normalized Laplacian + noise
02:47:40 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:48:43 Optimization finished
02:48:45 UMAP embedding parameters a = 0.9922 b = 1.112
02:48:45 Read 49148 rows and found 45 numeric columns
02:48:45 Using Annoy for neighbor search, n_neighbors = 40
02:48:45 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:48:56 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb57e90fcf1
02:48:56 Searching Annoy index using 1 thread, search_k = 4000
02:49:21 Annoy recall = 100%
02:49:22 Commencing smooth kNN distance calibration using 1 thread
02:49:26 Initializing from normalized Laplacian + noise
02:49:29 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:50:32 Optimization finished
02:50:34 UMAP embedding parameters a = 0.9922 b = 1.112
02:50:34 Read 49148 rows and found 45 numeric columns
02:50:34 Using Annoy for neighbor search, n_neighbors = 40
02:50:34 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:50:45 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb555a14482
02:50:45 Searching Annoy index using 1 thread, search_k = 4000
02:51:10 Annoy recall = 100%
02:51:11 Commencing smooth kNN distance calibration using 1 thread
02:51:14 Initializing from normalized Laplacian + noise
02:51:18 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:52:21 Optimization finished
02:52:23 UMAP embedding parameters a = 0.9922 b = 1.112
02:52:23 Read 49148 rows and found 45 numeric columns
02:52:23 Using Annoy for neighbor search, n_neighbors = 40
02:52:23 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:52:33 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5268d47bd
02:52:33 Searching Annoy index using 1 thread, search_k = 4000
02:52:58 Annoy recall = 100%
02:52:59 Commencing smooth kNN distance calibration using 1 thread
02:53:03 Initializing from normalized Laplacian + noise
02:53:07 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:54:09 Optimization finished
02:54:12 UMAP embedding parameters a = 0.9922 b = 1.112
02:54:12 Read 49148 rows and found 45 numeric columns
02:54:12 Using Annoy for neighbor search, n_neighbors = 40
02:54:12 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:54:22 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb57ff541ef
02:54:22 Searching Annoy index using 1 thread, search_k = 4000
02:54:47 Annoy recall = 100%
02:54:48 Commencing smooth kNN distance calibration using 1 thread
02:54:52 Initializing from normalized Laplacian + noise
02:54:56 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:55:58 Optimization finished
02:56:01 UMAP embedding parameters a = 0.9922 b = 1.112
02:56:01 Read 49148 rows and found 45 numeric columns
02:56:01 Using Annoy for neighbor search, n_neighbors = 40
02:56:01 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:56:11 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb55484d47e
02:56:11 Searching Annoy index using 1 thread, search_k = 4000
02:56:37 Annoy recall = 100%
02:56:38 Commencing smooth kNN distance calibration using 1 thread
02:56:41 Initializing from normalized Laplacian + noise
02:56:45 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:57:48 Optimization finished
02:57:50 UMAP embedding parameters a = 0.9922 b = 1.112
02:57:50 Read 49148 rows and found 45 numeric columns
02:57:50 Using Annoy for neighbor search, n_neighbors = 40
02:57:50 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:58:00 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb51bf6da53
02:58:00 Searching Annoy index using 1 thread, search_k = 4000
02:58:25 Annoy recall = 100%
02:58:26 Commencing smooth kNN distance calibration using 1 thread
02:58:30 Initializing from normalized Laplacian + noise
02:58:33 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:59:37 Optimization finished
02:59:39 UMAP embedding parameters a = 0.9922 b = 1.112
02:59:40 Read 49148 rows and found 45 numeric columns
02:59:40 Using Annoy for neighbor search, n_neighbors = 40
02:59:40 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
02:59:50 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5160c699
02:59:50 Searching Annoy index using 1 thread, search_k = 4000
03:00:16 Annoy recall = 100%
03:00:17 Commencing smooth kNN distance calibration using 1 thread
03:00:21 Initializing from normalized Laplacian + noise
03:00:24 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:01:27 Optimization finished
03:01:29 UMAP embedding parameters a = 0.9922 b = 1.112
03:01:29 Read 49148 rows and found 45 numeric columns
03:01:29 Using Annoy for neighbor search, n_neighbors = 40
03:01:29 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:01:40 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb55302e940
03:01:40 Searching Annoy index using 1 thread, search_k = 4000
03:02:04 Annoy recall = 100%
03:02:05 Commencing smooth kNN distance calibration using 1 thread
03:02:09 Initializing from normalized Laplacian + noise
03:02:12 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:03:15 Optimization finished
03:03:17 UMAP embedding parameters a = 0.9922 b = 1.112
03:03:18 Read 49148 rows and found 45 numeric columns
03:03:18 Using Annoy for neighbor search, n_neighbors = 40
03:03:18 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:03:28 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb51b42ed86
03:03:28 Searching Annoy index using 1 thread, search_k = 4000
03:03:53 Annoy recall = 100%
03:03:54 Commencing smooth kNN distance calibration using 1 thread
03:03:58 Initializing from normalized Laplacian + noise
03:04:01 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:05:05 Optimization finished
03:05:07 UMAP embedding parameters a = 0.9922 b = 1.112
03:05:07 Read 49148 rows and found 45 numeric columns
03:05:07 Using Annoy for neighbor search, n_neighbors = 40
03:05:07 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:05:18 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb577b26c89
03:05:18 Searching Annoy index using 1 thread, search_k = 4000
03:05:42 Annoy recall = 100%
03:05:43 Commencing smooth kNN distance calibration using 1 thread
03:05:47 Initializing from normalized Laplacian + noise
03:05:50 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:06:53 Optimization finished
03:06:55 UMAP embedding parameters a = 0.9922 b = 1.112
03:06:55 Read 49148 rows and found 45 numeric columns
03:06:55 Using Annoy for neighbor search, n_neighbors = 40
03:06:55 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:07:06 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb511acb7a1
03:07:06 Searching Annoy index using 1 thread, search_k = 4000
03:07:30 Annoy recall = 100%
03:07:31 Commencing smooth kNN distance calibration using 1 thread
03:07:35 Initializing from normalized Laplacian + noise
03:07:39 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:08:41 Optimization finished
03:08:44 UMAP embedding parameters a = 0.9922 b = 1.112
03:08:44 Read 49148 rows and found 45 numeric columns
03:08:44 Using Annoy for neighbor search, n_neighbors = 40
03:08:44 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:08:54 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb520414335
03:08:54 Searching Annoy index using 1 thread, search_k = 4000
03:09:19 Annoy recall = 100%
03:09:20 Commencing smooth kNN distance calibration using 1 thread
03:09:24 Initializing from normalized Laplacian + noise
03:09:27 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:10:30 Optimization finished
03:10:32 UMAP embedding parameters a = 0.9922 b = 1.112
03:10:32 Read 49148 rows and found 45 numeric columns
03:10:32 Using Annoy for neighbor search, n_neighbors = 40
03:10:32 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:10:42 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5613610e9
03:10:42 Searching Annoy index using 1 thread, search_k = 4000
03:11:07 Annoy recall = 100%
03:11:08 Commencing smooth kNN distance calibration using 1 thread
03:11:12 Initializing from normalized Laplacian + noise
03:11:15 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:12:18 Optimization finished
03:12:21 UMAP embedding parameters a = 0.9922 b = 1.112
03:12:21 Read 49148 rows and found 45 numeric columns
03:12:21 Using Annoy for neighbor search, n_neighbors = 40
03:12:21 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:12:31 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb540ee8d87
03:12:31 Searching Annoy index using 1 thread, search_k = 4000
03:12:56 Annoy recall = 100%
03:12:57 Commencing smooth kNN distance calibration using 1 thread
03:13:01 Initializing from normalized Laplacian + noise
03:13:04 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:14:07 Optimization finished
03:14:09 UMAP embedding parameters a = 0.9922 b = 1.112
03:14:09 Read 49148 rows and found 45 numeric columns
03:14:09 Using Annoy for neighbor search, n_neighbors = 40
03:14:09 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:14:19 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb54a519fcc
03:14:19 Searching Annoy index using 1 thread, search_k = 4000
03:14:44 Annoy recall = 100%
03:14:45 Commencing smooth kNN distance calibration using 1 thread
03:14:49 Initializing from normalized Laplacian + noise
03:14:52 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:15:54 Optimization finished
03:15:57 UMAP embedding parameters a = 0.9922 b = 1.112
03:15:57 Read 49148 rows and found 45 numeric columns
03:15:57 Using Annoy for neighbor search, n_neighbors = 40
03:15:57 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:16:07 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb54cd53c35
03:16:07 Searching Annoy index using 1 thread, search_k = 4000
03:16:32 Annoy recall = 100%
03:16:33 Commencing smooth kNN distance calibration using 1 thread
03:16:37 Initializing from normalized Laplacian + noise
03:16:40 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:17:43 Optimization finished
03:17:45 UMAP embedding parameters a = 0.9922 b = 1.112
03:17:45 Read 49148 rows and found 45 numeric columns
03:17:45 Using Annoy for neighbor search, n_neighbors = 40
03:17:45 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:17:56 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb52efacc75
03:17:56 Searching Annoy index using 1 thread, search_k = 4000
03:18:20 Annoy recall = 100%
03:18:21 Commencing smooth kNN distance calibration using 1 thread
03:18:25 Initializing from normalized Laplacian + noise
03:18:28 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:19:32 Optimization finished
03:19:34 UMAP embedding parameters a = 0.9922 b = 1.112
03:19:35 Read 49148 rows and found 45 numeric columns
03:19:35 Using Annoy for neighbor search, n_neighbors = 40
03:19:35 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:19:45 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb53e8af35a
03:19:45 Searching Annoy index using 1 thread, search_k = 4000
03:20:10 Annoy recall = 100%
03:20:11 Commencing smooth kNN distance calibration using 1 thread
03:20:14 Initializing from normalized Laplacian + noise
03:20:18 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:21:21 Optimization finished
03:21:23 UMAP embedding parameters a = 0.9922 b = 1.112
03:21:23 Read 49148 rows and found 45 numeric columns
03:21:23 Using Annoy for neighbor search, n_neighbors = 40
03:21:23 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:21:34 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5e0bc131
03:21:34 Searching Annoy index using 1 thread, search_k = 4000
03:21:58 Annoy recall = 100%
03:21:59 Commencing smooth kNN distance calibration using 1 thread
03:22:03 Initializing from normalized Laplacian + noise
03:22:07 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:23:10 Optimization finished
03:23:12 UMAP embedding parameters a = 0.9922 b = 1.112
03:23:12 Read 49148 rows and found 45 numeric columns
03:23:12 Using Annoy for neighbor search, n_neighbors = 40
03:23:12 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:23:22 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5107431f0
03:23:22 Searching Annoy index using 1 thread, search_k = 4000
03:23:47 Annoy recall = 100%
03:23:48 Commencing smooth kNN distance calibration using 1 thread
03:23:52 Initializing from normalized Laplacian + noise
03:23:55 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:24:59 Optimization finished
03:25:01 UMAP embedding parameters a = 0.9922 b = 1.112
03:25:01 Read 49148 rows and found 45 numeric columns
03:25:01 Using Annoy for neighbor search, n_neighbors = 40
03:25:01 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:25:12 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb57b0c912d
03:25:12 Searching Annoy index using 1 thread, search_k = 4000
03:25:37 Annoy recall = 100%
03:25:38 Commencing smooth kNN distance calibration using 1 thread
03:25:42 Initializing from normalized Laplacian + noise
03:25:45 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:26:48 Optimization finished
03:26:50 UMAP embedding parameters a = 0.9922 b = 1.112
03:26:50 Read 49148 rows and found 45 numeric columns
03:26:50 Using Annoy for neighbor search, n_neighbors = 40
03:26:50 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:27:01 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb52957a293
03:27:01 Searching Annoy index using 1 thread, search_k = 4000
03:27:26 Annoy recall = 100%
03:27:27 Commencing smooth kNN distance calibration using 1 thread
03:27:31 Initializing from normalized Laplacian + noise
03:27:34 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:28:36 Optimization finished
03:28:39 UMAP embedding parameters a = 0.9922 b = 1.112
03:28:39 Read 49148 rows and found 45 numeric columns
03:28:39 Using Annoy for neighbor search, n_neighbors = 40
03:28:39 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:28:49 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb56b4fbde9
03:28:49 Searching Annoy index using 1 thread, search_k = 4000
03:29:15 Annoy recall = 100%
03:29:16 Commencing smooth kNN distance calibration using 1 thread
03:29:20 Initializing from normalized Laplacian + noise
03:29:23 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:30:26 Optimization finished
03:30:28 UMAP embedding parameters a = 0.9922 b = 1.112
03:30:28 Read 49148 rows and found 45 numeric columns
03:30:28 Using Annoy for neighbor search, n_neighbors = 40
03:30:28 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:30:38 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb51d836fc8
03:30:38 Searching Annoy index using 1 thread, search_k = 4000
03:31:03 Annoy recall = 100%
03:31:04 Commencing smooth kNN distance calibration using 1 thread
03:31:08 Initializing from normalized Laplacian + noise
03:31:11 Commencing optimization for 200 epochs, with 2788162 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:32:14 Optimization finished
03:32:16 UMAP embedding parameters a = 0.9922 b = 1.112
03:32:16 Read 49148 rows and found 45 numeric columns
03:32:16 Using Annoy for neighbor search, n_neighbors = 50
03:32:16 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:32:26 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb545f080f9
03:32:27 Searching Annoy index using 1 thread, search_k = 5000
03:32:56 Annoy recall = 100%
03:32:57 Commencing smooth kNN distance calibration using 1 thread
03:33:02 Initializing from normalized Laplacian + noise
03:33:06 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:34:13 Optimization finished
03:34:15 UMAP embedding parameters a = 0.9922 b = 1.112
03:34:15 Read 49148 rows and found 45 numeric columns
03:34:15 Using Annoy for neighbor search, n_neighbors = 50
03:34:15 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:34:25 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb57787c3b5
03:34:26 Searching Annoy index using 1 thread, search_k = 5000
03:34:55 Annoy recall = 100%
03:34:56 Commencing smooth kNN distance calibration using 1 thread
03:35:01 Initializing from normalized Laplacian + noise
03:35:05 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:36:12 Optimization finished
03:36:14 UMAP embedding parameters a = 0.9922 b = 1.112
03:36:14 Read 49148 rows and found 45 numeric columns
03:36:14 Using Annoy for neighbor search, n_neighbors = 50
03:36:14 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:36:25 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb51d8e9e5c
03:36:25 Searching Annoy index using 1 thread, search_k = 5000
03:36:55 Annoy recall = 100%
03:36:56 Commencing smooth kNN distance calibration using 1 thread
03:37:00 Initializing from normalized Laplacian + noise
03:37:04 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:38:10 Optimization finished
03:38:12 UMAP embedding parameters a = 0.9922 b = 1.112
03:38:12 Read 49148 rows and found 45 numeric columns
03:38:12 Using Annoy for neighbor search, n_neighbors = 50
03:38:12 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:38:23 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb52e016b72
03:38:23 Searching Annoy index using 1 thread, search_k = 5000
03:38:52 Annoy recall = 100%
03:38:53 Commencing smooth kNN distance calibration using 1 thread
03:38:58 Initializing from normalized Laplacian + noise
03:39:02 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:40:09 Optimization finished
03:40:11 UMAP embedding parameters a = 0.9922 b = 1.112
03:40:11 Read 49148 rows and found 45 numeric columns
03:40:11 Using Annoy for neighbor search, n_neighbors = 50
03:40:11 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:40:22 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb55345e29f
03:40:22 Searching Annoy index using 1 thread, search_k = 5000
03:40:51 Annoy recall = 100%
03:40:52 Commencing smooth kNN distance calibration using 1 thread
03:40:57 Initializing from normalized Laplacian + noise
03:41:01 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:42:08 Optimization finished
03:42:11 UMAP embedding parameters a = 0.9922 b = 1.112
03:42:11 Read 49148 rows and found 45 numeric columns
03:42:11 Using Annoy for neighbor search, n_neighbors = 50
03:42:11 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:42:21 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb52af57cef
03:42:21 Searching Annoy index using 1 thread, search_k = 5000
03:42:51 Annoy recall = 100%
03:42:52 Commencing smooth kNN distance calibration using 1 thread
03:42:57 Initializing from normalized Laplacian + noise
03:43:01 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:44:08 Optimization finished
03:44:10 UMAP embedding parameters a = 0.9922 b = 1.112
03:44:10 Read 49148 rows and found 45 numeric columns
03:44:10 Using Annoy for neighbor search, n_neighbors = 50
03:44:10 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:44:21 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb52fa3fcc3
03:44:21 Searching Annoy index using 1 thread, search_k = 5000
03:44:50 Annoy recall = 100%
03:44:51 Commencing smooth kNN distance calibration using 1 thread
03:44:56 Initializing from normalized Laplacian + noise
03:45:00 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:46:07 Optimization finished
03:46:09 UMAP embedding parameters a = 0.9922 b = 1.112
03:46:09 Read 49148 rows and found 45 numeric columns
03:46:09 Using Annoy for neighbor search, n_neighbors = 50
03:46:09 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:46:20 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb551d6df90
03:46:20 Searching Annoy index using 1 thread, search_k = 5000
03:46:50 Annoy recall = 100%
03:46:51 Commencing smooth kNN distance calibration using 1 thread
03:46:55 Initializing from normalized Laplacian + noise
03:46:59 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:48:05 Optimization finished
03:48:08 UMAP embedding parameters a = 0.9922 b = 1.112
03:48:08 Read 49148 rows and found 45 numeric columns
03:48:08 Using Annoy for neighbor search, n_neighbors = 50
03:48:08 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:48:18 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb596c171
03:48:18 Searching Annoy index using 1 thread, search_k = 5000
03:48:49 Annoy recall = 100%
03:48:50 Commencing smooth kNN distance calibration using 1 thread
03:48:55 Initializing from normalized Laplacian + noise
03:48:59 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:50:07 Optimization finished
03:50:10 UMAP embedding parameters a = 0.9922 b = 1.112
03:50:10 Read 49148 rows and found 45 numeric columns
03:50:10 Using Annoy for neighbor search, n_neighbors = 50
03:50:10 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:50:20 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb556314480
03:50:20 Searching Annoy index using 1 thread, search_k = 5000
03:50:50 Annoy recall = 100%
03:50:51 Commencing smooth kNN distance calibration using 1 thread
03:50:55 Initializing from normalized Laplacian + noise
03:50:59 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:52:06 Optimization finished
03:52:08 UMAP embedding parameters a = 0.9922 b = 1.112
03:52:08 Read 49148 rows and found 45 numeric columns
03:52:08 Using Annoy for neighbor search, n_neighbors = 50
03:52:08 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:52:19 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb551cc217f
03:52:19 Searching Annoy index using 1 thread, search_k = 5000
03:52:48 Annoy recall = 100%
03:52:49 Commencing smooth kNN distance calibration using 1 thread
03:52:54 Initializing from normalized Laplacian + noise
03:52:58 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:54:05 Optimization finished
03:54:08 UMAP embedding parameters a = 0.9922 b = 1.112
03:54:08 Read 49148 rows and found 45 numeric columns
03:54:08 Using Annoy for neighbor search, n_neighbors = 50
03:54:08 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:54:18 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5551b95ef
03:54:18 Searching Annoy index using 1 thread, search_k = 5000
03:54:48 Annoy recall = 100%
03:54:49 Commencing smooth kNN distance calibration using 1 thread
03:54:54 Initializing from normalized Laplacian + noise
03:54:58 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:56:05 Optimization finished
03:56:07 UMAP embedding parameters a = 0.9922 b = 1.112
03:56:07 Read 49148 rows and found 45 numeric columns
03:56:07 Using Annoy for neighbor search, n_neighbors = 50
03:56:07 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:56:18 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb572281ed4
03:56:18 Searching Annoy index using 1 thread, search_k = 5000
03:56:47 Annoy recall = 100%
03:56:48 Commencing smooth kNN distance calibration using 1 thread
03:56:53 Initializing from normalized Laplacian + noise
03:56:57 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:58:06 Optimization finished
03:58:09 UMAP embedding parameters a = 0.9922 b = 1.112
03:58:09 Read 49148 rows and found 45 numeric columns
03:58:09 Using Annoy for neighbor search, n_neighbors = 50
03:58:09 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
03:58:20 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5532ce819
03:58:20 Searching Annoy index using 1 thread, search_k = 5000
03:58:49 Annoy recall = 100%
03:58:50 Commencing smooth kNN distance calibration using 1 thread
03:58:54 Initializing from normalized Laplacian + noise
03:58:58 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:00:05 Optimization finished
04:00:07 UMAP embedding parameters a = 0.9922 b = 1.112
04:00:07 Read 49148 rows and found 45 numeric columns
04:00:07 Using Annoy for neighbor search, n_neighbors = 50
04:00:07 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:00:18 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5281e7f2f
04:00:18 Searching Annoy index using 1 thread, search_k = 5000
04:00:47 Annoy recall = 100%
04:00:49 Commencing smooth kNN distance calibration using 1 thread
04:00:54 Initializing from normalized Laplacian + noise
04:00:58 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:02:06 Optimization finished
04:02:08 UMAP embedding parameters a = 0.9922 b = 1.112
04:02:08 Read 49148 rows and found 45 numeric columns
04:02:08 Using Annoy for neighbor search, n_neighbors = 50
04:02:08 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:02:19 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5d6b0c5a
04:02:19 Searching Annoy index using 1 thread, search_k = 5000
04:02:49 Annoy recall = 100%
04:02:50 Commencing smooth kNN distance calibration using 1 thread
04:02:54 Initializing from normalized Laplacian + noise
04:02:58 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:04:06 Optimization finished
04:04:08 UMAP embedding parameters a = 0.9922 b = 1.112
04:04:08 Read 49148 rows and found 45 numeric columns
04:04:08 Using Annoy for neighbor search, n_neighbors = 50
04:04:08 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:04:19 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb54adf54a2
04:04:19 Searching Annoy index using 1 thread, search_k = 5000
04:04:48 Annoy recall = 100%
04:04:49 Commencing smooth kNN distance calibration using 1 thread
04:04:54 Initializing from normalized Laplacian + noise
04:04:58 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:06:05 Optimization finished
04:06:07 UMAP embedding parameters a = 0.9922 b = 1.112
04:06:07 Read 49148 rows and found 45 numeric columns
04:06:07 Using Annoy for neighbor search, n_neighbors = 50
04:06:07 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:06:17 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb539cb36d1
04:06:17 Searching Annoy index using 1 thread, search_k = 5000
04:06:47 Annoy recall = 100%
04:06:48 Commencing smooth kNN distance calibration using 1 thread
04:06:52 Initializing from normalized Laplacian + noise
04:06:56 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:08:03 Optimization finished
04:08:05 UMAP embedding parameters a = 0.9922 b = 1.112
04:08:05 Read 49148 rows and found 45 numeric columns
04:08:05 Using Annoy for neighbor search, n_neighbors = 50
04:08:05 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:08:15 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb52dac4f8f
04:08:16 Searching Annoy index using 1 thread, search_k = 5000
04:08:45 Annoy recall = 100%
04:08:46 Commencing smooth kNN distance calibration using 1 thread
04:08:50 Initializing from normalized Laplacian + noise
04:08:54 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:10:02 Optimization finished
04:10:05 UMAP embedding parameters a = 0.9922 b = 1.112
04:10:05 Read 49148 rows and found 45 numeric columns
04:10:05 Using Annoy for neighbor search, n_neighbors = 50
04:10:05 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:10:15 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb52c15658b
04:10:15 Searching Annoy index using 1 thread, search_k = 5000
04:10:45 Annoy recall = 100%
04:10:46 Commencing smooth kNN distance calibration using 1 thread
04:10:50 Initializing from normalized Laplacian + noise
04:10:54 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:12:02 Optimization finished
04:12:04 UMAP embedding parameters a = 0.9922 b = 1.112
04:12:04 Read 49148 rows and found 45 numeric columns
04:12:04 Using Annoy for neighbor search, n_neighbors = 50
04:12:04 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:12:15 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb57ab9c458
04:12:15 Searching Annoy index using 1 thread, search_k = 5000
04:12:44 Annoy recall = 100%
04:12:45 Commencing smooth kNN distance calibration using 1 thread
04:12:49 Initializing from normalized Laplacian + noise
04:12:53 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:14:01 Optimization finished
04:14:03 UMAP embedding parameters a = 0.9922 b = 1.112
04:14:03 Read 49148 rows and found 45 numeric columns
04:14:03 Using Annoy for neighbor search, n_neighbors = 50
04:14:03 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:14:13 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb577fdef5b
04:14:13 Searching Annoy index using 1 thread, search_k = 5000
04:14:43 Annoy recall = 100%
04:14:44 Commencing smooth kNN distance calibration using 1 thread
04:14:48 Initializing from normalized Laplacian + noise
04:14:52 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:15:59 Optimization finished
04:16:01 UMAP embedding parameters a = 0.9922 b = 1.112
04:16:01 Read 49148 rows and found 45 numeric columns
04:16:01 Using Annoy for neighbor search, n_neighbors = 50
04:16:01 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:16:12 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb578eaa1c1
04:16:12 Searching Annoy index using 1 thread, search_k = 5000
04:16:41 Annoy recall = 100%
04:16:42 Commencing smooth kNN distance calibration using 1 thread
04:16:46 Initializing from normalized Laplacian + noise
04:16:50 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:17:59 Optimization finished
04:18:01 UMAP embedding parameters a = 0.9922 b = 1.112
04:18:01 Read 49148 rows and found 45 numeric columns
04:18:01 Using Annoy for neighbor search, n_neighbors = 50
04:18:01 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:18:12 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb529b490ce
04:18:12 Searching Annoy index using 1 thread, search_k = 5000
04:18:41 Annoy recall = 100%
04:18:42 Commencing smooth kNN distance calibration using 1 thread
04:18:47 Initializing from normalized Laplacian + noise
04:18:51 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:19:58 Optimization finished
04:20:00 UMAP embedding parameters a = 0.9922 b = 1.112
04:20:00 Read 49148 rows and found 45 numeric columns
04:20:00 Using Annoy for neighbor search, n_neighbors = 50
04:20:00 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:20:11 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb53688e2b5
04:20:11 Searching Annoy index using 1 thread, search_k = 5000
04:20:40 Annoy recall = 100%
04:20:41 Commencing smooth kNN distance calibration using 1 thread
04:20:46 Initializing from normalized Laplacian + noise
04:20:50 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:21:58 Optimization finished
04:22:00 UMAP embedding parameters a = 0.9922 b = 1.112
04:22:00 Read 49148 rows and found 45 numeric columns
04:22:00 Using Annoy for neighbor search, n_neighbors = 50
04:22:00 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:22:10 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb56f662f2
04:22:10 Searching Annoy index using 1 thread, search_k = 5000
04:22:39 Annoy recall = 100%
04:22:40 Commencing smooth kNN distance calibration using 1 thread
04:22:45 Initializing from normalized Laplacian + noise
04:22:49 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:23:56 Optimization finished
04:23:58 UMAP embedding parameters a = 0.9922 b = 1.112
04:23:58 Read 49148 rows and found 45 numeric columns
04:23:58 Using Annoy for neighbor search, n_neighbors = 50
04:23:58 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:24:08 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb53a28c2be
04:24:09 Searching Annoy index using 1 thread, search_k = 5000
04:24:38 Annoy recall = 100%
04:24:39 Commencing smooth kNN distance calibration using 1 thread
04:24:43 Initializing from normalized Laplacian + noise
04:24:47 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:25:54 Optimization finished
04:25:57 UMAP embedding parameters a = 0.9922 b = 1.112
04:25:57 Read 49148 rows and found 45 numeric columns
04:25:57 Using Annoy for neighbor search, n_neighbors = 50
04:25:57 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:26:07 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5319573e3
04:26:07 Searching Annoy index using 1 thread, search_k = 5000
04:26:37 Annoy recall = 100%
04:26:38 Commencing smooth kNN distance calibration using 1 thread
04:26:42 Initializing from normalized Laplacian + noise
04:26:46 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:27:55 Optimization finished
04:27:57 UMAP embedding parameters a = 0.9922 b = 1.112
04:27:57 Read 49148 rows and found 45 numeric columns
04:27:57 Using Annoy for neighbor search, n_neighbors = 50
04:27:57 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:28:07 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5304e0586
04:28:07 Searching Annoy index using 1 thread, search_k = 5000
04:28:37 Annoy recall = 100%
04:28:38 Commencing smooth kNN distance calibration using 1 thread
04:28:42 Initializing from normalized Laplacian + noise
04:28:46 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:29:53 Optimization finished
04:29:56 UMAP embedding parameters a = 0.9922 b = 1.112
04:29:56 Read 49148 rows and found 45 numeric columns
04:29:56 Using Annoy for neighbor search, n_neighbors = 50
04:29:56 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:30:06 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5257880a7
04:30:06 Searching Annoy index using 1 thread, search_k = 5000
04:30:36 Annoy recall = 100%
04:30:37 Commencing smooth kNN distance calibration using 1 thread
04:30:41 Initializing from normalized Laplacian + noise
04:30:45 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:31:52 Optimization finished
04:31:55 UMAP embedding parameters a = 0.9922 b = 1.112
04:31:55 Read 49148 rows and found 45 numeric columns
04:31:55 Using Annoy for neighbor search, n_neighbors = 50
04:31:55 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:32:05 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb54f18e3ab
04:32:05 Searching Annoy index using 1 thread, search_k = 5000
04:32:34 Annoy recall = 100%
04:32:35 Commencing smooth kNN distance calibration using 1 thread
04:32:40 Initializing from normalized Laplacian + noise
04:32:44 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:33:50 Optimization finished
04:33:53 UMAP embedding parameters a = 0.9922 b = 1.112
04:33:53 Read 49148 rows and found 45 numeric columns
04:33:53 Using Annoy for neighbor search, n_neighbors = 50
04:33:53 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:34:03 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5763e867f
04:34:03 Searching Annoy index using 1 thread, search_k = 5000
04:34:32 Annoy recall = 100%
04:34:33 Commencing smooth kNN distance calibration using 1 thread
04:34:38 Initializing from normalized Laplacian + noise
04:34:42 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:35:48 Optimization finished
04:35:50 UMAP embedding parameters a = 0.9922 b = 1.112
04:35:50 Read 49148 rows and found 45 numeric columns
04:35:50 Using Annoy for neighbor search, n_neighbors = 50
04:35:50 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:36:00 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb51d00445c
04:36:00 Searching Annoy index using 1 thread, search_k = 5000
04:36:30 Annoy recall = 100%
04:36:31 Commencing smooth kNN distance calibration using 1 thread
04:36:35 Initializing from normalized Laplacian + noise
04:36:39 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:37:46 Optimization finished
04:37:48 UMAP embedding parameters a = 0.9922 b = 1.112
04:37:48 Read 49148 rows and found 45 numeric columns
04:37:48 Using Annoy for neighbor search, n_neighbors = 50
04:37:48 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:37:59 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb56ca78207
04:37:59 Searching Annoy index using 1 thread, search_k = 5000
04:38:27 Annoy recall = 100%
04:38:28 Commencing smooth kNN distance calibration using 1 thread
04:38:33 Initializing from normalized Laplacian + noise
04:38:37 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:39:44 Optimization finished
04:39:47 UMAP embedding parameters a = 0.9922 b = 1.112
04:39:47 Read 49148 rows and found 45 numeric columns
04:39:47 Using Annoy for neighbor search, n_neighbors = 50
04:39:47 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:39:57 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5243ff1f1
04:39:57 Searching Annoy index using 1 thread, search_k = 5000
04:40:26 Annoy recall = 100%
04:40:27 Commencing smooth kNN distance calibration using 1 thread
04:40:32 Initializing from normalized Laplacian + noise
04:40:36 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:41:42 Optimization finished
04:41:45 UMAP embedding parameters a = 0.9922 b = 1.112
04:41:45 Read 49148 rows and found 45 numeric columns
04:41:45 Using Annoy for neighbor search, n_neighbors = 50
04:41:45 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:41:55 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5704626fb
04:41:55 Searching Annoy index using 1 thread, search_k = 5000
04:42:24 Annoy recall = 100%
04:42:25 Commencing smooth kNN distance calibration using 1 thread
04:42:30 Initializing from normalized Laplacian + noise
04:42:33 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:43:40 Optimization finished
04:43:42 UMAP embedding parameters a = 0.9922 b = 1.112
04:43:42 Read 49148 rows and found 45 numeric columns
04:43:42 Using Annoy for neighbor search, n_neighbors = 50
04:43:42 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:43:52 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5179cfef6
04:43:52 Searching Annoy index using 1 thread, search_k = 5000
04:44:21 Annoy recall = 100%
04:44:22 Commencing smooth kNN distance calibration using 1 thread
04:44:27 Initializing from normalized Laplacian + noise
04:44:31 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:45:37 Optimization finished
04:45:40 UMAP embedding parameters a = 0.9922 b = 1.112
04:45:40 Read 49148 rows and found 45 numeric columns
04:45:40 Using Annoy for neighbor search, n_neighbors = 50
04:45:40 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:45:50 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb553e3eeb5
04:45:50 Searching Annoy index using 1 thread, search_k = 5000
04:46:19 Annoy recall = 100%
04:46:20 Commencing smooth kNN distance calibration using 1 thread
04:46:25 Initializing from normalized Laplacian + noise
04:46:28 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:47:35 Optimization finished
04:47:38 UMAP embedding parameters a = 0.9922 b = 1.112
04:47:38 Read 49148 rows and found 45 numeric columns
04:47:38 Using Annoy for neighbor search, n_neighbors = 50
04:47:38 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:47:48 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5421d068b
04:47:48 Searching Annoy index using 1 thread, search_k = 5000
04:48:17 Annoy recall = 100%
04:48:18 Commencing smooth kNN distance calibration using 1 thread
04:48:23 Initializing from normalized Laplacian + noise
04:48:26 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:49:34 Optimization finished
04:49:37 UMAP embedding parameters a = 0.9922 b = 1.112
04:49:37 Read 49148 rows and found 45 numeric columns
04:49:37 Using Annoy for neighbor search, n_neighbors = 50
04:49:37 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:49:47 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb51833c067
04:49:47 Searching Annoy index using 1 thread, search_k = 5000
04:50:16 Annoy recall = 100%
04:50:17 Commencing smooth kNN distance calibration using 1 thread
04:50:22 Initializing from normalized Laplacian + noise
04:50:26 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:51:33 Optimization finished
04:51:35 UMAP embedding parameters a = 0.9922 b = 1.112
04:51:35 Read 49148 rows and found 45 numeric columns
04:51:35 Using Annoy for neighbor search, n_neighbors = 50
04:51:35 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:51:46 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb52a153335
04:51:46 Searching Annoy index using 1 thread, search_k = 5000
04:52:15 Annoy recall = 100%
04:52:16 Commencing smooth kNN distance calibration using 1 thread
04:52:21 Initializing from normalized Laplacian + noise
04:52:25 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:53:32 Optimization finished
04:53:35 UMAP embedding parameters a = 0.9922 b = 1.112
04:53:35 Read 49148 rows and found 45 numeric columns
04:53:35 Using Annoy for neighbor search, n_neighbors = 50
04:53:35 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:53:45 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb513e9280b
04:53:45 Searching Annoy index using 1 thread, search_k = 5000
04:54:13 Annoy recall = 100%
04:54:14 Commencing smooth kNN distance calibration using 1 thread
04:54:19 Initializing from normalized Laplacian + noise
04:54:22 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:55:28 Optimization finished
04:55:30 UMAP embedding parameters a = 0.9922 b = 1.112
04:55:31 Read 49148 rows and found 45 numeric columns
04:55:31 Using Annoy for neighbor search, n_neighbors = 50
04:55:31 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:55:41 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb56d4f5656
04:55:41 Searching Annoy index using 1 thread, search_k = 5000
04:56:10 Annoy recall = 100%
04:56:11 Commencing smooth kNN distance calibration using 1 thread
04:56:16 Initializing from normalized Laplacian + noise
04:56:20 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:57:27 Optimization finished
04:57:30 UMAP embedding parameters a = 0.9922 b = 1.112
04:57:30 Read 49148 rows and found 45 numeric columns
04:57:30 Using Annoy for neighbor search, n_neighbors = 50
04:57:30 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:57:40 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb51c3d5209
04:57:40 Searching Annoy index using 1 thread, search_k = 5000
04:58:09 Annoy recall = 100%
04:58:10 Commencing smooth kNN distance calibration using 1 thread
04:58:15 Initializing from normalized Laplacian + noise
04:58:18 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:59:25 Optimization finished
04:59:27 UMAP embedding parameters a = 0.9922 b = 1.112
04:59:27 Read 49148 rows and found 45 numeric columns
04:59:27 Using Annoy for neighbor search, n_neighbors = 50
04:59:27 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
04:59:38 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb567161024
04:59:38 Searching Annoy index using 1 thread, search_k = 5000
05:00:07 Annoy recall = 100%
05:00:08 Commencing smooth kNN distance calibration using 1 thread
05:00:13 Initializing from normalized Laplacian + noise
05:00:17 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
05:01:24 Optimization finished
05:01:26 UMAP embedding parameters a = 0.9922 b = 1.112
05:01:26 Read 49148 rows and found 45 numeric columns
05:01:26 Using Annoy for neighbor search, n_neighbors = 50
05:01:26 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
05:01:36 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb5156dd586
05:01:36 Searching Annoy index using 1 thread, search_k = 5000
05:02:06 Annoy recall = 100%
05:02:07 Commencing smooth kNN distance calibration using 1 thread
05:02:11 Initializing from normalized Laplacian + noise
05:02:15 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
05:03:21 Optimization finished
05:03:24 UMAP embedding parameters a = 0.9922 b = 1.112
05:03:24 Read 49148 rows and found 45 numeric columns
05:03:24 Using Annoy for neighbor search, n_neighbors = 50
05:03:24 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
05:03:34 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb529a85e63
05:03:34 Searching Annoy index using 1 thread, search_k = 5000
05:04:03 Annoy recall = 100%
05:04:04 Commencing smooth kNN distance calibration using 1 thread
05:04:09 Initializing from normalized Laplacian + noise
05:04:13 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
05:05:19 Optimization finished
05:05:22 UMAP embedding parameters a = 0.9922 b = 1.112
05:05:22 Read 49148 rows and found 45 numeric columns
05:05:22 Using Annoy for neighbor search, n_neighbors = 50
05:05:22 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
05:05:32 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb531f564c6
05:05:32 Searching Annoy index using 1 thread, search_k = 5000
05:06:01 Annoy recall = 100%
05:06:02 Commencing smooth kNN distance calibration using 1 thread
05:06:06 Initializing from normalized Laplacian + noise
05:06:10 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
05:07:17 Optimization finished
05:07:20 UMAP embedding parameters a = 0.9922 b = 1.112
05:07:20 Read 49148 rows and found 45 numeric columns
05:07:20 Using Annoy for neighbor search, n_neighbors = 50
05:07:20 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
05:07:30 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb54f390c57
05:07:30 Searching Annoy index using 1 thread, search_k = 5000
05:07:59 Annoy recall = 100%
05:08:00 Commencing smooth kNN distance calibration using 1 thread
05:08:04 Initializing from normalized Laplacian + noise
05:08:08 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
05:09:14 Optimization finished
05:09:16 UMAP embedding parameters a = 0.9922 b = 1.112
05:09:16 Read 49148 rows and found 45 numeric columns
05:09:16 Using Annoy for neighbor search, n_neighbors = 50
05:09:16 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
05:09:27 Writing NN index file to temp file /scratch/Rtmpmcym0v/file2fb55754adf2
05:09:27 Searching Annoy index using 1 thread, search_k = 5000
05:09:55 Annoy recall = 100%
05:09:56 Commencing smooth kNN distance calibration using 1 thread
05:10:01 Initializing from normalized Laplacian + noise
05:10:05 Commencing optimization for 200 epochs, with 3429964 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
05:11:12 Optimization finished
Attaching SeuratObject
Loading required package: ggraph
Loading required package: ggplot2
Loading required package: cowplot
Loading required package: Matrix
Loading required package: patchwork

Attaching package: ‘patchwork’

The following object is masked from ‘package:cowplot’:

    align_plots


Attaching package: ‘ggpubr’

The following object is masked from ‘package:cowplot’:

    get_legend


Attaching package: ‘ggthemes’

The following object is masked from ‘package:cowplot’:

    theme_map


Attaching package: ‘tidyr’

The following objects are masked from ‘package:Matrix’:

    expand, pack, unpack


Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union


Attaching package: ‘readr’

The following object is masked from ‘package:scales’:

    col_factor


clusterProfiler v3.18.1  For help: https://guangchuangyu.github.io/software/clusterProfiler

If you use clusterProfiler in published research, please cite:
Guangchuang Yu, Li-Gen Wang, Yanyan Han, Qing-Yu He. clusterProfiler: an R package for comparing biological themes among gene clusters. OMICS: A Journal of Integrative Biology. 2012, 16(5):284-287.

Attaching package: ‘clusterProfiler’

The following object is masked from ‘package:stats’:

    filter

Loading required package: princurve
Loading required package: viridisLite

Attaching package: ‘viridis’

The following object is masked from ‘package:scales’:

    viridis_pal

Loading required package: SummarizedExperiment
Loading required package: MatrixGenerics
Loading required package: matrixStats

Attaching package: ‘matrixStats’

The following object is masked from ‘package:dplyr’:

    count


Attaching package: ‘MatrixGenerics’

The following objects are masked from ‘package:matrixStats’:

    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,
    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,
    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,
    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,
    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,
    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,
    colWeightedMeans, colWeightedMedians, colWeightedSds,
    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,
    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,
    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,
    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,
    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,
    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,
    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,
    rowWeightedSds, rowWeightedVars

Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:dplyr’:

    combine, intersect, setdiff, union

The following object is masked from ‘package:rliger’:

    normalize

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames,
    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,
    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,
    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,
    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,
    union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following object is masked from ‘package:clusterProfiler’:

    rename

The following objects are masked from ‘package:dplyr’:

    first, rename

The following object is masked from ‘package:tidyr’:

    expand

The following object is masked from ‘package:Matrix’:

    expand

The following object is masked from ‘package:base’:

    expand.grid

Loading required package: IRanges

Attaching package: ‘IRanges’

The following object is masked from ‘package:clusterProfiler’:

    slice

The following objects are masked from ‘package:dplyr’:

    collapse, desc, slice

Loading required package: GenomeInfoDb
Loading required package: Biobase
Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.


Attaching package: ‘Biobase’

The following object is masked from ‘package:MatrixGenerics’:

    rowMedians

The following objects are masked from ‘package:matrixStats’:

    anyMissing, rowMedians


Attaching package: ‘SummarizedExperiment’

The following object is masked from ‘package:SeuratObject’:

    Assays

The following object is masked from ‘package:Seurat’:

    Assays


Attaching package: ‘enrichplot’

The following object is masked from ‘package:ggpubr’:

    color_palette

Loading required package: AnnotationDbi

Attaching package: ‘AnnotationDbi’

The following object is masked from ‘package:clusterProfiler’:

    select

The following object is masked from ‘package:dplyr’:

    select


Loading required package: registry
Loading required package: rngtools
Loading required package: cluster
NMF - BioConductor layer [OK] | Shared memory capabilities [OK] | Cores 2/2

Attaching package: ‘NMF’

The following object is masked from ‘package:S4Vectors’:

    nrun


Attaching package: ‘reshape2’

The following object is masked from ‘package:tidyr’:

    smiths

Warning message:
package ‘ggbeeswarm’ was built under R version 4.2.0 
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
14:42:41 UMAP embedding parameters a = 0.9922 b = 1.112
14:42:41 Read 49148 rows and found 45 numeric columns
14:42:41 Using Annoy for neighbor search, n_neighbors = 30
14:42:41 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
14:42:51 Writing NN index file to temp file /scratch/RtmpA66Sbx/file17dec2210bd30
14:42:51 Searching Annoy index using 1 thread, search_k = 3000
14:43:10 Annoy recall = 100%
14:43:11 Commencing smooth kNN distance calibration using 1 thread
14:43:14 Initializing from normalized Laplacian + noise
14:43:17 Commencing optimization for 200 epochs, with 2110320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
14:44:14 Optimization finished
